{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n  {\n    SELECT?pFrom \n    WHERE {\n      ns:James K. Polk ns:government.politician.government_positions_held?y. # James K. Polk\n     ?y ns:government.government_position_held.office_position_or_title?x ; \n         ns:government.government_position_held.basic_title ns:m.060c4 ; # President\n         ns:government.government_position_held.from?pFrom.\n    }\n  }\n  ns:James K. Polk ns:government.politician.government_positions_held?y. # James K. Polk\n ?y ns:government.government_position_held.office_position_or_title?x ; \n     ns:government.government_position_held.from?from.\n  \n  FILTER(xsd:dateTime(?pFrom) - xsd:dateTime(?from) > 0)\n}", "predict": "SELECT DISTINCT?x\nWHERE {\n  ns:James K. Polk ns:people.person.profession?x.\n ?x ns:common.topic.notable_types ns:m.01m9.  # James K. Polk\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Coronation Street)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Coronation Street ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Ken Barlow.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Coronation Street)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Coronation Street ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Ken Barlow.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:JaMarcus Russell)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:JaMarcus Russell ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamarcus Russell)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamarcus Russell ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Washington Carver)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Washington Carver ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Washington Carver)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Washington Carver ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:law.inventor.inventions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:law.inventor.inventions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Nixon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Nixon ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Nixon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Nixon ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ohio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ohio ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Governor of Ohio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Governor of Ohio ns:government.government_office_or_title.office_holders?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:government.us_president.vice_president?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:government.us_president.vice_president?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Fukushima Daiichi Nuclear Power Plant)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Fukushima Daiichi Nuclear Power Plant ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Fukushima Daiichi Nuclear Power Plant)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Fukushima Daiichi Nuclear Power Plant ns:location.location.street_address?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:base.aareas.schema.administrative_area.administrative_children?x.\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:UK constituent country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:base.aareas.schema.administrative_area.administrative_children?x.\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:UK constituent country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louisiana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louisiana ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louisiana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louisiana ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Augustine of Hippo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Augustine of Hippo ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Augustine of Hippo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Augustine of Hippo ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Keyshia Cole)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Keyshia Cole ns:people.person.parents?x.\n?x ns:people.person.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Keyshia Cole)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Keyshia Cole ns:people.person.parents?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Edgar Allan Poe)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Edgar Allan Poe ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Edgar Allan Poe)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Edgar Allan Poe ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Atlanta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Atlanta ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Atlanta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Atlanta ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anna Bligh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anna Bligh ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.district_represented?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anna Bligh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anna Bligh ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.jurisdiction_of_office?x.\n?y ns:government.government_position_held.basic_title ns:Electorate.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andy Murray)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andy Murray ns:tennis.tennis_player.year_turned_pro?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andy Murray)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andy Murray ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australian dollar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australian dollar ns:finance.currency.currency_code?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australian dollar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australian dollar ns:base.currency.current_exchange_rate.currency?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sweden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sweden ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sweden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sweden ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cam Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cam Newton ns:base.schemastaging.athlete_extra.salary?y.\n?y ns:base.schemastaging.athlete_salary.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cam Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cam Newton ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cam Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cam Newton ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:common.topic.notable_types ns:Professional Sports Team.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cam Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cam Newton ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:common.topic.notable_types ns:Professional Sports Team.\n?y ns:sports.sports_team_roster.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Frederick)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Frederick ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Frederick County)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Frederick County ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Frederick)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Frederick ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Frederick County)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Frederick County ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harper Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harper Lee ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:education.educational_institution.school_type ns:High school.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harper Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harper Lee ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:education.educational_institution.school_type ns:High school.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utah ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utah ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\tns:m.04qwhs ns:government.election.campaigns?y.\n\t?y ns:government.election_campaign.candidate?x.\nFILTER (?x!= ns:George W. Bush)\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George W. Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George W. Bush ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.office_position_or_title?x.\n?y ns:government.government_position_held.basic_title ns:President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Niall Ferguson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Niall Ferguson ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Niall Ferguson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Niall Ferguson ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Galápagos Islands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Galápagos Islands ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Galapagos Islands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Galapagos Islands ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Justin Bieber)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Justin Bieber ns:music.composer.compositions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Justin Bieber)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Justin Bieber ns:music.composer.compositions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Georges Clémenceau)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Georges Clémenceau ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Clemenceau)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Clemenceau ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arizona)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arizona ns:government.governmental_jurisdiction.official_symbols?y.\n?y ns:location.location_symbol_relationship.symbol?x.\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:State flower.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arizona)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arizona ns:government.governmental_jurisdiction.official_symbols?y.\n?y ns:location.location_symbol_relationship.symbol?x.\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:State flower.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rihanna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rihanna ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rihanna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rihanna ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Henry Harrison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Henry Harrison ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.from?x.\n?y ns:government.government_position_held.office_position_or_title ns:President of the United States.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Henry Harrison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Henry Harrison ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.from?x.\n?y ns:government.government_position_held.office_position_or_title ns:President of the United States.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Lopez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Lopez ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Lopez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Lopez ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Samsung Group)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Samsung Group ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Samsung Electronics)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Samsung Electronics ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Islam ns:religion.religion.beliefs?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Islam ns:religion.religion.deities?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Christian Grey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Christian Grey ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mr. Gray)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mr. Gray ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Orwell)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Orwell ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Orwell)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Orwell ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.jurisdiction_of_office?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.jurisdiction_of_office?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Bublé)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Bublé ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Bublé)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Bublé ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kansas City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kansas City ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kansas City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kansas City ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kansas City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kansas City ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kansas City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kansas City ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kansas Speedway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kansas Speedway ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kansas City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kansas City ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jackie Robinson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jackie Robinson ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?y ns:sports.sports_team_roster.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jackie Robinson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jackie Robinson ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?y ns:sports.sports_team_roster.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Annie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Annie ns:theater.play.date_of_first_performance?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Annie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Annie ns:theater.theater_performance.date_of_open_performance?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Eleanor Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Eleanor Roosevelt ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Eleanor Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Eleanor Roosevelt ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Indonesia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Indonesia ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Indonesia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Indonesia ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jesse James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jesse James ns:people.deceased_person.cause_of_death?x.\n?x ns:freebase.linguistic_hint.subject_form?sk0.\nFILTER (str(?sk0) = \"Firearms\")\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jesse James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jesse James ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Abraham Lincoln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Abraham Lincoln ns:government.us_president.vice_president?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Abraham Lincoln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Abraham Lincoln ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.office_position_or_title?x.\n?y ns:government.government_position_held.basic_title ns:Vice President.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Dickens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Dickens ns:book.author.book_editions_published?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Dickens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Dickens ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Soviet Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Soviet Union ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Soviet Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Soviet Union ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Dictator.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Puerto Rico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Puerto Rico ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Puerto Rico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Puerto Rico ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carl Wilson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carl Wilson ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carl Wilson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carl Wilson ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Knight Rider)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Knight Rider ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\n?y ns:tv.regular_tv_appearance.character ns:KITT.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Knight Rider)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Knight Rider ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:KITT.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brentwood)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brentwood ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brentwood)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brentwood ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brentwood)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brentwood ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brentwood)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brentwood ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael J. Fox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael J. Fox ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael J. Fox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael J. Fox ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stonewall Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stonewall Jackson ns:military.military_commander.military_commands?y.\n?y ns:military.military_command.military_conflict?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stonewall Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stonewall Jackson ns:military.military_person.service?y.\n?y ns:military.military_service.military_force?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Maasai people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Maasai people ns:people.ethnicity.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Maasai)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Maasai ns:people.ethnicity.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Common-law marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Patrick Swayze)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Patrick Swayze ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Patrick Swayze)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Patrick Swayze ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonardo da Vinci)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonardo da Vinci ns:visual_art.visual_artist.artworks?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonardo da Vinci)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonardo da Vinci ns:visual_art.visual_artist.art_forms?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Austria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Austria ns:location.country.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Austria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Austria ns:location.country.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Eva Perón)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Eva Perón ns:people.deceased_person.cause_of_death?x.\n?x ns:people.cause_of_death.parent_cause_of_death ns:Cancer.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Eva Perón)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Eva Perón ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gautama Buddha)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gautama Buddha ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Buddhism)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Buddhism ns:religion.religion.positive_beliefs?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greeley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greeley ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greeley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greeley ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greeley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greeley ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greeley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greeley ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pyotr Ilyich Tchaikovsky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pyotr Ilyich Tchaikovsky ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peter I of Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peter I of Russia ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:German Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:German Language ns:language.human_language.countries_spoken_in?x.\n?x ns:location.country.official_language ns:German Language.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:German Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:German Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Lennon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Lennon ns:music.artist.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Lennon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Lennon ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colorado)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colorado ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colorado)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colorado ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Representative.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greenland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greenland ns:location.administrative_division.country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greenland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greenland ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seattle)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seattle ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seattle)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seattle ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Willow Smith)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Willow Smith ns:people.person.parents?x.\n?x ns:people.person.gender ns:Female.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Willow Smith)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Willow Smith ns:people.person.parents?x.\n?x ns:people.person.gender ns:Female.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chinese language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chinese language ns:language.human_language.writing_system?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chinese writing system)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chinese writing system ns:language.writing_system.language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Jeffersons)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Jeffersons ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Jeffersons)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Jeffersons ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Francisco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Francisco ns:periodicals.newspaper_circulation_area.newspapers?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Francisco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Francisco ns:magazines.magazine_issue_space.programs?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Armenia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Armenia ns:base.locations.countries.continent?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Armenia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Armenia ns:base.locations.countries.continent?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Randy Savage)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Randy Savage ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Randy Savage)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Randy Savage ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Darwin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Darwin ns:book.author.works_written?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Darwin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Darwin ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Nixon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Nixon ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Nixon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Nixon ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Smokey Robinson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Smokey Robinson ns:music.artist.track?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Smoke Robinson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Smoke Robinson ns:music.artist.track?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:government.us_president.vice_president?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:government.us_president.vice_president?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Serbia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Serbia ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Serbia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Serbia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Haiti)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Haiti ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Haiti)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Haiti ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Haiti)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Haiti ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Haiti)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Haiti ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barbara Gordon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barbara Gordon ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barbara Gordon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barbara Gordon ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shaquille O'Neal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shaquille O'Neal ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:sports.sports_team.sport ns:Basketball.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shaquille O'Neal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shaquille O'Neal ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jay Leno)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jay Leno ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jay Leno)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jay Leno ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thailand)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thailand ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thailand)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thailand ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thailand)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thailand ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thailand)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thailand ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Social Network)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Social Network ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Armie Hammer.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Armie Hammer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Armie Hammer ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Jefferson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Jefferson ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Jefferson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Jefferson ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.office_position_or_title?x.\n?y ns:government.government_position_held.basic_title ns:Declaration of Independence.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Darwin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Darwin ns:book.author.book_editions_published?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Darwin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Darwin ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Darwin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Darwin ns:book.author.works_written?x.\n?x ns:common.topic.notable_types ns:Book.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Darwin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Darwin ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tim Tebow)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tim Tebow ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:sports.school_sports_team.school ns:University of Florida.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tim Tebow)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tim Tebow ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:american_football.football_team.division ns:Division I (NCAA).\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peyton Manning)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peyton Manning ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peyton Manning)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peyton Manning ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carpathian Mountains)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carpathian Mountains ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carpathian Mountains)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carpathian Mountains ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Burns)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Burns ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Burns)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Burns ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Wars Episode III: Revenge of the Sith.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Wars Episode III: Revenge of the Sith.\n}\n"}
{"label": "SELECT DISTINCT?z\nWHERE {\n  ns:Peyton Manning ns:sports.pro_athlete.teams?y.\n ?y ns:sports.sports_team_roster.team?x. #team\n ?x ns:sports.sports_team.championships?z. # super bowls\n ?z ns:common.topic.notable_types ns:m.01xljv1. #super bowl\n ?z ns:sports.sports_championship_event.champion?c.\n ?z ns:time.event.start_date?a.\n  \n  # Check the time overlap\n  FILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \n             EXISTS {?y ns:sports.sports_team_roster.from?sk1. \n             FILTER(xsd:datetime(?sk1) - xsd:datetime(?a) <= 0) })\n\n  FILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \n             EXISTS {?y ns:sports.sports_team_roster.to?sk3. \n             FILTER(xsd:datetime(?sk3) - xsd:datetime(?a) >= 0 ) }) \n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peyton Manning)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peyton Manning ns:sports.sports_award_winner.awards?y.\n?y ns:sports.sports_award.season?x.\n?y ns:sports.sports_award.award ns:Super Bowl.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\tns:Justin Bieber ns:people.person.place_of_birth?y.\n\t?y ns:location.location.containedby?x.\n\t?x ns:common.topic.notable_types ns:m.01mp.  #Country\n}", "predict": "SELECT DISTINCT ?x\nWHERE {\n  ns:Justin Bieber ns:people.person.place_of_birth?y. # Justin Bieber\n ?y ns:location.location.containedby?x.\n ?x ns:common.topic.notable_types ns:m.01mp. # Country\n}"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gulf War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gulf War ns:military.military_conflict.combatants?y.\n?y ns:military.military_combatant_group.combatants?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gulf War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gulf War ns:military.military_conflict.military_conflict?y.\n?y ns:military.military_conflict.military_troops?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Suite Life on Deck)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Suite Life on Deck ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:London Tipton.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Suite Life on Deck)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Suite Life on Deck ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:London Tipton.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David Beckham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:David Beckham ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David Beckham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:David Beckham ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Francisco Vázquez de Coronado)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Francisco Vázquez de Coronado ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Francisco Coronado)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Francisco Coronado ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Google)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Google ns:business.consumer_company.products?y.\n?y ns:business.company_product_relationship.consumer_product?x.\nFILTER(NOT EXISTS {?y ns:business.company_product_relationship.from_date?sk0} || \nEXISTS {?y ns:business.company_product_relationship.from_date?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:business.company_product_relationship.to_date?sk2} || \nEXISTS {?y ns:business.company_product_relationship.to_date?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Google)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Google ns:base.schemastaging.organization_extra.phone_number?y.\n?y ns:base.schemastaging.phone_sandbox.product_or_service?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Abraham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Abraham ns:people.person.children?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Abraham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Abraham ns:people.person.children?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jana Gana Mana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jana Gana Mana ns:music.composition.composer?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jana Gana Mana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jana Gana Mana ns:music.composition.composer?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gilda Radner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gilda Radner ns:people.deceased_person.cause_of_death?x.\n?x ns:people.cause_of_death.parent_cause_of_death ns:Cancer.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gilda Radner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gilda Radner ns:people.deceased_person.cause_of_death?x.\n?x ns:people.cause_of_death.parent_cause_of_death ns:Cancer.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Juni Cortez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Juni Cortez ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Juni Cortés)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Juni Cortés ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lucille Ball)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lucille Ball ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lucille Ball)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lucille Ball ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael J. Fox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael J. Fox ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael J. Fox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael J. Fox ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dolly Parton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dolly Parton ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dolly Parton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dolly Parton ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Agatha Christie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Agatha Christie ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Agatha Christie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Agatha Christie ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:National Rifle Association)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:National Rifle Association ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:National Renewable Energy Laboratory)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:National Renewable Energy Laboratory ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gimli)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gimli ns:fictional_universe.fictional_character.parents?x.\n?x ns:fictional_universe.fictional_character.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gimli)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gimli ns:fictional_universe.fictional_character.parents?x.\n?x ns:fictional_universe.fictional_character.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Transmission Control Protocol)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Transmission Control Protocol ns:base.argumentmaps.original_idea.innovator?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:TCP/IP Reference Model)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:TCP/IP Reference Model ns:model.model_element.creator?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Transmission Control Protocol)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Transmission Control Protocol ns:law.invention.inventor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:TCP/IP Reference Model)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:TCP/IP Reference Model ns:time.event.inventor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Albert Einstein)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Albert Einstein ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Albert Einstein)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Albert Einstein ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jordan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jordan ns:sports.sports_team_location.teams?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jordan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jordan ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tennessee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tennessee ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tennessee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tennessee ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Portugal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Portugal ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Portuguese Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Portuguese Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cuba)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cuba ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cuba)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cuba ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cuba)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cuba ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cuba)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cuba ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Madrid)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Madrid ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Madrid)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Madrid ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Armstrong)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Armstrong ns:music.group_member.instruments_played?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Armstrong)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Armstrong ns:music.group_member.instruments_played?x.\n}\n"}
{"label": "SELECT DISTINCT?dt\nWHERE {\n ?e ns:government.election.winner  ns:George W. Bush ; # George W. Bush\n     ns:government.election.office  ns:President of the United States ; # President of the United States\n     ns:government.election.election_year?dt .\n}", "predict": "SELECT DISTINCT?dt\nWHERE {\n ?e ns:government.election.winner  ns:George W. Bush ; # George W. Bush\n     ns:government.election.office  ns:m.060d2 ; # President of the United States\n     ns:government.election.election_year?dt .\n}"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:California)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:California ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:California)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:California ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mission San Buenaventura)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mission San Buenaventura ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mission San Buenaventura)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mission San Buenaventura ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hilo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hilo ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hilo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hilo ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rudolf Virchow)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rudolf Virchow ns:people.person.employment_history?y.\n?y ns:business.employment_tenure.company?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rudolf Virchow)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rudolf Virchow ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gordon Brown)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gordon Brown ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gordon Brown)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gordon Brown ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greece)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greece ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greece)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greece ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seattle Seahawks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seattle Seahawks ns:sports.sports_team.championships?x.\n?x ns:time.event.instance_of_recurring_event ns:Super Bowl.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seattle Seahawks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seattle Seahawks ns:sports.sports_team.championships?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stephen Hawking)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stephen Hawking ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stephen Hawking)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stephen Hawking ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Donna Noble)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Donna Noble ns:tv.tv_character.appeared_in_tv_episodes?y.\n?y ns:tv.tv_guest_role.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dona Noble)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dona Noble ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Donna Noble)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Donna Noble ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dona Noble)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dona Noble ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Lesieg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Lesieg ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Lesieg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Lesieg ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Queensland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Queensland ns:symbols.namesake.named_after?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Queensland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Queensland ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James Madison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James Madison ns:book.author.works_written?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James Madison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James Madison ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Belgium)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Belgium ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Belgium)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Belgium ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Old Bilbo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Old Bilbo ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:The Lord of the Rings.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Lord of the Rings: The Fellowship of the Ring)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Lord of the Rings: The Fellowship of the Ring ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns: Bilbo Baggins.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Destin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Destin ns:location.location.nearby_airports?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Destin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Destin ns:location.location.nearby_airports?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States Senate)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States Senate ns:government.governmental_body.members?y.\n?y ns:government.government_position_held.basic_title?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States Senate)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States Senate ns:government.governmental_body.members?y.\n?y ns:government.government_position_held.office_holder?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltic states)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltic states ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltic ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colin Kaepernick)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colin Kaepernick ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colin Kaepernick)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colin Kaepernick ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joe Flacco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joe Flacco ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joe Flacco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joe Flacco ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Emma Stone)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Emma Stone ns:people.person.parents?x.\n?x ns:people.person.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Emma Stone)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Emma Stone ns:people.person.parents?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Roosevelt ns:people.deceased_person.place_of_burial?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Roosevelt ns:people.deceased_person.place_of_burial?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n  ns:World War II ns:time.event.start_date?start ;\n             ns:time.event.end_date?end.\n ?x ns:government.politician.government_positions_held ?y.\n ?y ns:government.government_position_held.office_position_or_title ns:m.060d2 ; # President of the United States\n     ns:government.government_position_held.from ?from ;\n     ns:government.government_position_held.to ?to.\n  FILTER (?from <?end)\n  FILTER (?to >?start)\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:World War II)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:World War II ns:military.military_conflict.commanders?y.\n?y ns:military.military_command.military_commander?x.\n?x ns:common.topic.notable_types ns:Monarch.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henri Matisse)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henri Matisse ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henri Matisse)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henri Matisse ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Missouri River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Missouri River ns:geography.river.mouth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Missouri River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Missouri River ns:geography.river.mouth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thailand)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thailand ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thailand)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thailand ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Khloé Kardashian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Khloé Kardashian ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Khloé Kardashian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Khloé Kardashian ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denmark)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denmark ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denmark)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denmark ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Kingdom of Denmark.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denmark)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denmark ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:Queen of Denmark.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denmark)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denmark ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Kingdom of Denmark.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stephen Hawking)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stephen Hawking ns:people.person.education?y.\n?y ns:education.education.major_field_of_study?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stephen Hawking)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stephen Hawking ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bristol Palin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bristol Palin ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Palin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Palin ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Region.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Region.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Lesieg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Lesieg ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Lesieg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Lesieg ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Drew Brees)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Drew Brees ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Drew Brees)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Drew Brees ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ben Roethlisberger)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ben Roethlisberger ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ben Roethlisberger)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ben Roethlisberger ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iroquois)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iroquois ns:people.ethnicity.geographic_distribution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iroquois)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iroquois ns:people.ethnicity.geographic_distribution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Harrison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Harrison ns:music.guitarist.guitars_played?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Harrison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Harrison ns:music.guitarist.guitars_played?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Navajo people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Navajo people ns:people.ethnicity.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Navajo people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Navajo people ns:people.ethnicity.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New England ns:location.location.contains?x.\n?x ns:base.biblioness.bibs_location.loc_type?sk0.\nFILTER (str(?sk0) = \"State\")\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New England ns:location.location.contains?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iraq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iraq ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iraq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iraq ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vietnam War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vietnam War ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vietnam War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vietnam War ns:time.event.locations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gerald Ford)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gerald Ford ns:government.us_president.vice_president?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gerald Ford)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gerald Ford ns:government.us_president.vice_president?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ernest Rutherford)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ernest Rutherford ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sir Ernest Rutherford)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sir Ernest Rutherford ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brandon Roy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brandon Roy ns:basketball.basketball_player.position_s?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brandon Roy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brandon Roy ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.position?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harvard University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harvard University ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harvard University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harvard University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harvard University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harvard University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.state_province_region?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harvard University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harvard University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Laos)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Laos ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Region.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Laos)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Laos ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tyrese Gibson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tyrese Gibson ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tyrese Gibson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tyrese Gibson ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colorado River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colorado River ns:location.location.partially_containedby?x.\n?x ns:base.biblioness.bibs_location.loc_type?sk0.\nFILTER (str(?sk0) = \"State\")\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colorado River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colorado River ns:location.location.partially_containedby?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scarlett Johansson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scarlett Johansson ns:base.popstra.celebrity.dated?y.\n?y ns:base.popstra.dated.participant?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scarlett Johansson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scarlett Johansson ns:base.popstra.celebrity.dated?y.\n?y ns:base.popstra.dated.participant?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scarlett Johansson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scarlett Johansson ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scarlett Johansson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scarlett Johansson ns:base.popstra.celebrity.dated?y.\n?y ns:base.popstra.dated.participant?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Roman Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Roman Empire ns:location.location.partially_contained_by?y.\n?y ns:location.partial_containment_relationship.partially_contained_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Roman Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Roman Empire ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Continent.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Elvis Costello)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Elvis Costello ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Elvis Costello)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Elvis Costello ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gobi Desert)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gobi Desert ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gobi Desert)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gobi Desert ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:base.locations.countries.continent?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:base.locations.countries.continent?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jeremy Lin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jeremy Lin ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jeremy Lin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jeremy Lin ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seychelles)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seychelles ns:base.locations.countries.continent?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seychelles)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seychelles ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seychelles)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seychelles ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seychelles)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seychelles ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Morris)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Morris ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Morris)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Morris ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mount St. Helens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mount St. Helens ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mount St. Helens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mount St. Helens ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jimmy Savile)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jimmy Savile ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jimmy Savile)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jimmy Savile ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seneca people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seneca people ns:people.ethnicity.geographic_distribution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seneca people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seneca people ns:people.ethnicity.geographic_distribution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miami Marlins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miami Marlins ns:baseball.baseball_team.team_stats?y.\n?y ns:baseball.baseball_team_stats.season?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miami Marlins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miami Marlins ns:sports.sports_team.founded?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spanish Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spanish Language ns:language.human_language.countries_spoken_in?x.\n}\n", "predict": "SELECT DISTINCT ?x\nWHERE {\n ?x ns:location.country.official_language ns:Spanish Language. # Spanish language\n}"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Phoenix)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Phoenix ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Phoenix)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Phoenix ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Panama Canal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Panama Canal ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Panama Canal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Panama Canal ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charlie Chaplin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charlie Chaplin ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charlie Chaplin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charlie Chaplin ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Fred Durst)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Fred Durst ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Fred Durst)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Fred Durst ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Diego Chargers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Diego Chargers ns:sports.professional_sports_team.draft_picks?y.\n?y ns:sports.sports_league_draft_pick.player?x.\n?y ns:sports.sports_league_draft_pick.draft ns:2011 NFL draft.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Los Angeles Chargers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Los Angeles Chargers ns:sports.professional_sports_team.draft_picks?y.\n?y ns:sports.sports_league_draft_pick.player?x.\n?y ns:sports.sports_league_draft_pick.draft ns:2011 NFL draft.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:American Bulldog)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:American Bulldog ns:biology.animal_breed.place_of_origin?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:American Bulldog)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:American Bulldog ns:location.location.contains?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Albert Einstein)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Albert Einstein ns:people.person.employment_history?y.\n?y ns:business.employment_tenure.company?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Albert Einstein)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Albert Einstein ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Family Guy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Family Guy ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Brian Griffin.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Family Guy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Family Guy ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Brian Griffin.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\nFILTER(NOT EXISTS {?y ns:tv.regular_tv_appearance.from?sk0} || \nEXISTS {?y ns:tv.regular_tv_appearance.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:tv.regular_tv_appearance.to?sk2} || \nEXISTS {?y ns:tv.regular_tv_appearance.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George W. Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George W. Bush ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George W. Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George W. Bush ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miss America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miss America ns:time.recurring_event.date_of_first_occurance?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miss America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miss America ns:time.recurring_event.date_of_first_occurance?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nikola Tesla)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nikola Tesla ns:law.inventor.inventions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nikola Tesla)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nikola Tesla ns:law.inventor.inventions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Flemish people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Flemish people ns:people.ethnicity.geographic_distribution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Flemish people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Flemish people ns:people.ethnicity.geographic_distribution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York City ns:base.biblioness.bibs_location.state?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York City ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bruce Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bruce Lee ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bruce Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bruce Lee ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:England ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:England ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:base.aareas.schema.administrative_area.administrative_children?x.\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:UK constituent country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:base.aareas.schema.administrative_area.administrative_children?x.\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:UK constituent country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chinese language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chinese language ns:language.human_language.countries_spoken_in?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chinese Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chinese Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Soviet Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Soviet Union ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?x ns:military.military_person.participated_in_conflicts ns:World War II.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:World War II)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:World War II ns:world.world_war.leader?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.statistical_region.major_exports?y.\n?y ns:location.imports_exports_by_industry.industry?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.statistical_region.major_exports?y.\n?y ns:location.imports_exports_by_industry.industry?x.\n?y ns:location.imports_exports_by_industry.value?sk0.\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:City of David)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:City of David ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Davy also ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cindy Sherman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cindy Sherman ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cindy Sherman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cindy Sherman ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shawnee Smith)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shawnee Smith ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.series?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shawnee Smith)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shawnee Smith ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.series?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rome)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rome ns:travel.travel_destination.how_to_get_here?y.\n?y ns:travel.transportation.transport_terminus?x.\n?x ns:common.topic.notable_types ns:Airport.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rome)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rome ns:travel.travel_destination.how_to_get_here?y.\n?y ns:travel.transportation.transport_terminus?x.\n?x ns:common.topic.notable_types ns:Airport.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kansas City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kansas City ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kansas City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kansas City ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:LeBron James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:LeBron James ns:sports.sports_award_winner.awards?y.\n?y ns:sports.sports_award.season?x.\n?y ns:sports.sports_award.award ns:NBA Rookie of the Year Award.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:LeBron James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:LeBron James ns:sports.sports_award_winner.awards?y.\n?y ns:sports.sports_award.season?x.\n?y ns:sports.sports_award.award ns:NBA Rookie of the Year Award.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Delaware River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Delaware River ns:geography.river.origin?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Delaware River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Delaware River ns:geography.river.origin?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.parents?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jordan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jordan ns:sports.pro_athlete.sports_played_professionally?y.\n?y ns:sports.pro_sports_played.career_start?x.\n?y ns:sports.pro_sports_played.sport ns:Basketball.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jordan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jordan ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.draft?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mission San Rafael Arcángel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mission San Rafael Arcángel ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mission San Rafael)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mission San Rafael ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Esther)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Esther ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Esther)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Esther ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Claire Danes)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Claire Danes ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n?y ns:celebrities.romantic_relationship.relationship_type ns:Dated.\nFILTER(NOT EXISTS {?y ns:celebrities.romantic_relationship.start_date?sk0} || \nEXISTS {?y ns:celebrities.romantic_relationship.start_date?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:celebrities.romantic_relationship.end_date?sk2} || \nEXISTS {?y ns:celebrities.romantic_relationship.end_date?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Claire Danes)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Claire Danes ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n?y ns:celebrities.romantic_relationship.relationship_type ns:Dated.\nFILTER(NOT EXISTS {?y ns:celebrities.romantic_relationship.start_date?sk0} || \nEXISTS {?y ns:celebrities.romantic_relationship.start_date?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:celebrities.romantic_relationship.end_date?sk2} || \nEXISTS {?y ns:celebrities.romantic_relationship.end_date?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Paul ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Paul ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:sports.sports_team_location.teams?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:sports.sports_team_location.teams?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Latin Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Latin Language ns:language.human_language.language_family?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Latin Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Latin Language ns:language.human_language.language_family?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Karl Benz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Karl Benz ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Karl Benz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Karl Benz ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carmen Electra)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carmen Electra ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carmen Electra)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carmen Electra ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:World War II)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:World War II ns:time.event.end_date?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:World War II)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:World War II ns:time.event.start_date?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Morgan Freeman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Morgan Freeman ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Morgan Freeman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Morgan Freeman ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?y ns:education.education.degree ns:Bachelor of Arts.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carl Linnaeus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carl Linnaeus ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carolus Linnaeus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carolus Linnaeus ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Libya)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Libya ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Libya)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Libya ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anaheim)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anaheim ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anaheim)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anaheim ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltimore Orioles)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltimore Orioles ns:sports.sports_team.championships?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltimore Orioles)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltimore Orioles ns:sports.sports_team.championships?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Francis Bacon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Francis Bacon ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Francis Bacon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Francis Bacon ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Amelia Earhart)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Amelia Earhart ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Amelia Earhart)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Amelia Earhart ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dallas Cowboys)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dallas Cowboys ns:sports.sports_team.colors?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dallas Cowboys)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dallas Cowboys ns:sports.sports_team.colors?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Margaret Hoover)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Margaret Hoover ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Margaret Hoover)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Margaret Hoover ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamie Oliver)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamie Oliver ns:people.person.children?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamie Oliver)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamie Oliver ns:people.person.children?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bradley Walsh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bradley Walsh ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bradley Walsh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bradley Walsh ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Inter Milan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Inter Milan ns:sports.sports_team.coaches?y.\n?y ns:sports.sports_team_coach_tenure.coach?x.\n?y ns:sports.sports_team_coach_tenure.position ns:Head coach.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_coach_tenure.from?sk0} || \nEXISTS {?y ns:sports.sports_team_coach_tenure.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_coach_tenure.to?sk2} || \nEXISTS {?y ns:sports.sports_team_coach_tenure.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Inter Milan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Inter Milan ns:sports.sports_team.coaches?y.\n?y ns:sports.sports_team_coach_tenure.coach?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_coach_tenure.from?sk0} || \nEXISTS {?y ns:sports.sports_team_coach_tenure.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_coach_tenure.to?sk2} || \nEXISTS {?y ns:sports.sports_team_coach_tenure.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Reese Witherspoon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Reese Witherspoon ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Reese Witherspoon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Reese Witherspoon ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ultimate Fighting Championship)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ultimate Fighting Championship ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Unified Fighting Championship)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Unified Fighting Championship ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Albert Pujols)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Albert Pujols ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Albert Pujols)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Albert Pujols ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sweden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sweden ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sweden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sweden ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Jones)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Jones ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Jones)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Jones ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Shakespeare)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Shakespeare ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Shakespeare)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Shakespeare ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.statistical_region.places_imported_from?y.\n?y ns:location.imports_and_exports.imported_from?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.statistical_region.places_imported_from?y.\n?y ns:location.imports_and_exports.imported_from?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ukraine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ukraine ns:location.statistical_region.places_imported_from?y.\n?y ns:location.imports_and_exports.imported_from?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.statistical_region.places_imported_from?y.\n?y ns:location.imports_and_exports.imported_from?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ian Somerhalder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ian Somerhalder ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ian Somerhalder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ian Somerhalder ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ron Howard)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ron Howard ns:film.director.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ron Howard)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ron Howard ns:film.director.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gerald Ford)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gerald Ford ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gerald Ford)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gerald Ford ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:base.locations.countries.continent?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:base.locations.countries.continent?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.location.partially_containedby?x.\n?x ns:common.topic.notable_types ns:Continent.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:base.locations.countries.continent?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kevin Love)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kevin Love ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kevin Love)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kevin Love ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Karnak)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Karnak ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Temple of Karnak)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Temple of Karnak ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Morgan Freeman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Morgan Freeman ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Morgan Freeman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Morgan Freeman ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:people.person.affairs_played_with?y.\n?y ns:people.affair.affairor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cuba)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cuba ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cuba)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cuba ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Morocco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Morocco ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Morocco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Morocco ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mary McLeod Bethune)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mary McLeod Bethune ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mary Bethune)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mary Bethune ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mother Teresa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mother Teresa ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mother Teresa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mother Teresa ns:people.person.nationality?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Pryor)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Pryor ns:people.person.children?x.\n?x ns:people.person.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Pryor)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Pryor ns:people.person.children?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.countries_spoken_in?x.\n?x ns:location.country.official_language ns:English Language.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.main_country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:organization.organization_member.member_of?y.\n?y ns:organization.organization_membership.organization?x.\nFILTER(NOT EXISTS {?y ns:organization.organization_membership.to?sk0} || \nEXISTS {?y ns:organization.organization_membership.to?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:organization.organization_membership.from?sk2} || \nEXISTS {?y ns:organization.organization_membership.from?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:location.country.international_organizations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:West St. Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:West St. Paul ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:West St. Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:West St. Paul ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:West St. Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:West St. Paul ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:West St. Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:West St. Paul ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Donnie Wahlberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Donnie Wahlberg ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:The Sixth Sense.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Sixth Sense)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Sixth Sense ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Donnie Wahlberg.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Sixth Sense)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Sixth Sense ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Donnie Wahlberg.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Donnie Wahlberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Donnie Wahlberg ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:The Sixth Sense.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Montesquieu)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Montesquieu ns:influence.influence_node.influenced?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Montesquieu)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Montesquieu ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carlos Boozer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carlos Boozer ns:basketball.basketball_player.player_statistics?y.\n?y ns:basketball.basketball_player_stats.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carlos Boozer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carlos Boozer ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Portland Press Herald)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Portland Press Herald ns:book.newspaper.owner?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Portland Press Herald)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Portland Press Herald ns:business.business_operation.owner?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Albert Speer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Albert Speer ns:architecture.architect.structures_designed?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Albert Speer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Albert Speer ns:architecture.architectural_structure_owner.structures_owned?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jordan Palmer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jordan Palmer ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jordan Palmer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jordan Palmer ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonardo da Vinci)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonardo da Vinci ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonardo da Vinci)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonardo da Vinci ns:visual_art.visual_artist.art_forms?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arlington)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arlington ns:location.location.nearby_airports?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arlington)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arlington ns:location.location.nearby_airports?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Emile Heskey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Emile Heskey ns:base.schemastaging.athlete_extra.salary?y.\n?y ns:base.schemastaging.athlete_salary.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brian Heskey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brian Heskey ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hirohito)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hirohito ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hirohito)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hirohito ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vienna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vienna ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vienna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vienna ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ireland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ireland ns:location.location.events?x.\n?x ns:common.topic.notable_types ns:Military Conflict.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ireland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ireland ns:base.biblioness.bibs_location.date_captured?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peoria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peoria ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peoria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peoria ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Elvis Presley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Elvis Presley ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Elvis Presley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Elvis Presley ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Netherlands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Netherlands ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Netherlands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Netherlands ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Netherlands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Netherlands ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Netherlands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Netherlands ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greece)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greece ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greece)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greece ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henri Matisse)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henri Matisse ns:visual_art.visual_artist.art_forms?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henri Matisse)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henri Matisse ns:visual_art.visual_artist.art_forms?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Dickens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Dickens ns:book.author.works_written?x.\n?x ns:common.topic.notable_types ns:Book.\n?x ns:book.written_work.copyright_date?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Dickens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Dickens ns:book.author.works_written?x.\n?x ns:common.topic.notable_types ns:Book.\n?x ns:book.written_work.copyright_date?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Agatha Christie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Agatha Christie ns:book.author.book_editions_published?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Agatha Christie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Agatha Christie ns:book.author.book_editions_published?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jordan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jordan ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jordan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jordan ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:people.deceased_person.date_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:people.deceased_person.date_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mount St. Helens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mount St. Helens ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mount St. Helens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mount St. Helens ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York City ns:tv.tv_location.tv_shows_filmed_here?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York ns:tv.tv_location.tv_shows_filmed_here?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tupac Shakur)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tupac Shakur ns:book.author.book_editions_published?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tupac Shakur)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tupac Shakur ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chinese language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chinese language ns:language.human_language.writing_system?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Burns)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Burns ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Burns)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Burns ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William McKinley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William McKinley ns:people.deceased_person.date_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William McKinley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William McKinley ns:people.deceased_person.date_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lake Merritt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lake Merritt ns:geography.body_of_water.depth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lake Merritt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lake Merritt ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Islam ns:religion.religion.holidays?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Islam ns:religion.religion.holidays?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Claude Debussy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Claude Debussy ns:music.artist.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Claude Debussy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Claude Debussy ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n ?x ns:sports.sports_championship_event.championship ns:m.0hn79\n  {\n   ?x ns:sports.sports_championship_event.champion ns:m.0j6tr. # Toronto Maple Leafs\n  }\n  UNION\n  {\n   ?x ns:sports.sports_championship_event.runner_up ns:m.0j6tr. # Toronto Maple Leafs\n  }\n ?x ns:time.event.start_date?st.\n}\nORDER BY DESC(xsd:datetime(?st))\nLIMIT 1", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto Maple Leafs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto Maple Leafs ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hank Baskett)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hank Baskett ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hank Baskett)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hank Baskett ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paraguay)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paraguay ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paraguay)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paraguay ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pittsburgh Steelers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pittsburgh Steelers ns:sports.sports_team.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pittsburgh Steelers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pittsburgh Steelers ns:sports.sports_team.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isaac Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isaac Newton ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isaac Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isaac Newton ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harvard University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harvard University ns:education.educational_institution.colors?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harvard University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harvard University ns:education.education_institution.colors?y.\n?y ns:education.education_material.color?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:University of the Rockies)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:University of the Rockies ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:University of Colorado at Boulder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:University of Colorado at Boulder ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.state_province_region?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:University of the Rockies)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:University of the Rockies ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:University of Colorado at Rocky Mountain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:University of Colorado at Rocky Mountain ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:University of the Rockies)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:University of the Rockies ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.state_province_region?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:University of Colorado at Boulder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:University of Colorado at Boulder ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Roberts)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Roberts ns:medicine.notable_person_with_medical_condition.condition?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Roberts)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Roberts ns:medicine.notable_person_with_medical_condition.condition?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Byzantine Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Byzantine Empire ns:location.country.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:East Roman Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:East Roman Empire ns:location.country.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Edward Scissorhands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Edward Scissorhands ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Edward Scissorhands.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Edward Scissorhands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Edward Scissorhands ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joey Jordison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joey Jordison ns:music.group_member.membership?y.\n?y ns:music.group_membership.role?x.\n?y ns:music.group_membership.group ns:Slipknot.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joey Jordison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joey Jordison ns:music.group_member.instruments_played?x.\n?x ns:music.instrument.family ns:Bass.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Slipknot)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Slipknot ns:music.musical_group.member?y.\n?y ns:music.group_membership.role?x.\n?y ns:music.group_membership.member ns:Joey Jordison.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joey Jordison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joey Jordison ns:music.group_member.instruments_played?x.\n?x ns:music.instrument.family ns:Bass.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:LeBron James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:LeBron James ns:basketball.basketball_player.player_statistics?y.\n?y ns:basketball.basketball_player_stats.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:LeBron James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:LeBron James ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?y ns:sports.sports_team_roster.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:LeBron James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:LeBron James ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:LeBron James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:LeBron James ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?y ns:sports.sports_team_roster.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Gettysburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Gettysburg ns:base.culturalevent.event.entity_involved?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Gettysburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Gettysburg ns:time.event.combatants?y.\n?y ns:time.combatants.combatant_position?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Gettysburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Gettysburg ns:military.military_conflict.combatants?y.\n?y ns:military.military_combatant_group.combatants?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Gettysburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Gettysburg ns:time.event.people_in_event?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Gettysburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Gettysburg ns:military.military_conflict.commanders?y.\n?y ns:military.military_command.military_combatant?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Gettysburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Gettysburg ns:time.event.combatants?y.\n?y ns:time.combatants.combatant_or_contributor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Francisco Giants)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Francisco Giants ns:baseball.baseball_team.current_coaches?y.\n?y ns:baseball.current_coaching_tenure.baseball_coach?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Francisco Giants)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Francisco Giants ns:american_football.football_team.current_head_coach?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:American Football League)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:American Football League ns:organization.organization.founders?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:American Football League)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:American Football League ns:organization.organization.leadership?y.\n?y ns:organization.leadership.person?x.\n?y ns:organization.leadership.role ns:President.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Giuliana Rancic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Giuliana Rancic ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Julianna Rancic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Julianna Rancic ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ukraine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ukraine ns:location.country.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ukraine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ukraine ns:location.country.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brian Dawkins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brian Dawkins ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brian Dawkins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brian Dawkins ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tupac Shakur)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tupac Shakur ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tupac Shakur)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tupac Shakur ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kenneth Parcell)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kenneth Parcell ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kenneth)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kenneth ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Indianapolis Colts)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Indianapolis Colts ns:sports.sports_team.league?y.\n?y ns:sports.sports_league_participation.league?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Indianapolis Colts)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Indianapolis Colts ns:sports.sports_team.league?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ferdinand Magellan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ferdinand Magellan ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ferdinand Magellan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ferdinand Magellan ns:people.person.nationality?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Perpignan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Perpignan ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Perpignan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Perpignan ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kim Richards)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kim Richards ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n?x ns:people.person.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kim Richards)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kim Richards ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bosnia and Herzegovina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bosnia and Herzegovina ns:location.location.events?x.\nFILTER(NOT EXISTS {?x ns:time.event.start_date?sk0} || \nEXISTS {?x ns:time.event.start_date?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?x ns:time.event.end_date?sk2} || \nEXISTS {?x ns:time.event.end_date?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bosnia and Herzegovina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bosnia and Herzegovina ns:time.event.month?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pittsburgh Steelers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pittsburgh Steelers ns:sports.sports_team.championships?x.\n?x ns:common.topic.notable_types ns:Super bowl.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pittsburgh Steelers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pittsburgh Steelers ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.countries_spoken_in?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.main_country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.main_country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Giza Necropolis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Giza Necropolis ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Giza Necropolis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Giza Necropolis ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Midland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Midland ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Midland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Midland ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Midwestern United States)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Midwestern United States ns:location.location.contains?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Midwestern United States)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Midwestern United States ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Justin Bieber)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Justin Bieber ns:music.group_member.membership?y.\n?y ns:music.group_membership.role?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Justin Bieber)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Justin Bieber ns:music.artist.track_contributions?y.\n?y ns:music.track_contribution.role?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Annie Oakley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Annie Oakley ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Annie Oakley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Annie Oakley ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alexander Luthor)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alexander Luthor ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lex Luthor)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lex Luthor ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Zambezi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Zambezi ns:geography.river.origin?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Zambezi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Zambezi ns:geography.river.origin?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nigeria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nigeria ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nigeria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nigeria ns:location.country.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jenni Rivera)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jenni Rivera ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jenni Rivera)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jenni Rivera ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?y ns:education.education.degree ns:Bachelor of Arts.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?y ns:education.education.degree ns:Bachelor of Arts.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Dakota)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Dakota ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Dakota)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Dakota ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jason Mraz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jason Mraz ns:music.artist.origin?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jason Mraz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jason Mraz ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jason Mraz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jason Mraz ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jason Mraz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jason Mraz ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Bonham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Bonham ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Bonham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Bonham ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Walmart)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Walmart ns:business.business_operation.industry?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Walmart)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Walmart ns:organization.organization.industry?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Texarkana, Arkansas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Texarkana, Arkansas ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arkansas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arkansas ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Texarkana, Arkansas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Texarkana, Arkansas ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arkansas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arkansas ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ludwig van Beethoven)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ludwig van Beethoven ns:music.artist.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ludwig van Beethoven)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ludwig van Beethoven ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Laura Ingalls Wilder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Laura Ingalls Wilder ns:book.author.book_editions_published?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Laura Ingalls Wilder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Laura Ingalls Wilder ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Laura Ingalls Wilder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Laura Ingalls Wilder ns:book.author.works_written?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Laura Ingalls Wilder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Laura Ingalls Wilder ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Irving)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Irving ns:book.author.works_written?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Irving)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Irving ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hawaii)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hawaii ns:government.governmental_jurisdiction.official_symbols?y.\n?y ns:location.location_symbol_relationship.symbol?x.\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:State flower.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hawaiian Islands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hawaiian Islands ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Flower.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alice Stokes Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alice Stokes Paul ns:common.topic.notable_types?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alice Stokes Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alice Stokes Paul ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hank Marvin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hank Marvin ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hank Marvin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hank Marvin ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chipper Jones)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chipper Jones ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.draft?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chipper Jones)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chipper Jones ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.draft?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Winona Ryder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Winona Ryder ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Star Trek.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wina Ryder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wina Ryder ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Star Trek: The Next Generation.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Star Trek)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Star Trek ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Winona Ryder.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wina Ryder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wina Ryder ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Star Trek: The Next Generation.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jovan Belcher)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jovan Belcher ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jovan Belcher)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jovan Belcher ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Clay Matthews III)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Clay Matthews III ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Clay Matthews)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Clay Matthews ns:sports.pro_athlete.education?y.\n?y ns:sports.sports_education.school?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Houston)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Houston ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Houston)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Houston ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leia Organa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leia Organa ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Wars.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leia Organa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leia Organa ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Wars.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York City ns:travel.travel_destination.how_to_get_here?y.\n?y ns:travel.transportation.transport_terminus?x.\n?y ns:travel.transportation.mode_of_transportation ns:Air travel.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York City ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:City/Town/Village.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Obi-Wan Kenobi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Obi-Wan Kenobi ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Wars Episode II: Attack of the Clones.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Obi-Wan Kenobi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Obi-Wan Kenobi ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Wars Episode II: The Empire Strikes Back.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Venus Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Venus Williams ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Venus Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Venus Williams ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Panama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Panama ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Panama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Panama ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Zambezi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Zambezi ns:geography.river.origin?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Zambezi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Zambezi ns:geography.river.origin?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ronaldo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ronaldo ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ronaldo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ronaldo ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Williams ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Williams ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Twilight)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Twilight ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Jacob Black.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Twilight)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Twilight ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Jacob Black.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jacob Black)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jacob Black ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Twilight)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Twilight ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Jacob Black.\n}\n"}
{"label": "SELECT DISTINCT?dt\nWHERE {\n ?e ns:government.election.winner  ns:John Adams ; # John Adams\n     ns:government.election.office  ns:m.060d2 ; # President of the United States\n     ns:government.election.election_year?dt .\n}", "predict": "SELECT DISTINCT?dt\nWHERE {\n ?e ns:government.election.winner  ns:John Adams ; # John Adams\n     ns:government.election.office  ns:m.060d2 ; # President of the United States\n     ns:government.election.election_year?dt .\n}"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Buenos Aires)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Buenos Aires ns:location.location.nearby_airports?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Buenos Aires)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Buenos Aires ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Airport.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adrian Peterson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adrian Peterson ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.school?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adrian Peterson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adrian Peterson ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:american_football.football_team.division ns:Division I (NCAA).\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pennsylvania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pennsylvania ns:symbols.namesake.named_after?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pennsylvania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pennsylvania ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\t{ \n\tns:m.0321b4 ns:film.film_character.portrayed_in_films?y.\n\t?y ns:film.performance.actor?x.\n\t}\n\tUNION\n\t{\n\tns:m.0321b4 ns:tv.tv_character.appeared_in_tv_program?y.\n\t?y ns:tv.regular_tv_appearance.actor?x.\n\t}\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Batman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Batman ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Batman.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Veronica Lake)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Veronica Lake ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Veronica Lake)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Veronica Lake ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Francis Drake)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Francis Drake ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Francis Drake)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Francis Drake ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:One for the Money)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:One for the Money ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Stephanie Plum.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:One for the Money)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:One for the Money ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Stepanie Plum.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Roman Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Roman Empire ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Roman Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Roman Empire ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ringo Starr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ringo Starr ns:music.artist.track?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ringo Starr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ringo Starr ns:music.artist.track?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint Lucy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint Lucy ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint Lucy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint Lucy ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint Lucy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint Lucy ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint Lucy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint Lucy ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George VI)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George VI ns:people.person.parents?x.\n?x ns:people.person.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George VI)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George VI ns:people.person.parents?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Trenton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Trenton ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Trenton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Trenton ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ashley Greene)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ashley Greene ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ashley Greene)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ashley Greene ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Al-Qaeda)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Al-Qaeda ns:base.disaster2.attacker.attack_s?y.\n?y ns:base.disaster2.attack_process.attack_event?x.\n?y ns:base.disaster2.attack_process.attacker ns:Al-Qaeda.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Al-Qaeda)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Al-Qaeda ns:organization.organization.places_lived?y.\n?y ns:organization.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Philip the Apostle)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Philip the Apostle ns:fictional_universe.person_in_fiction.representations_in_fiction?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Acts)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Acts ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Philip.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:England ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:England ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:finance.currency.countries_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nigeria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nigeria ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nigeria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nigeria ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mary Shelley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mary Shelley ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mary Shelley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mary Shelley ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denmark)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denmark ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Region.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denmark)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denmark ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Roosevelt ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Teddy Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Teddy Roosevelt ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Malaysia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Malaysia ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Malaysia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Malaysia ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nashville)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nashville ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nashville)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nashville ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anakin Skywalker)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anakin Skywalker ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:fictional_universe.fictional_character.character_created_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Europe)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Europe ns:base.locations.continents.countries_within?x.\n?x ns:topic_server.population_number?sk0.\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Europe)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Europe ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n?x ns:topic_server.population_number?sk0.\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gulf War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gulf War ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gulf War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gulf War ns:time.event.locations?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Virginia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Virginia ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.governmental_body ns:United States Senate.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Virginia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Virginia ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Senator.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Clinton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Clinton ns:music.group_member.membership?y.\n?y ns:music.group_membership.group?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Clinton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Clinton ns:music.group_member.membership?y.\n?y ns:music.group_membership.group?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Slovakia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Slovakia ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Slovakia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Slovakia ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James A. Garfield)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James A. Garfield ns:common.topic.notable_for?y.\n?y ns:common.notable_for.object?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James A. Garfield)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James A. Garfield ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paula Deen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paula Deen ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paula Deen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paula Deen ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Irvine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Irvine ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Irvine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Irvine ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:music.artist.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David Beckham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:David Beckham ns:sports.pro_athlete.sports_played_professionally?y.\n?y ns:sports.pro_sports_played.sport?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David Beckham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:David Beckham ns:base.schemastaging.athlete_extra.salary?y.\n?y ns:base.schemastaging.athlete_salary.sport?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Julian Lennon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Julian Lennon ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Julian Lennon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Julian Lennon ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Milwaukee Brewers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Milwaukee Brewers ns:sports.sports_team.team_mascot?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Milwaukee Brewers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Milwaukee Brewers ns:sports.sports_team.team_mascot?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n                ns:United States of America ns:base.aareas.schema.administrative_area.administrative_children?x.\n               ?x ns:common.topic.notable_types ns:US State.  # US State\n               ?x ns:location.location.area?y.\n}\nORDER BY DESC(xsd:float(?y))\nLIMIT 1\nOFFSET 1", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:US State.\n?x ns:topic_server.population_number?sk0.\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charlie Hunnam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charlie Hunnam ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charlie Hunnam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charlie Hunnam ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Taylor Swift)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Taylor Swift ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Taylor Swift)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Taylor Swift ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brett Favre)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brett Favre ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brett Favre)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brett Favre ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alex Chilton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alex Chilton ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alex Chilton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alex Chilton ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Farrah Fawcett)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Farrah Fawcett ns:people.deceased_person.cause_of_death?x.\n?x ns:medicine.disease.parent_disease ns:Cancer.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Farrah Fawcett)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Farrah Fawcett ns:people.deceased_person.cause_of_death?x.\n?x ns:people.cause_of_death.parent_cause_of_death ns:Cancer.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael J. Fox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael J. Fox ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael J. Fox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael J. Fox ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joe Walsh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joe Walsh ns:music.guitarist.guitars_played?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joe Walsh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joe Walsh ns:music.guitarist.guitars_played?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:European Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:European Union ns:user.ktrueman.default_domain.international_organization.official_language_s?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:European Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:European Union ns:organization.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ryan Seacrest)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ryan Seacrest ns:broadcast.artist.content?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ryan Seacrest)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ryan Seacrest ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.series?x.\n?y ns:tv.regular_tv_appearance.number_of_episodes?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.official_language?x.\n?x ns:common.topic.notable_types ns:Language.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Drew Barrymore)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Drew Barrymore ns:celebrities.celebrity.substance_abuse_problems?y.\n?y ns:celebrities.substance_abuse_problem.substance?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Drew Barrymore)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Drew Barrymore ns:people.person.substance_abuse_problems?y.\n?y ns:people.substance_abuse_problem.substance?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St George's Day)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St George's Day ns:time.holiday.day_of_year?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint George)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint George ns:time.holiday.day_of_year?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Roman Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Roman Empire ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Roman Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Roman Empire ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Gibb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Gibb ns:music.group_member.instruments_played?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Gibb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Gibb ns:music.group_member.instruments_played?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Gibb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Gibb ns:music.group_member.membership?y.\n?y ns:music.group_membership.role?x.\n?x ns:common.topic.notable_types ns:Musical instrument.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Gibb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Gibb ns:music.group_member.instruments_played?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Abraham Lincoln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Abraham Lincoln ns:base.inaugurations.inauguration_speaker.inauguration?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Abraham Lincoln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Abraham Lincoln ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.from?x.\n?y ns:government.government_position_held.office_position_or_title ns:President of the United States.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Texas Rangers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Texas Rangers ns:sports.sports_team.arena_stadium?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Texas Rangers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Texas Rangers ns:sports.sports_team.arena_stadium?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arkansas State Capitol)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arkansas State Capitol ns:location.location.street_address?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arkansas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arkansas ns:location.administrative_division.capital?y.\n?y ns:location.administrative_division_capital_relationship.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nogales)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nogales ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nogales)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nogales ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Vick)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Vick ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.from?x.\n?y ns:sports.sports_team_roster.team ns:Philadelphia Eagles.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Vick)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Vick ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.from?x.\n?y ns:sports.sports_team_roster.team ns:Philadelphia Eagles.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Howard Taft)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Howard Taft ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Taft)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Taft ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Cook)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Cook ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Cook)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Cook ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Melba Pattillo Beals)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Melba Pattillo Beals ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Melba Beals)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Melba Beals ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louisiana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louisiana ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:United States Senator.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louisiana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louisiana ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:United States Senator.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Central America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Central America ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Central America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Central America ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Derek Fisher)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Derek Fisher ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Derek Fisher)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Derek Fisher ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kobe Bryant)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kobe Bryant ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kobe Bryant)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kobe Bryant ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charlotte Hornets)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charlotte Hornets ns:sports.sports_team.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New Orleans Pelicans)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New Orleans Pelicans ns:sports.sports_team.previously_known_as?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Algeria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Algeria ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Algeria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Algeria ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Algeria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Algeria ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Algeria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Algeria ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anne Boleyn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anne Boleyn ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anne Boleyn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anne Boleyn ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Galileo Galilei)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Galileo Galilei ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Galileo Galilei)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Galileo Galilei ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?y ns:education.education.degree ns:PhD.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?y ns:education.education.degree ns:PhD.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gautama Buddha)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gautama Buddha ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Buddhism)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Buddhism ns:religion.religion.location_of_religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henry VIII of England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henry VIII of England ns:royalty.monarch.kingdom?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henry VIII of England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henry VIII of England ns:people.person.nationality?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Larry Hagman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Larry Hagman ns:people.deceased_person.cause_of_death?x.\n?x ns:people.cause_of_death.parent_cause_of_death ns:Cancer.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Larry Hagman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Larry Hagman ns:people.deceased_person.cause_of_death?x.\n?x ns:people.cause_of_death.parent_cause_of_death ns:Cancer.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert E. Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert E. Lee ns:military.military_commander.military_commands?y.\n?y ns:military.military_command.military_conflict?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert E. Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert E. Lee ns:military.military_commander.military_commands?y.\n?y ns:military.military_command.military_conflict?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert E. Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert E. Lee ns:military.military_person.participated_in_conflicts?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert E. Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert E. Lee ns:military.military_commander.military_commands?y.\n?y ns:military.military_command.military_conflict?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Libya)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Libya ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:Prime Minister of Libya.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Libya)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Libya ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Acting President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shays' Rebellion)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shays' Rebellion ns:time.event.start_date?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shays' Rebellion)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shays' Rebellion ns:time.event.start_date?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Montel Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Montel Williams ns:medicine.notable_person_with_medical_condition.condition?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Montel Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Montel Williams ns:medicine.notable_person_with_medical_condition.condition?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltimore Ravens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltimore Ravens ns:sports.sports_team.championships?x.\n?x ns:sports.sports_championship_event.championship ns:Super Bowl.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltimore Ravens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltimore Ravens ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kansas City Royals)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kansas City Royals ns:sports.sports_team.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kansas City Royals)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kansas City Royals ns:sports.sports_team.previously_known_as?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Mayer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Mayer ns:music.artist.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Mayer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Mayer ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Edison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Edison ns:law.inventor.inventions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Edison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Edison ns:law.inventor.inventions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Novak Djokovic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Novak Djokovic ns:olympics.olympic_athlete.country?y.\n?y ns:olympics.olympic_athlete_affiliation.country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Novak Djokovic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Novak Djokovic ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Novak Djokovic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Novak Djokovic ns:olympics.olympic_athlete.medals_won?y.\n?y ns:olympics.olympic_medal_honor.country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andy Djokovic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andy Djokovic ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Novak Djokovic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Novak Djokovic ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Novak Djokovic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Novak Djokovic ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New England ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Region.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New England ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jimi Hendrix)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jimi Hendrix ns:music.artist.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jimi Hendrix)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jimi Hendrix ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.education?y.\n?y ns:education.education.degree?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.education?y.\n?y ns:education.education.major_field_of_study?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alexander Graham Bell)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alexander Graham Bell ns:people.person.sibling_s?y.\n?y ns:people.sibling_relationship.sibling?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alexander Graham Bell)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alexander Graham Bell ns:people.person.sibling_s?y.\n?y ns:people.sibling_relationship.sibling?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Liverpool F.C.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Liverpool F.C. ns:sports.sports_team.championships?x.\n?x ns:sports.sports_championship_event.championship ns:Football League Cup.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Liverpool FC)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Liverpool FC ns:sports.sports_team.championships?x.\n?x ns:sports.sports_championship_event.championship ns:UEFA Champions League Final.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:I Dream of Jeannie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:I Dream of Jeannie ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Jeannie.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jeannie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jeannie ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint Peter)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint Peter ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Peter)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Peter ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jeremy Shockey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jeremy Shockey ns:base.schemastaging.athlete_extra.salary?y.\n?y ns:base.schemastaging.athlete_salary.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jeremy Shockey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jeremy Shockey ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Deion Sanders)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Deion Sanders ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Deion Sanders, jr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Deion Sanders, jr ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of the Alamo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of the Alamo ns:time.event.start_date?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of the Alamo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of the Alamo ns:time.event.start_date?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henry VIII of England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henry VIII of England ns:people.person.children?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henry VIII)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henry VIII ns:people.person.children?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Elizabeth II)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Elizabeth II ns:base.schemastaging.context_name.nickname?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Elizabeth II)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Elizabeth II ns:people.person.children?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tim Tebow)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tim Tebow ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tim Tebow)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tim Tebow ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chesapeake Bay Bridge)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chesapeake Bay Bridge ns:transportation.bridge.locale?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chesapeake Bay Bridge)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chesapeake Bay Bridge ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Big Valley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Big Valley ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Victoria Barkley.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Victoria Barkley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Victoria Barkley ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\tns:m.05br2y1 ns:time.event.locations?x.\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:base.inauguraladdress.inauguraladdress.event_place?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:German Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:German Language ns:language.human_language.countries_spoken_in?x.\n?x ns:location.country.official_language ns:German Language.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:German Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:German Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Taliban)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Taliban ns:organization.organization.geographic_scope?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Taliban)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Taliban ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Elena Gilbert)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Elena Gilbert ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.series ns:The Vampire Diaries.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vampire Daries)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vampire Daries ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Elena Gilbert.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Missouri River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Missouri River ns:location.location.partially_contained_by?y.\n?y ns:location.partial_containment_relationship.partially_contained_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Missouri River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Missouri River ns:geography.river.basin?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Taylor Lautner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Taylor Lautner ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Taylor Lautner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Taylor Lautner ns:people.person.nationality?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:California)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:California ns:government.governmental_jurisdiction.official_symbols?y.\n?y ns:location.location_symbol_relationship.symbol?x.\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:State animal.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:California)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:California ns:symbols.namesake.named_after?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nike, Inc.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nike, Inc. ns:organization.organization.child?y.\n?y ns:organization.organization_relationship.child?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nike, Inc.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nike, Inc. ns:organization.organization.parent?y.\n?y ns:organization.organization_relationship.parent?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ray Allen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ray Allen ns:sports.pro_athlete.career_start?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ray Allen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ray Allen ns:sports.pro_athlete.career_start?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Claire Danes)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Claire Danes ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Claire Danes)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Claire Danes ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Antonio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Antonio ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Antonio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Antonio ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Antonio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Antonio ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Antonio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Antonio ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Matt Stone)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Matt Stone ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Matt Stone)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Matt Stone ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.character?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michigan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michigan ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michigan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michigan ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Soviet Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Soviet Union ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Soviet Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Soviet Union ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dennis Rodman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dennis Rodman ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.from?x.\n?y ns:sports.sports_team_roster.team ns:Chicago Bulls.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chicago Bulls)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chicago Bulls ns:sports.sports_team.roster?y.\n?y ns:sports.sports_team_roster.player?x.\n?y ns:sports.sports_team_roster.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paul the Apostle)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paul the Apostle ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paul the Apostle)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paul the Apostle ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vin Scully)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vin Scully ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vince Scully)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vince Scully ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leia Organa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leia Organa ns:fictional_universe.fictional_character.places_lived?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leia Organa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leia Organa ns:fictional_universe.fictional_character.places_lived?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:El Salvador)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:El Salvador ns:location.location.people_born_here?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:El Salvador)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:El Salvador ns:location.location.people_born_here?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonardo da Vinci)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonardo da Vinci ns:visual_art.visual_artist.art_forms?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonardo da Vinci)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonardo da Vinci ns:visual_art.visual_artist.art_forms?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mary Bell)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mary Bell ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mary Bell)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mary Bell ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kimberly Williams-Paisley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kimberly Williams-Paisley ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kimberly Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kimberly Williams ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ryan Gosling)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ryan Gosling ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ryan Gosling)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ryan Gosling ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Julia Gillard)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Julia Gillard ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Julia Gillard)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Julia Gillard ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Selena Gomez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Selena Gomez ns:people.person.ethnicity?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Selena Gomez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Selena Gomez ns:people.person.ethnicity?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denise van Outen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denise van Outen ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denise Van Outen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denise Van Outen ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wyoming)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wyoming ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wyoming)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wyoming ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gospel of John)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gospel of John ns:book.written_work.author?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Gospel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Gospel ns:book.book_subject.works?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nfilter(?x!= ns:m.0xbm)\nns:Samir Nasri ns:sports.pro_athlete.teams?z. #Samir Nasri\n?z ns:sports.sports_team_roster.team ns:m.0xbm . #arsenal\n?z ns:sports.sports_team_roster.from?from.\nns:Samir Nasri ns:sports.pro_athlete.teams?y. #Samir Nasri\n?y ns:sports.sports_team_roster.team?x.\n?y  ns:sports.sports_team_roster.to?to.\nFILTER (xsd:dateTime(?from) - xsd:dateTime(?to) >= 0)\n}\nORDER BY Desc(xsd:datetime(?from))\nLIMIT 1", "predict": "SELECT DISTINCT?x\nWHERE {\nfilter(?x!= ns:Wayne Nasri)\nns:Wayne Nasri ns:sports.pro_athlete.teams?z.\n?z ns:sports.sports_team_roster.team ns:m.01634xk. #01634xk\n?z ns:sports.sports_team_roster.from?from.\nns:Wayne Nasri ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?y  ns:sports.sports_team_roster.to?to.\nFILTER (xsd:dateTime(?from) - xsd:dateTime(?to) >= 0)\n}\nORDER BY Desc(xsd:datetime(?from))\nLIMIT 1"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Czech Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Czech Republic ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Czech Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Czech Republic ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Penn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Penn ns:people.person.spouse_s?y.\n?y ns:people.marriage.from?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Penn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Penn ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Firefox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Firefox ns:computer.software.languages_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Firefox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Firefox ns:computer.program.computer_system?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New Zealand)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New Zealand ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New Zealand)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New Zealand ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isthmus of Panama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isthmus of Panama ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isthmus of Panama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isthmus of Panama ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Republic of Ireland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Republic of Ireland ns:location.country.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ireland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ireland ns:location.country.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kristen Stewart)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kristen Stewart ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kristen Stewart)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kristen Stewart ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Josef Mengele)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Josef Mengele ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Josef Mengele)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Josef Mengele ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hawaii)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hawaii ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.jurisdiction_of_office ns:United States of America.\n?y ns:government.government_position_held.from?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hawaiian Islands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hawaiian Islands ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Senator.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North Korea)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North Korea ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North Korea)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North Korea ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Kardashian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Kardashian ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Kardashian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Kardashian ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. James City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. James City ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. James City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. James City ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. James City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. James City ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. James City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. James City ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Akkadian Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Akkadian Empire ns:location.location.contains?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Akkaada帝国)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Akkaada帝国 ns:location.location.contains?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Olympic Games)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Olympic Games ns:time.recurring_event.current_frequency?x.\n?x ns:freebase.unit_profile.dimension ns:Time.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Olympic Games)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Olympic Games ns:time.recurring_event.instances?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Guyana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Guyana ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Guyana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Guyana ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sergio Agüero)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sergio Agüero ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sergio Agüero)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sergio Agüero ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:European Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:European Union ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:President of the European Parliament.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:European Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:European Union ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:President of the European Parliament.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miss USA)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miss USA ns:time.recurring_event.instances?x.\n?x ns:award.competition.winner ns:Kenya Moore.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kenya Moore)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kenya Moore ns:model.model_person.period_of_education?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nigeria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nigeria ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nigeria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nigeria ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ina Garten)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ina Garten ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ina Garten)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ina Garden ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Atlanta Braves)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Atlanta Braves ns:sports.sports_team.championships?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Atlanta Braves)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Atlanta Braves ns:sports.sports_team.championships?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iran)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iran ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iran)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iran ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iran)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iran ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iran)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iran ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scott Joplin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scott Joplin ns:music.group_member.instruments_played?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scott Joplin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scott Joplin ns:music.artist.track?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miley Cyrus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miley Cyrus ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miley Cyrus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miley Cyrus ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Afghanistan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Afghanistan ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Afghanistan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Afghanistan ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Afghanistan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Afghanistan ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Afghanistan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Afghanistan ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Prime Minister of Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Prime Minister of Jamaica ns:government.government_office_or_title.office_holders?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Prime minister.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Prime minister.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paul McCartney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paul McCartney ns:music.group_member.membership?y.\n?y ns:music.group_membership.role?x.\n?y ns:music.group_membership.group ns:The Beatles.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paul McCartney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paul McCartney ns:music.group_member.membership?y.\n?y ns:music.group_membership.group?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Juventus F.C.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Juventus F.C. ns:sports.sports_team.championships?x.\n?x ns:sports.sports_championship_event.championship ns:UEFA Champions League Final.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Juventus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Juventus ns:sports.sports_team.championships?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Roberts)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Roberts ns:people.person.parents?x.\n?x ns:people.person.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Roberts)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Roberts ns:people.person.parents?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Victoria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Victoria ns:base.aareas.schema.administrative_area.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Victoria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Victoria ns:location.administrative_division.capital?y.\n?y ns:location.administrative_division_capital_relationship.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Victoria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Victoria ns:location.administrative_division.capital?y.\n?y ns:location.administrative_division_capital_relationship.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Victoria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Victoria ns:location.administrative_division.capital?y.\n?y ns:location.administrative_division_capital_relationship.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Victoria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Victoria ns:location.australian_state.capital_city?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Victoria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Victoria ns:location.administrative_division.capital?y.\n?y ns:location.administrative_division_capital_relationship.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:French)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:French ns:language.human_language.countries_spoken_in?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:French Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:French Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Reggie Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Reggie Bush ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Reggie Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Reggie Bush ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Emily Osment)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Emily Osment ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:base.schemastaging.non_profit_extra.classification ns:Secondary/High School.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Emily Osment)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Emily Osment ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:School.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thor Heyerdahl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thor Heyerdahl ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thor Heyerdahl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thor Heyerdahl ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Troy Aikman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Troy Aikman ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Troy Aikman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Troy Aikman ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cletus Hogg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cletus Hogg ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cletus Hogg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cletus Hogg ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:FA Cup)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:FA Cup ns:sports.sports_award_type.winners?y.\n?y ns:sports.sports_award.award_winner?x.\n?y ns:sports.sports_award.season ns:1975–76 FA Cup.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:FA Cup)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:FA Cup ns:sports.sports_award_type.winners?y.\n?y ns:sports.sports_award.award_winner?x.\n?y ns:sports.sports_award.season ns:1976 FA Cup.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert E. Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert E. Lee ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert E. Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert E. Lee ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henri Matisse)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henri Matisse ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henri Matisse)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henri Matisse ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chuck Bass)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chuck Bass ns:base.gossipgirl.character.played_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gossip Girl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gossip Girl ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Chuck Bass.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gossip Girl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gossip Girl ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Chuck Bass.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gossip Girl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gossip Girl ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Chuck Bass.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Oceania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Oceania ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Oceania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Oceania ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Louis Park)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Louis Park ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Louis Park)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Louis Park ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Louis Park)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Louis Park ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Louis Park)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Louis Park ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Africa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Africa ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Africa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Africa ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:German Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:German Language ns:language.human_language.language_family?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tucson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tucson ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tucson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tucson ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lucy Lawless)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lucy Lawless ns:people.person.date_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lucy Lawless)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lucy Lawless ns:people.person.date_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jill Clayburgh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jill Clayburgh ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jill Clayburgh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jill Clayburgh ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT ?x\nWHERE {\n  ns:Adolf Hitler ns:book.book_subject.works?x.\n ?x ns:book.written_work.date_written?d.\n\n  ns:Adolf Hitler ns:base.prison.prisoner.imprisoned?y.\n ?y          ns:base.prison.imprisonment.from?from ;\n              ns:base.prison.imprisonment.to?to.\n  FILTER (xsd:dateTime(?d) - xsd:dateTime(?from) >= 0)\n  FILTER (xsd:dateTime(?to) - xsd:dateTime(?d) >= 0)\n}", "predict": "SELECT DISTINCT?x\nWHERE {\n  ns:Adolf Hitler ns:book.book_subject.works?x.\n ?x ns:book.written_work.date_written?d.\n\n  ns:Adolf Hitler ns:base.prison.prisoner.imprisoned?y.\n ?y          ns:base.prison.imprisonment.from?from ;\n              ns:base.prison.imprisonment.to?to.\n\n  FILTER (xsd:dateTime(?d) - xsd:dateTime(?from) >= 0)\n  FILTER (xsd:dateTime(?to) - xsd:dateTime(?d) >= 0)\n}"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sydney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sydney ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sydney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sydney ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Marilyn Monroe)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Marilyn Monroe ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Marilyn Monroe)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Marilyn Monroe ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sierra Nevada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sierra Nevada ns:location.location.partially_containedby?x.\n?x ns:base.biblioness.bibs_location.loc_type?sk0.\nFILTER (str(?sk0) = \"State\")\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sierra Nevada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sierra Nevada ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greece)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greece ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greek Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greek Language ns:language.human_language.main_country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greece)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greece ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greek Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greek Language ns:language.human_language.main_country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Speaker of the United States House of Representatives)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Speaker of the United States House of Representatives ns:government.government_office_or_title.office_holders?y.\n?y ns:government.government_position_held.office_holder?x.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Speaker of the United States House of Representatives)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Speaker of the United States House of Representatives ns:government.government_office_or_title.office_holders?y.\n?y ns:government.government_position_held.office_holder?x.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stanley Hudson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stanley Hudson ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stanley Hudson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stanley Hudson ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kelly Clarkson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kelly Clarkson ns:music.artist.label?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kelly Clarkson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kelly Clarkson ns:music.artist.label?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tim Roth)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tim Roth ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tim Roth)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tim Roth ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vietnam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vietnam ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vietnam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vietnam ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Roger Federer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Roger Federer ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Roger Federer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Roger Federer ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Costa Rica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Costa Rica ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Belgium)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Belgium ns:location.country.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Belgium)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Belgium ns:location.country.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Claude Debussy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Claude Debussy ns:music.composer.compositions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Claude Debussy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Claude Debussy ns:music.composer.compositions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Selena Gomez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Selena Gomez ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.seasons ns:Barney & Friends - Season 7.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Selena Gomez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Selena Gomez ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.series ns:Barney & Friends.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Selena Gomez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Selena Gomez ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.seasons ns:Barney & Friends - Season 8.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Selena Gomez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Selena Gomez ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.series ns:Barney & Friends.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Selena Gomez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Selena Gomez ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.series ns:Barney & Friends.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Selena Gomez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Selena Gomez ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.series ns:Barney & Friends.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barney & Friends)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barney & Friends ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.actor ns:Selena Gomez.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Selena Gomez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Selena Gomez ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.series ns:Barney & Friends.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barney & Friends)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barney & Friends ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.seasons ns:Barney & Friends - Season 7.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Selena Gomez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Selena Gomez ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.series ns:Barney & Friends.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barney & Friends)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barney & Friends ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.seasons ns:Barney & Friends - Season 8.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Selena Gomez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Selena Gomez ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.series ns:Barney & Friends.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Hunger Games)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Hunger Games ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Caesar Flickerman.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Hunger Games)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Hunger Games ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Caesar Flickerman.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gettysburg Address)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gettysburg Address ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gettysburg Battlefield)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gettysburg Battlefield ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:people.person.sibling_s?y.\n?y ns:people.sibling_relationship.sibling?x.\n?x ns:people.person.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:people.person.sibling_s?y.\n?y ns:people.sibling_relationship.sibling?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tupac Shakur)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tupac Shakur ns:music.artist.label?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tupac Shakur)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tupac Shakur ns:music.artist.label?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Augustus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Augustus ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Augustus Caesar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Augustus Caesar ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Schenectady)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Schenectady ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Schenectady)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Schenectady ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:President of the United States)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:President of the United States ns:government.government_office_or_title.office_holders?y.\n?y ns:government.government_position_held.office_holder?x.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Google)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Google ns:organization.organization.leadership?y.\n?y ns:organization.leadership.person?x.\nFILTER(NOT EXISTS {?y ns:organization.leadership.from?sk0} || \nEXISTS {?y ns:organization.leadership.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:organization.leadership.to?sk2} || \nEXISTS {?y ns:organization.leadership.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Google)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Google ns:organization.organization.parent?y.\n?y ns:organization.organization_relationship.parent?x.\n?y ns:organization.organization_relationship.child ns:Google Inc.\nFILTER(NOT EXISTS {?y ns:organization.organization_relationship.to?sk0} || \nEXISTS {?y ns:organization.organization_relationship.to?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:organization.organization_relationship.from?sk2} || \nEXISTS {?y ns:organization.organization_relationship.from?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Pemberton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Pemberton ns:law.inventor.inventions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Pemberton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Pemberton ns:citrus.citrus_juice.products?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sir Stanley Matthews)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sir Stanley Matthews ns:soccer.football_player.position_s?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stanley Matthews)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stanley Matthews ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.position?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Edward Stuart)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Edward Stuart ns:fictional_universe.person_in_fiction.representations_in_fiction?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bonnie Prince Charlie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bonnie Prince Charlie ns:people.person.full_name?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stewie Griffin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stewie Griffin ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stewie Griffin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stewie Griffin ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Angelina Jolie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Angelina Jolie ns:people.person.parents?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Angelina Jolie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Angelina Jolie ns:people.person.parents?x.\n?x ns:people.person.gender ns:Female.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Governor of Indiana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Governor of Indiana ns:government.government_office_or_title.office_holders?y.\n?y ns:government.government_position_held.office_holder?x.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Governor of Indiana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Governor of Indiana ns:government.government_office_or_title.office_holders?y.\n?y ns:government.government_position_held.office_holder?x.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brad Pitt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brad Pitt ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n?y ns:celebrities.romantic_relationship.relationship_type ns:Dated.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brad Pitt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brad Pitt ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Francisco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Francisco ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Francisco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Francisco ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stephen Ireland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stephen Ireland ns:base.schemastaging.athlete_extra.salary?y.\n?y ns:base.schemastaging.athlete_salary.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stephen Ireland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stephen Ireland ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stephen Ireland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stephen Ireland ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stephen Ireland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stephen Ireland ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Mayer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Mayer ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Mayer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Mayer ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brody Jenner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brody Jenner ns:base.popstra.celebrity.dated?y.\n?y ns:base.popstra.dated.participant?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brody Jenner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brody Jenner ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brody Jenner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brody Jenner ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brody Jenner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brody Jenner ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Malaysia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Malaysia ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Malaysia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Malaysia ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Volkswagen Passenger Cars)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Volkswagen Passenger Cars ns:organization.organization.parent?y.\n?y ns:organization.organization_relationship.parent?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Volkswagen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Volkswagen ns:organization.organization.board_members?y.\n?y ns:organization.organization_board_membership.member?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rome)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rome ns:travel.travel_destination.how_to_get_here?y.\n?y ns:travel.transportation.transport_terminus?x.\n?y ns:travel.transportation.mode_of_transportation ns:Train.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rome)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rome ns:travel.travel_destination.how_to_get_here?y.\n?y ns:travel.transportation.transport_terminus?x.\n?y ns:travel.transportation.mode_of_transportation ns:Train.\n?x ns:location.location.containedby ns:Rome.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Steve McNair)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Steve McNair ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Steve McNair)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Steve McNair ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:California)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:California ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\n?y ns:government.government_position_held.from?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:California)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:California ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ghost Rider)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ghost Rider ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Roxanne Simpson.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ghost Rider)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ghost Rider ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Roxanne Shantz.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sony Mobile Communications)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sony Mobile Communications ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sony Mobile Communications)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sony Mobile Communications ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dominican Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dominican Republic ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dominican Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dominican Republic ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Manchester)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Manchester ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Manchester)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Manchester ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:sports.sports_team_location.teams?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:sports.sports_team_location.teams?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Google)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Google ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Google)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Google ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jesse Owens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jesse Owens ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jesse Owens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jesse Owens ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carlos Santana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carlos Santana ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carlos Santana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carlos Santana ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Carter)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Carter ns:film.film.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Carter)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Carter ns:film.film.starring?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North American Free Trade Agreement)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North American Free Trade Agreement ns:organization.membership_organization.members?y.\n?y ns:organization.organization_membership.member?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North American Free Trade Agreement)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North American Free Trade Agreement ns:organization.organization.members?y.\n?y ns:organization.organization_membership.members?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Houston)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Houston ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Houston)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Houston ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seattle Seahawks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seattle Seahawks ns:sports.sports_team.arena_stadium?x.\n?x ns:architecture.structure.opened?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seattle Seahawks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seattle Seahawks ns:sports.sports_team.arena_stadium?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Keaton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Keaton ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Cars.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Keaton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Keaton ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Cars.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cars)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cars ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Michael Keaton.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cars)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cars ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Michael Keaton.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Riviera)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Riviera ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Riviera Casino)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Riviera Casino ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.state_province_region?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Buddhism)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Buddhism ns:religion.religion.texts?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Buddhism)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Buddhism ns:religion.religion.texts?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Henry Harrison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Henry Harrison ns:government.us_president.vice_president?x.\n}\n", "predict": "SELECT DISTINCT ?x\nWHERE {\n  ns:m.060d2 ns:government.government_office_or_title.office_holders?y1.  # President of the United States\n ?y1 ns:government.government_position_held.office_holder ns:Henry Harrison ; # Henry Harrison\n ?y1 ns:government.government_position_held.to?to.\n\n  ns:m.060d2 ns:government.government_office_or_title.office_holders?y2.  # President of the United States\n ?y2 ns:government.government_position_held.office_holder?x ;\n ?y2 ns:government.government_position_held.to?from.\n  \n  FILTER(xsd:dateTime(?from) - xsd:dateTime(?to) > 0)\n}\nORDER BY xsd:dateTime(?from)\nLIMIT 1"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Arkwright)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Arkwright ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Arkwright)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Arkwright ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Sachar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Sachar ns:book.author.book_editions_published?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Sachar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Sachar ns:book.author.book_editions_published?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Sachar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Sachar ns:book.author.works_written?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Sachar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Sachar ns:book.author.book_editions_published?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Roth IRA)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Roth IRA ns:symbols.namesake.named_after?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Roth IRA)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Roth IRA ns:organization.organization.date_founded?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.special_performance_type ns:Voice.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.special_performance_type ns:Voice.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Robert Malthus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Robert Malthus ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Malthus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Malthus ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Newark)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Newark ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Newark)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Newark ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tennessee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tennessee ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:base.biblioness.bibs_location.loc_type?sk0.\nFILTER (str(?sk0) = \"State\")\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tennessee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tennessee ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:military.military_combatant.casualties?y.\n?y ns:military.casualties.military_conflict?x.\n?y ns:military.casualties.lower_estimate?sk0.\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:military.military_combatant.casualties?y.\n?y ns:military.casualties.military_conflict?x.\n?y ns:military.casualties.event_type ns:World War I.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Justin Bieber)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Justin Bieber ns:music.artist.track_contributions?y.\n?y ns:music.track_contribution.role?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Justin Bieber)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Justin Bieber ns:music.artist.track_contributions?y.\n?y ns:music.track_contribution.role?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Lennon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Lennon ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Lennon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Lennon ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bangalore)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bangalore ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bangalore)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bangalore ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greece)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greece ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greece)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greece ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greece)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greece ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greece)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greece ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Philadelphia Phillies)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Philadelphia Phillies ns:base.schemastaging.sports_team_extra.training_ground?y.\n?y ns:base.schemastaging.team_training_ground_relationship.facility?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Philadelphia Phillies)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Philadelphia Phillies ns:sports.sports_team.arena_stadium?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Matt Dallas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Matt Dallas ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Matt Dallas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Matt Dallas ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\tFILTER (?x!= ns:John F. Kennedy)\n\t{ \n\t  # Parents\n\t  ns:John F. Kennedy ns:people.person.parents?x.\n\t}\n\tUNION\n\t{\n\t  # Children\n\t  ns:John F. Kennedy ns:people.person.children?x.\n\t}\n\tUNION\n\t{\n\t  # Siblings\n\t  ns:John F. Kennedy ns:people.person.sibling_s?y.\n\t ?y ns:people.sibling_relationship.sibling?x.\n\t}\n\tUNION\n\t{\n\t  # Spouse\n\t  ns:John F. Kennedy ns:people.person.spouse_s?y.\n\t ?y ns:people.marriage.spouse?x.\n\t ?y ns:people.marriage.type_of_union ns:m.04ztj.\n\t  FILTER (NOT EXISTS {?y ns:people.marriage.to []})\n\t}\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:people.person.children?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harley-Davidson Motor Company)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harley-Davidson Motor Company ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harley-Davidson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harley-Davidson ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ottoman Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ottoman Empire ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ottoman Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ottoman Empire ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Osama bin Laden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Osama bin Laden ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Osama bin Laden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Osama bin Laden ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harry Potter)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harry Potter ns:film.film_series.films_in_series?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harry Potter)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harry Potter ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pamela Courson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pamela Courson ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pamela Courson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pamela Courson ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jack Kevorkian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jack Kevorkian ns:base.activism.activist.area_of_activism?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jack Kevorkian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jack Kevorkian ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bolivia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bolivia ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bolivia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bolivia ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nolan Ryan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nolan Ryan ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nolan Ryan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nolan Ryan ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Justin Bieber)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Justin Bieber ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Justin Bieber)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Justin Bieber ns:people.person.nationality?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Supreme Court of the United States)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Supreme Court of the United States ns:government.governmental_body.offices_positions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Supreme Court of the United States)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Supreme Court of the United States ns:law.court.judges?y.\n?y ns:law.judicial_tenure.judge?x.\n?y ns:law.judicial_tenure.title ns:Head Judge.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Frida Kahlo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Frida Kahlo ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Frida Kahlo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Frida Kahlo ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Taylor Swift)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Taylor Swift ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Taylor Swift)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Taylor Swift ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Francisco Giants)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Francisco Giants ns:sports.sports_team.championships?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York Giants)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York Giants ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Waterloo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Waterloo ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Waterloo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Waterloo ns:time.event.locations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vladimir Lenin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vladimir Lenin ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vladimir Lenin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vladimir Lenin ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltimore Ravens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltimore Ravens ns:sports.sports_team.championships?x.\n?x ns:sports.sports_championship_event.championship ns:Super Bowl.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltimore Ravens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltimore Ravens ns:sports.sports_team.championships?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cristiano Ronaldo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cristiano Ronaldo ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cristiano Ronaldo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cristiano Ronaldo ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodor Schwann)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodor Schwann ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodor Schwann)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodor Schwann ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Virginia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Virginia ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.governmental_body ns:United States Senate.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Virginia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Virginia ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.governmental_body ns:United States Senate.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Lesieg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Lesieg ns:base.schemastaging.context_name.official_name?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Lesieg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Lesieg ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Nations Security Council)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Nations Security Council ns:base.unitednations.united_nations_body.members?y.\n?y ns:base.unitednations.united_nations_body_membership.member?x.\nFILTER(NOT EXISTS {?y ns:base.unitednations.united_nations_body_membership.from?sk0} || \nEXISTS {?y ns:base.unitednations.united_nations_body_membership.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:base.unitednations.united_nations_body_membership.to?sk2} || \nEXISTS {?y ns:base.unitednations.united_nations_body_membership.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Security Council)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Security Council ns:organization.organization.members?y.\n?y ns:organization.organization_membership.member?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nordic countries)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nordic countries ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nordic countries)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nordic countries ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ferdinand Magellan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ferdinand Magellan ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ferdinand Magellan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ferdinand Magellan ns:people.person.nationality?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vera-Ellen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vera-Ellen ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vera Ellen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vera Ellen ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto ns:base.biblioness.bibs_location.state?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto ns:base.biblioness.bibs_location.state?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Canadian Province.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto ns:base.biblioness.bibs_location.state?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andy Warhol)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andy Warhol ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andy Warhol)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andy Warhol ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Florida)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Florida ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Florida)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Florida ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carolina Panthers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carolina Panthers ns:american_football.football_team.current_head_coach?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carolina Panthers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carolina Panthers ns:american_football.football_team.current_head_coach?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Sachar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Sachar ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Sachar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Sachar ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Marshall Eriksen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Marshall Eriksen ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Marshall Eriksen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Marshall Eriksen ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Houston)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Houston ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Houston)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Houston ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Otto Frank)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Otto Frank ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Otto Frank)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Otto Frank ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jennifer Lawrence)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jennifer Lawrence ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jennifer Lawrence)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jennifer Lawrence ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pennsylvania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pennsylvania ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pennsylvania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pennsylvania ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Phoenicia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Phoenicia ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Phoenicia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Phoenicia ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Boston Celtics)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Boston Celtics ns:sports.sports_team.arena_stadium?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Boston Celtics)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Boston Celtics ns:sports.sports_team.arena_stadium?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Osama bin Laden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Osama bin Laden ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Osama bin Laden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Osama bin Laden ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto ns:base.infrastructure.infrastructural_municipality.sewage_treatment_plant?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Water supply.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bosnia and Herzegovina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bosnia and Herzegovina ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bosnia and Herzegovina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bosnia and Herzegovina ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bosnia and Herzegovina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bosnia and Herzegovina ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bosnia and Herzegovina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bosnia and Herzegovina ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hugo Chávez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hugo Chávez ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hugo Chávez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hugo Chávez ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.statistical_region.places_imported_from?y.\n?y ns:location.imports_and_exports.imported_from?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.statistical_region.places_imported_from?y.\n?y ns:location.imports_and_exports.imported_from?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sonia Gandhi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sonia Gandhi ns:people.person.children?x.\n?x ns:people.person.gender ns:Female.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sonia Gandhi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sonia Gandhi ns:people.person.children?x.\n?x ns:people.person.gender ns:Female.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Islam ns:religion.religion.deities?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Islam ns:religion.religion.deities?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mary Todd Lincoln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mary Todd Lincoln ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mary Todd Lincoln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mary Todd Lincoln ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Darwin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Darwin ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Darwin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Darwin ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nick Cannon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nick Cannon ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nick Cannon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nick Cannon ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:1906 San Francisco earthquake)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:1906 San Francisco earthquake ns:time.event.start_date?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Francisco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Francisco ns:location.location.nearby_areas?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George VI)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George VI ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.to?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George VI)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George VI ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jesus Christ)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jesus Christ ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jesus Christ)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jesus Christ ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James Dyson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James Dyson ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James Dyson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James Dyson ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.special_performance_type ns:Voice.\n?y ns:film.performance.film ns:Star Wars.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Wars.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Maya Angelou)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Maya Angelou ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?y ns:education.education.degree ns:High school.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Maya Angelou)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Maya Angelou ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:School.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benito Mussolini)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benito Mussolini ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.jurisdiction_of_office?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benito Mussolini)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benito Mussolini ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.jurisdiction_of_office?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Communist Party of China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Communist Party of China ns:organization.organization.founders?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Chairman.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miles Davis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miles Davis ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miles Davis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miles Davis ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Azle)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Azle ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Azle)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Azle ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sally Pearson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sally Pearson ns:olympics.olympic_athlete.medals_won?y.\n?y ns:olympics.olympic_medal_honor.olympics?x.\n?y ns:olympics.olympic_medal_honor.medal ns:Gold medal.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sally Pearson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sally Pearson ns:olympics.olympic_athlete.medals_won?y.\n?y ns:olympics.olympic_medal_honor.olympics?x.\n?y ns:olympics.olympic_medal_honor.medal ns:Gold medal.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Detroit Pistons)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Detroit Pistons ns:sports.sports_team.championships?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Detroit Pistons)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Detroit Pistons ns:sports.sports_team.championships?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Philadelphia Flyers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Philadelphia Flyers ns:sports.sports_team.championships?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Philadelphia Flyers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Philadelphia Flyers ns:sports.sports_team.championships?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dallas Cowboys)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dallas Cowboys ns:sports.sports_team.roster?y.\n?y ns:sports.sports_team_roster.player?x.\n?y ns:sports.sports_team_roster.number?sk0.\nFILTER (str(?sk0) = \"22\")\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk1} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk2. \nFILTER(xsd:datetime(?sk2) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk3} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk4. \nFILTER(xsd:datetime(?sk4) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dallas Cowboys)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dallas Cowboys ns:sports.sports_team.roster?y.\n?y ns:sports.sports_team_roster.player?x.\n?y ns:sports.sports_team_roster.position ns:Quarterback.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Pauls)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Pauls ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Paul ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Olympic National Park)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Olympic National Park ns:base.usnationalparks.us_national_park.state?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Olympic National Park)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Olympic National Park ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Olympic National Park)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Olympic National Park ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Olympic National Park)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Olympic National Park ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nat Turner's slave rebellion)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nat Turner's slave rebellion ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nat Turner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nat Turner ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Luke Skywalker)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Luke Skywalker ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Luke Skywalker)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Luke Skywalker ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkish people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkish people ns:people.ethnicity.geographic_distribution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkish people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkish people ns:people.ethnicity.geographic_distribution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\tns:Barack Obama ns:people.person.place_of_birth?y.\n\t?y ns:location.location.containedby?x.\n\t?x ns:common.topic.notable_types ns:m.0kpys4.  #US State\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?a\nWHERE {\n    ns:Joe Montana ns:sports.pro_athlete.teams?y.\n   ?y ns:sports.sports_team_roster.team?x. #team\n   ?x ns:sports.sports_team.championships?z. # super bowls\n   ?z ns:common.topic.notable_types ns:m.01xljv1. #super bowl\n   ?z ns:sports.sports_championship_event.champion?c.\n   ?z ns:time.event.start_date?a.\n\n  # Check the time overlap\n  FILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \n             EXISTS {?y ns:sports.sports_team_roster.from?sk1. \n             FILTER(xsd:datetime(?sk1) - xsd:datetime(?a) <= 0) })\n\n  FILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \n             EXISTS {?y ns:sports.sports_team_roster.to?sk3. \n             FILTER(xsd:datetime(?sk3) - xsd:datetime(?a) >= 0 ) }) \n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joe Montana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joe Montana ns:sports.sports_award_winner.awards?y.\n?y ns:sports.sports_award.season?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gary Paulsen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gary Paulsen ns:award.award_winner.awards_won?y.\n?y ns:award.award_honor.award?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gary Paulsen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gary Paulsen ns:award.award_winner.awards_won?y.\n?y ns:award.award_honor.award?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alexander Graham Bell)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alexander Graham Bell ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alexander Graham Bell)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alexander Graham Bell ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Golden State Warriors)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Golden State Warriors ns:sports.sports_team.championships?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Golden State Warriors)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Golden State Warriors ns:sports.sports_team.championships?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:base.aareas.schema.administrative_area.administrative_children?x.\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:UK constituent country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltimore Ravens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltimore Ravens ns:sports.sports_team.championships?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltimore Ravens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltimore Ravens ns:sports.sports_team.championships?x.\n?x ns:sports.sports_championship_event.championship ns:Super Bowl.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cambodia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cambodia ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:King.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cambodia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cambodia ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:King.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Serena Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Serena Williams ns:people.person.parents?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Serena Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Serena Williams ns:people.person.parents?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isaac Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isaac Newton ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isaac Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isaac Newton ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Huell Howser)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Huell Howser ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Huell Howser)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Huell Howser ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Suzanne Collins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Suzanne Collins ns:book.author.book_editions_published?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Suzanne Collins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Suzanne Collins ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Suzanne Collins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Suzanne Collins ns:book.author.works_written?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Suzanne Collins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Suzanne Collins ns:book.author.book_editions_published?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:England ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:base.biblioness.bibs_location.loc_type?sk0.\nFILTER (str(?sk0) = \"Country\")\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:England ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lionel Messi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lionel Messi ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lionel Messi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lionel Messi ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greensburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greensburg ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greensburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greensburg ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lord Voldemort)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lord Voldemort ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harry Potter)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harry Potter ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:The Twilight Saga: Breaking Dawn - Part 1.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harper Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harper Lee ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harper Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harper Lee ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ku Klux Klan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ku Klux Klan ns:organization.organization.founders?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ku Klux Klan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ku Klux Klan ns:organization.organization.founders?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nns:John Adams ns:government.politician.government_positions_held?p.\n?p ns:government.government_position_held.office_position_or_title ns:m.060d2.\n?p ns:government.government_position_held.from?from.\nns:John Adams ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.office_position_or_title?x.\n?y ns:government.government_position_held.from?z.\nfilter(xsd:datetime(?z) - xsd:datetime(?from) < 0)\n }", "predict": "SELECT DISTINCT?x\nWHERE {\n  {\n    SELECT?pFrom \n    WHERE {\n      ns:John Adams ns:government.politician.government_positions_held?y. # John Adams\n     ?y ns:government.government_position_held.office_position_or_title?x ; \n         ns:government.government_position_held.basic_title ns:m.060c4 ; # President\n         ns:government.government_position_held.from?pFrom.\n    }\n  }\n  ns:John Adams ns:government.politician.government_positions_held?y. # John Adams\n ?y ns:government.government_position_held.office_position_or_title?x ;\n     ns:government.government_position_held.from?from.\n  \n  FILTER(xsd:dateTime(?pFrom) - xsd:dateTime(?from) > 0)\n}"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Super Mario Bros. 2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Super Mario Bros. 2 ns:cvg.computer_videogame.release_date?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Super Mario Bros.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Super Mario Bros. ns:game.game_character.appears_in_game?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andrew Johnson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andrew Johnson ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andrew Johnson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andrew Johnson ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Osama bin Laden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Osama bin Laden ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Osama bin Laden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Osama bin Laden ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\tns:Ancient Greek temple ns:architecture.building_function.buildings?y.\n\t?y ns:travel.tourist_attraction.near_travel_destination?x.\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greek temples)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greek temples ns:architecture.building.building_type?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arabic Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arabic Language ns:language.human_language.countries_spoken_in?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arabic Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arabic Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arabic Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arabic Language ns:language.human_language.main_country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arabic Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arabic Language ns:language.human_language.main_country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Elizabeth II)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Elizabeth II ns:people.person.parents?x.\n?x ns:people.person.gender ns:Female.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Elizabeth II)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Elizabeth II ns:people.person.parents?x.\n?x ns:people.person.gender ns:Female.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pablo Picasso)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pablo Picasso ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pablo Picasso)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pablo Picasso ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ella Fitzgerald)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ella Fitzgerald ns:people.person.parents?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ella Fitzgerald)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ella Fitzgerald ns:people.person.parents?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anne Hathaway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anne Hathaway ns:people.person.parents?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anne Hathaway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anne Hathaway ns:people.person.parents?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Don Draper)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Don Draper ns:fictional_universe.fictional_character.married_to?y.\n?y ns:fictional_universe.marriage_of_fictional_characters.spouses?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Don Draper)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Don Draper ns:fictional_universe.fictional_character.romantically_involved_with?y.\n?y ns:fictional_universe.romantic_involvement.partner?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Van Halen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Van Halen ns:music.artist.album?x.\n?x ns:music.album.release_date?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Van Halen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Van Halen ns:music.group.member?y.\n?y ns:music.group_membership.member?x.\n?y ns:music.group_membership.role ns:First album.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Supreme Court of the United States)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Supreme Court of the United States ns:law.court.legal_cases?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Supreme Court of the United States)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Supreme Court of the United States ns:law.court.legislative_history?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pennsylvania State University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pennsylvania State University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Penn State University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Penn State University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alaska)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alaska ns:base.biblioness.bibs_location.country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alaska)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alaska ns:location.administrative_division.country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alaska)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alaska ns:base.locations.states_and_provences.country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alaska)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alaska ns:location.administrative_division.country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alaska)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alaska ns:location.administrative_division.country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alaska)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alaska ns:location.administrative_division.country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kansas City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kansas City ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kansas City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kansas City ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pink Floyd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pink Floyd ns:music.artist.album?x.\n?x ns:music.album.release_date?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pink Floyd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pink Floyd ns:music.group.members?y.\n?y ns:music.group_membership.member?x.\n?x ns:music.album.number?sk0.\nFILTER (str(?sk0) = \"1\")\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Granville Woods)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Granville Woods ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Granville T. Woods)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Granville T. Woods ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sioux)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sioux ns:people.ethnicity.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sioux people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sioux people ns:people.ethnicity.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:El Salvador)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:El Salvador ns:location.location.people_born_here?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:El Salvador)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:El Salvador ns:location.country.people_born_here?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brett Gardner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brett Gardner ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brett Gardner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brett Gardner ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Office)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Office ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Dwight Schrute.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dwight Schrute)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dwight Schrute ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Diego)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Diego ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Diego)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Diego ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miami Dolphins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miami Dolphins ns:sports.sports_team.roster?y.\n?y ns:sports.sports_team_roster.player?x.\n?y ns:sports.sports_team_roster.position ns:Quarterback.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miami Dolphins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miami Dolphins ns:sports.sports_team.roster?y.\n?y ns:sports.sports_team_roster.player?x.\n?y ns:sports.sports_team_roster.position ns:Quarterback.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anne Frank)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anne Frank ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anne Frank)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anne Frank ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Monica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Monica ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n?x ns:people.person.profession ns:Basketball player.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Monica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Monica ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:base.activism.activist.area_of_activism?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denver Broncos)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denver Broncos ns:sports.sports_team.championships?x.\n?x ns:time.event.instance_of_recurring_event ns:Super Bowl.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denver Broncos)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denver Broncos ns:sports.sports_team.championships?x.\n?x ns:sports.sports_championship_event.championship ns:Super Bowl.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Julius Caesar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Julius Caesar ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Caesar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Caesar ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bessie Smith)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bessie Smith ns:music.artist.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bessie Smith)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bessie Smith ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jackie Robinson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jackie Robinson ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jackie Robinson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jackie Robinson ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chicago)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chicago ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chicago)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chicago ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dominican Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dominican Republic ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dominican Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dominican Republic ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ronald Reagan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ronald Reagan ns:government.us_president.vice_president?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ronald Reagan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ronald Reagan ns:government.us_president.vice_president?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chicago White Sox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chicago White Sox ns:sports.sports_team.arena_stadium?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chicago White Sox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chicago White Sox ns:sports.sports_team.arena_stadium?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jeff Conaway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jeff Conaway ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Grease.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jeff Conaway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jeff Conaway ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Grease.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Grease)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Grease ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Jeff Conaway.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jeff Conaway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jeff Conaway ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Grease.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:book.author.works_written?x.\n?x ns:common.topic.notable_types ns:Book.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barbados)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barbados ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barbados)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barbados ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stanley Cup)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stanley Cup ns:symbols.namesake.named_after?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stanley Cup)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stanley Cup ns:user.mycup.default_domain.object.assigned_to?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Syracuse)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Syracuse ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Syracuse)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Syracuse ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tennessee Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tennessee Williams ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tennessee Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tennessee Williams ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York City ns:travel.travel_destination.how_to_get_here?y.\n?y ns:travel.transportation.transport_terminus?x.\n?y ns:travel.transportation.mode_of_transportation ns:Air travel.\n?x ns:location.location.containedby ns:New York.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Airport.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Queen Victoria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Queen Victoria ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Queen Victoria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Queen Victoria ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:people.person.employment_history?y.\n?y ns:business.employment_tenure.company?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barbara Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barbara Bush ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.basic_title?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barbara Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barbara Bush ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barbara Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barbara Bush ns:people.person.employment_history?y.\n?y ns:business.employment_tenure.title?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barbara Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barbara Bush ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jacob Latimore)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jacob Latimore ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jacob Latimore)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jacob Latimore ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dunkirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dunkirk ns:location.location.events?x.\n?x ns:time.event.included_in_event ns:World War II.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dunkirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dunkirk ns:time.event.locations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scottie Pippen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scottie Pippen ns:sports.pro_athlete.sports_played_professionally?y.\n?y ns:sports.pro_sports_played.sport?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scottie Pippen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scottie Pippen ns:sports.pro_athlete.sports_played_professionally?y.\n?y ns:sports.pro_sports_played.sport?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Donnatella Moss)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Donnatella Moss ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.series ns:The West Wing.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The West Wing)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The West Wing ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Donna West.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Meg Griffin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Meg Griffin ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.seasons ns:Family Guy - Season 1.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Meg Griffin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Meg Griffin ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.series ns:Family Guy.\nFILTER(NOT EXISTS {?y ns:tv.regular_tv_appearance.from?sk0} || \nEXISTS {?y ns:tv.regular_tv_appearance.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:tv.regular_tv_appearance.to?sk2} || \nEXISTS {?y ns:tv.regular_tv_appearance.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dallas Cowboys)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dallas Cowboys ns:sports.sports_team.championships?x.\n?x ns:sports.sports_championship_event.championship ns:Super Bowl.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dallas Cowboys)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dallas Cowboys ns:sports.sports_team.championships?x.\n?x ns:sports.sports_championship_event.championship ns:Super Bowl.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ireland national rugby union team)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ireland national rugby union team ns:sports.sports_team.arena_stadium?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ireland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ireland ns:sports.sports_team.arena_stadium?x.\n?x ns:architecture.structure.opened?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lee Harvey Oswald)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lee Harvey Oswald ns:user.alexander.misc.murdered_person.murdered_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lee Harvey Oswald)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lee Harvey Oswald ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York Knicks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York Knicks ns:sports.sports_team.championships?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York Knicks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York Knicks ns:sports.sports_team.championships?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Boston Celtics)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Boston Celtics ns:sports.sports_team.championships?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Boston Celtics)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Boston Celtics ns:sports.sports_team.championships?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Oceania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Oceania ns:location.location.contains?x.\n?x ns:base.biblioness.bibs_location.loc_type?sk0.\nFILTER (str(?sk0) = \"Country\")\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Oceania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Oceania ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nicki Minaj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nicki Minaj ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nicki Minaj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nicki Minaj ns:people.person.nationality?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Professor Albus Dumbledore)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Professor Albus Dumbledore ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harry Potter and the Philosopher's Stone)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harry Potter and the Philosopher's Stone ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Professor Albus Dumbledore.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Prime Minister of Pakistan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Prime Minister of Pakistan ns:government.government_office_or_title.office_holders?y.\n?y ns:government.government_position_held.office_holder?x.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pakistan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pakistan ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Prime minister.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Christopher Plummer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Christopher Plummer ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Christopher Plummer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Christopher Plummer ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Morocco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Morocco ns:location.country.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Morocco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Morocco ns:location.country.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Omar Epps)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Omar Epps ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Omar Epps)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Omar Epps ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nancy Pelosi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nancy Pelosi ns:base.government2.elected_official.elected_positions_held?y.\n?y ns:base.government2.elected_government_positions_held.district_represented?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nancy Pelosi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nancy Pelosi ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.district_represented?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nancy Pelosi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nancy Pelosi ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.district_represented?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nancy Pelosi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nancy Pelosi ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.district_represented?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Walton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Walton ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Walton, Indiana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Walton, Indiana ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George H. W. Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George H. W. Bush ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Walker Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Walker Bush ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Caitlyn Jenner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Caitlyn Jenner ns:olympics.olympic_athlete.medals_won?y.\n?y ns:olympics.olympic_medal_honor.event?x.\n?y ns:olympics.olympic_medal_honor.medal ns:Gold medal.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Caitlyn Jenner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Caitlyn Jenner ns:olympics.olympic_athlete.medals_won?y.\n?y ns:olympics.olympic_medal_honor.event?x.\n?y ns:olympics.olympic_medal_honor.medal ns:Gold medal.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Standard Tibetan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Standard Tibetan ns:language.human_language.main_country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tibetan Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tibetan Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hollywood)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hollywood ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hollywood)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hollywood ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kim Kardashian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kim Kardashian ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kim Kardashian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kim Kardashian ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Justin Bieber)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Justin Bieber ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Justin Bieber)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Justin Bieber ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Santa Clause)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Santa Clause ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Charlie Calvin.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Santa Claus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Santa Claus ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:The Santa Clause.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:R. Kelly)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:R. Kelly ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:education.educational_institution.school_type ns:High school.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:R.Kelly)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:R.Kelly ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:education.educational_institution.school_type ns:High school.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benghazi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benghazi ns:location.location.events?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benghazi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benghazi ns:event.location.events?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nike, Inc.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nike, Inc. ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nike, Inc.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nike, Inc. ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Steve Spurrier)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Steve Spurrier ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:common.topic.notable_types ns:Professional Sports Team.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Steve Spurrier)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Steve Spurrier ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chicago Blackhawks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chicago Blackhawks ns:sports.sports_team.arena_stadium?x.\n?x ns:architecture.structure.opened?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chicago Blackhawks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chicago Blackhawks ns:sports.sports_team.arena_stadium?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Connor)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Connor ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Connor)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Connor ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italian people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italian people ns:people.ethnicity.included_in_group?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Angelina Jolie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Angelina Jolie ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Angelina Jolie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Angelina Jolie ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Trek Generations.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Trek II: The Wrath of Khan.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Trek III: The Search for Spock.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Trek IV: The Voyage Home.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Trek V: The Final Frontier.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Trek VI: The Undiscovered Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Trek: The Motion Picture.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dana Scully)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dana Scully ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:The X-Files.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The X-Files)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The X-Files ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Dana Scully.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:F. Scott Fitzgerald)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:F. Scott Fitzgerald ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:F. Scott Fitzgerald)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:F. Scott Fitzgerald ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York Knicks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York Knicks ns:basketball.basketball_team.head_coach?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York Knicks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York Knicks ns:basketball.basketball_team.head_coach?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wesley Snipes)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wesley Snipes ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wesley Snipes)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wesley Snipes ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sherrod Brown)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sherrod Brown ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sherrod Brown)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sherrod Brown ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:England ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:England ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:England ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Meg Griffin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Meg Griffin ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Meg Griffin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Meg Griffin ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mali)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mali ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mali)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mali ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cristiano Ronaldo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cristiano Ronaldo ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cristiano Ronaldo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cristiano Ronaldo ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Morgantown)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Morgantown ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Morgantown)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Morgantown ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jacksonville)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jacksonville ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jacksonville)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jacksonville ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Amy Stiller)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Amy Stiller ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:DodgeBall: A True Underdog Story.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Amy Stiller)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Amy Stiller ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Dodgeball.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:DodgeBall: A True Underdog Story)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:DodgeBall: A True Underdog Story ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Amy Stiller.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Amy Stiller)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Amy Stiller ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Dodgeball.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henry VII of England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henry VII of England ns:people.person.children?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henry VII)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henry VII ns:people.person.children?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Family Guy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Family Guy ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.actor ns:Mila Kunis.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Family Guy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Family Guy ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.actor ns:Mila Kunis.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:1906 San Francisco earthquake)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:1906 San Francisco earthquake ns:time.event.start_date?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:1906 San Francisco earthquake)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:1906 San Francisco earthquake ns:time.event.start_date?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Omen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Omen ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Damien Thorn.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Omen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Omen ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Damien.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Four Christmases)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Four Christmases ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Denver.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Four Christmases)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Four Christmases ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Denver Pines.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Essex)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Essex ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Essex)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Essex ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cleveland Cavaliers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cleveland Cavaliers ns:sports.professional_sports_team.draft_picks?y.\n?y ns:sports.sports_league_draft_pick.player?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cleveland Cavaliers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cleveland Cavaliers ns:sports.professional_sports_team.draft_picks?y.\n?y ns:sports.sports_league_draft_pick.player?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anne Frank)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anne Frank ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anne Frank)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anne Frank ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Timor-Leste)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Timor-Leste ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:East Timor)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:East Timor ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Timor-Leste)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Timor-Leste ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:East Timor)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:East Timor ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greek Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greek Language ns:base.rosetta.languoid.parent?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greek Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greek Language ns:language.human_language.language_family?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Audrey Hepburn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Audrey Hepburn ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Audrey Hepburn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Audrey Hepburn ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.special_performance_type ns:Voice.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.special_performance_type ns:Voice.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Douglas MacArthur)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Douglas MacArthur ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Douglas MacArthur)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Douglas MacArthur ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barbados)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barbados ns:location.location.people_born_here?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barbados)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barbados ns:location.location.people_born_here?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:China)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:China ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:people.person.children?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:people.person.children?x.\n?x ns:people.person.gender ns:Female.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arizona)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arizona ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arizona)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arizona ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lamar Odom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lamar Odom ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lamar Odom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lamar Odom ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Great Pyramid of Giza)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Great Pyramid of Giza ns:architecture.building.building_complex?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Great Pyramid of Giza)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Great Pyramid of Giza ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Great Pyramid of Giza)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Great Pyramid of Giza ns:base.ancientegypt.pyramid.site?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Great Pyramid of Giza)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Great Pyramid of Giza ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:KV62)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:KV62 ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tutankhamun)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tutankhamun ns:base.ancientegypt.pyramid.mortuary_tomb.tomb_owner?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Abraham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Abraham ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Abraham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Abraham ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Washington Carver)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Washington Carver ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Washington Carver)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Washington Carver ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:sports.sports_team_location.teams?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:sports.sports_team_location.teams?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Poland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Poland ns:sports.sports_team_location.teams?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Poland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Poland ns:sports.sports_team_location.teams?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Demi Lovato)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Demi Lovato ns:base.popstra.celebrity.dated?y.\n?y ns:base.popstra.dated.participant?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Demi Lovato)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Demi Lovato ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n?y ns:celebrities.romantic_relationship.relationship_type ns:Dated.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Demi Lovato)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Demi Lovato ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Demi Lovato)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Demi Lovato ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n?y ns:celebrities.romantic_relationship.relationship_type ns:Dated.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scarlett Johansson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scarlett Johansson ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scarlett Johansson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scarlett Johansson ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Family Guy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Family Guy ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Meg Griffin.\n?y ns:tv.regular_tv_appearance.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Meg Griffin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Meg Griffin ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bad Teacher)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bad Teacher ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Amy Squirrel.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Amy Squirrel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Amy Squirrel ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Bad Teacher.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Boeing)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Boeing ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Boeing)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Boeing ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Viggo Mortensen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Viggo Mortensen ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:The Lord of the Rings: The Fellowship of the Ring.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Lord of the Rings: The Return of the King)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Lord of the Rings: The Return of the King ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Viggo Mortensen.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Viggo Mortensen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Viggo Mortensen ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:The Lord of the Rings: The Return of the King.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Viggo Mortensen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Viggo Mortensen ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:The Lord of the Rings: The Return of the King.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Viggo Mortensen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Viggo Mortensen ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:The Lord of the Rings: The Two Towers.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Lord of the Rings: The Return of the King)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Lord of the Rings: The Return of the King ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Viggo Mortensen.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Lord of the Rings: The Fellowship of the Ring)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Lord of the Rings: The Fellowship of the Ring ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Viggo Mortensen.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Lord of the Rings: The Return of the King)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Lord of the Rings: The Return of the King ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Viggo Mortensen.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Lord of the Rings: The Return of the King)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Lord of the Rings: The Return of the King ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Viggo Mortensen.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Viggo Mortensen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Viggo Mortensen ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:The Lord of the Rings: The Return of the King.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isaac Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isaac Newton ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isaac Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isaac Newton ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Shakespeare)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Shakespeare ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Shakespeare)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Shakespeare ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Queen Latifah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Queen Latifah ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Queen Latifah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Queen Latifah ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michelle Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michelle Obama ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michelle Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michelle Obama ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Life of Franz Liszt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Life of Franz Liszt ns:music.artist.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Franz Liszt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Franz Liszt ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David Luiz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:David Luiz ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:sports.sports_team.championships ns:1958 FIFA World Cup.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David Luiz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:David Luiz ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Jefferson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Jefferson ns:book.author.works_written?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Jefferson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Jefferson ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Victoria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Victoria ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Victoria)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Victoria ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mary Mary)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mary Mary ns:music.musical_group.member?y.\n?y ns:music.group_membership.member?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mary)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mary ns:fictional_universe.fictional_character.sisters?y.\n?y ns:fictional_universe.sister_relationship_of_fictional_characters.sister?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David Beckham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:David Beckham ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David Beckham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:David Beckham ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nick Cannon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nick Cannon ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nick Cannon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nick Cannon ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:NPR)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:NPR ns:broadcast.radio_network.affiliates?y.\n?y ns:broadcast.radio_affiliation_duration.station?x.\n?x ns:broadcast.broadcast.area_served ns:New York City.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:National Public Radio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:National Public Radio ns:music.radio_station_format.station?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tom Landry)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tom Landry ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tom Landry)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tom Landry ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Jay)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Jay ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Jay)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Jay ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mount Fuji)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mount Fuji ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mount Fuji)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mount Fuji ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toussaint Louverture)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toussaint Louverture ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toussaint Louverture)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toussaint Louverture ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:base.aareas.schema.administrative_area.administrative_children?x.\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:UK constituent country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lawton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lawton ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lawton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lawton ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:German Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:German Language ns:language.human_language.countries_spoken_in?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:German Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:German Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark McGwire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark McGwire ns:baseball.baseball_player.lifetime_batting_statistics?y.\n?y ns:baseball.lifetime_batting_statistics.ending_season?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark McGwire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark McGwire ns:sports.pro_athlete.sports_played_professionally?y.\n?y ns:sports.pro_sports_played.career_end?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark McGwire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark McGwire ns:baseball.baseball_player.lifetime_batting_statistics?y.\n?y ns:baseball.lifetime_batting_statistics.last_statistics_season?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark McGwire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark McGwire ns:sports.pro_athlete.sports_played_professionally?y.\n?y ns:sports.pro_sports_played.career_end?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colorado Technical University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colorado Technical University ns:common.topic.notable_types?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colorado Technical University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colorado Technical University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:location.country.currency_formerly_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:location.country.currency_formerly_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kentucky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kentucky ns:government.governmental_jurisdiction.official_symbols?y.\n?y ns:location.location_symbol_relationship.symbol?x.\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:Motto.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kentucky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kentucky ns:government.governmental_jurisdiction.official_symbols?y.\n?y ns:location.location_symbol_relationship.symbol?x.\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:Slogan.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bewitched)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bewitched ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Samantha.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:W bewitched)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:W bewitched ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Samantha Stephens.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isaac Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isaac Newton ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isaac Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isaac Newton ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Diego)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Diego ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Diego)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Diego ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Diego International Airport)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Diego International Airport ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Diego)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Diego ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n"}
{"label": "SELECT DISTINCT?x \nWHERE {\n    ns:North America ns:location.location.contains?x.  # North America\n   ?x ns:common.topic.notable_types ns:m.01mp. # Country\n   ?x ns:location.location.contains?y.\n   ?y ns:common.topic.notable_types?t. \n# All the possible \"province\" type\nFILTER ((?t = ns:m.01nm) ||\n(?t = ns:m.02_1y_9) ||\n(?t = ns:m.02_3ny_) ||\n(?t = ns:m.02_3phk) ||\n(?t = ns:m.02_3r2r) ||\n(?t = ns:m.02_3rt3) ||\n(?t = ns:m.02_3zf4) ||\n(?t = ns:m.02_40h1) ||\n(?t = ns:m.02_96lm) ||\n(?t = ns:m.02yxk5c) ||\n(?t = ns:m.02zd6yn) ||\n(?t = ns:m.03z96kq) ||\n(?t = ns:m.04g7rg9) ||\n(?t = ns:m.04js0h5) ||\n(?t = ns:m.065rjpr) ||\n(?t = ns:m.078_8dm) ||\n(?t = ns:m.0hzcb3l) ||\n(?t = ns:m.0hzcb5p) ||\n(?t = ns:m.0hzcb69) ||\n(?t = ns:m.0hzcb7p) ||\n(?t = ns:m.0hzcd76) ||\n(?t = ns:m.0hzcd7v) ||\n(?t", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North America ns:base.locations.provinces.country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Santa Claus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Santa Claus ns:fictional_universe.fictional_character.based_on?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Santa Claus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Santa Claus ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kelly Slater)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kelly Slater ns:sports.pro_athlete.sports_played_professionally?y.\n?y ns:sports.pro_sports_played.career_start?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kelly Slater)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kelly Slater ns:sports.pro_athlete.career_start?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Coretta Scott King)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Coretta Scott King ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Coretta Scott King)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Coretta Scott King ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n ?x ns:common.topic.alias \"W H Smith\"@en.\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Smith)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Smith ns:organization.organization_founder.organizations_founded?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Nixon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Nixon ns:government.us_president.vice_president?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Nixon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Nixon ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.office_position_or_title?x.\n?y ns:government.government_position_held.basic_title ns:Vice President.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:people.person.religion?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:people.person.religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Illinois River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Illinois River ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Illinois River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Illinois River ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Honduras)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Honduras ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Honduras)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Honduras ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ronaldinho)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ronaldinho ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ronaldinho)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ronaldinho ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Galileo Galilei)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Galileo Galilei ns:user.lindenb.default_domain.scientist.known_for?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Galileo Galilei)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Galileo Galilei ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x \nWHERE {\n\tFILTER (?x!= ns:Germany)\n\t{ \n\t  ns:Germany ns:location.statistical_region.places_exported_to?y.\n\t ?y ns:location.imports_and_exports.exported_to?x. \n\t}\n\tUNION\n\t{\n\t  ns:Germany ns:location.statistical_region.places_imported_from?y.\n\t ?y ns:location.imports_and_exports.imported_from?x. \n\t}\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.statistical_region.major_exports?y.\n?y ns:location.imports_exports_by_industry.industry?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?y ns:education.education.degree ns:Bachelor of Arts.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Johnny Depp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Johnny Depp ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Corpse Bride.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Johnny Depp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Johnny Depp ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:The Corpse Bride.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Corpse Bride)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Corpse Bride ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Johnny Depp.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Johnny Depp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Johnny Depp ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:The Corpse Bride.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jonesboro)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jonesboro ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jonesboro)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jonesboro ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:S. E. Hinton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:S. E. Hinton ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sean T. Hinton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sean T. Hinton ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Fearless Tour)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Fearless Tour ns:time.event.start_date?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Taylor Swift)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Taylor Swift ns:music.artist.date_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Darwin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Darwin ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Darwin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Darwin ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:KITT)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:KITT ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.special_performance_type ns:Voice.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:KITT)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:KITT ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.special_performance_type ns:Voice.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Eminem)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Eminem ns:base.schemastaging.context_name.official_name?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Eminem)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Eminem ns:base.schemastaging.context_name.official_name?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Amy Grant)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Amy Grant ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Amy Grant)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Amy Grant ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n?y ns:people.marriage.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Central America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Central America ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Central America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Central America ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamie Lynn Spears)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamie Lynn Spears ns:people.person.children?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamie Spears)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamie Spears ns:people.person.children?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:people.person.parents?x.\n?x ns:people.person.gender ns:Female.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:people.person.parents?x.\n?x ns:people.person.gender ns:Female.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Clemson University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Clemson University ns:education.educational_institution.mascot?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Clemson University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Clemson University ns:education.educational_institution.mascot?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South America ns:location.location.contains?x.\n?x ns:geography.geographical_feature.category ns:Forest.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South America ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Region.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Claude Monet)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Claude Monet ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Claude Monet)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Claude Monet ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iraq War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iraq War ns:time.event.start_date?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iraq War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iraq War ns:military.military_conflict.start_date?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kurt Cobain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kurt Cobain ns:music.guitarist.guitars_played?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kurt Cobain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kurt Cobain ns:music.guitarist.guitars_played?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jennifer Lawrence)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jennifer Lawrence ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:X-Men: Days of Future Past.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jennifer Lawrence)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jennifer Lawrence ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:X-Men: First Class.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Virginia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Virginia ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Virginia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Virginia ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.special_performance_type ns:Voice.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.special_performance_type ns:Voice.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Walton County)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Walton County ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Walton County)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Walton County ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jacqueline Kennedy Onassis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jacqueline Kennedy Onassis ns:people.deceased_person.cause_of_death?x.\n?x ns:medicine.disease.parent_disease ns:Cancer.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jacqueline Kennedy Onassis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jacqueline Kennedy Onassis ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lauren Conrad)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lauren Conrad ns:people.person.education?y.\n?y ns:education.education.major_field_of_study?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lauren Conrad)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lauren Conrad ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pennsylvania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pennsylvania ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pennsylvania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pennsylvania ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mario Lopez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mario Lopez ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mario Lopez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mario Lopez ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tupac Shakur)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tupac Shakur ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tupac Shakur)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tupac Shakur ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Lucas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Lucas ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Star Wars Episode III: Revenge of the Sith.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Lucas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Lucas ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Star Wars.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sarah Dessen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sarah Dessen ns:film.film_story_contributor.film_story_credits?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sarah Dessen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sarah Dessen ns:book.author.works_written?x.\n?x ns:common.topic.notable_types ns:Movie.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hawaii)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hawaii ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kauai County)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kauai County ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hawaiian Islands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hawaiian Islands ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kauai County)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kauai County ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kauai)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kauai ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kauai County)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kauai County ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kauai County)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kauai County ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kauai County)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kauai County ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hawaii)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hawaii ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kauai)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kauai ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Farrah Fawcett)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Farrah Fawcett ns:people.deceased_person.place_of_burial?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Farrah Fawcett)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Farrah Fawcett ns:people.deceased_person.place_of_burial?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Steinbeck)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Steinbeck ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Steinbeck)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Steinbeck ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cuba)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cuba ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cuba)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cuba ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.countries_spoken_in?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.main_country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bahamas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bahamas ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bahamas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bahamas ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bahamas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bahamas ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bahamas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bahamas ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Michael)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Michael ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Michael)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Michael ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cristiano Ronaldo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cristiano Ronaldo ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cristiano Ronaldo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cristiano Ronaldo ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bahamas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bahamas ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bahamas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bahamas ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Samuel Taylor Coleridge)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Samuel Taylor Coleridge ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Samuel Taylor Coleridge)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Samuel Taylor Coleridge ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kim Kardashian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kim Kardashian ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kim Kardashian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kim Kardashian ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mississippi River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mississippi River ns:geography.river.mouth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mississippi River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mississippi River ns:geography.river.mouth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Psych)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Psych ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Carlton Lassiter.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carlton Lassiter)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carlton Lassiter ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Israel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Israel ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Israel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Israel ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ancestral Puebloans)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ancestral Puebloans ns:people.ethnicity.geographic_distribution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anasazi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anasazi ns:people.ethnicity.geographic_distribution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harley Quinn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harley Quinn ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harley Quinn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harley Quinn ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Francis Bacon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Francis Bacon ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Francis Bacon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Francis Bacon ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Libya)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Libya ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Chairman.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Libya)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Libya ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:King.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:NCIS)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:NCIS ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.seasons?x.\n?y ns:tv.regular_tv_appearance.character ns:Mossad Agent Ziva David.\n?x ns:tv.tv_series_season.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ziva)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ziva ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.from?x.\n?y ns:tv.regular_tv_appearance.series ns:NCIS.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:location.country.national_anthem?y.\n?y ns:government.national_anthem_of_a_country.anthem?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:location.country.national_anthem?y.\n?y ns:government.national_anthem_of_a_country.anthem?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Zuckerberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Zuckerberg ns:people.person.education?y.\n?y ns:education.education.major_field_of_study?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Zuckerberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Zuckerberg ns:people.person.education?y.\n?y ns:education.education.major_field_of_study?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\tns:Michael Jackson ns:people.person.place_of_birth?y.\n\t?y ns:location.location.containedby?x.\n\t?x ns:common.topic.notable_types ns:m.01mp.  #Country\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stephen Covey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stephen Covey ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stephen R. Covey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stephen R. Covey ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joseph Stalin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joseph Stalin ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.jurisdiction_of_office?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joseph Stalin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joseph Stalin ns:people.person.nationality?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Monta Ellis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Monta Ellis ns:sports.sports_award_winner.awards?y.\n?y ns:sports.sports_award.award?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Monta Ellis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Monta Ellis ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:common.topic.notable_types ns:Baseball Team.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rihanna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rihanna ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rihanna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rihanna ns:people.person.nationality?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shannen Doherty)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shannen Doherty ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shannen Doherty)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shannen Doherty ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joakim Noah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joakim Noah ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joakim Noah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joakim Noah ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Billy Elliot)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Billy Elliot ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Billy Elliot.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Billy Elliot)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Billy Elliot ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Billy Elliot.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kourtney Kardashian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kourtney Kardashian ns:base.popstra.celebrity.dated?y.\n?y ns:base.popstra.dated.participant?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kourtney Kardashian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kourtney Kardashian ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Australia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Australia ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Howie Long)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Howie Long ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Howie Long)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Howie Long ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greek alphabet)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greek alphabet ns:language.language_writing_system.parent_writing_systems?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Greek alphabet)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Greek alphabet ns:base.rosetta.font.family.font_family?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Elizabethtown)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Elizabethtown ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Elizabethtown)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Elizabethtown ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Christchurch)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Christchurch ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Christchurch)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Christchurch ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chris Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chris Paul ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chris Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chris Paul ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Albert Pujols)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Albert Pujols ns:sports.sports_award_winner.awards?y.\n?y ns:sports.sports_award.season?x.\n?y ns:sports.sports_award.award ns:National League Rookie of the Year.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Albert Pujols)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Albert Pujols ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.draft?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York Giants)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York Giants ns:sports.sports_team.colors?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York Giants)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York Giants ns:sports.sports_team.colors?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andrew Carnegie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andrew Carnegie ns:base.kwebbase.kwtopic.disciplines?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andrew Carnegie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andrew Carnegie ns:business.business_owner.business_based_on?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isaac Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isaac Newton ns:law.inventor.inventions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isaac Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isaac Newton ns:law.inventor.inventions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shaquille O'Neal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shaquille O'Neal ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shaquille O'Neal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shaquille O'Neal ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?y ns:sports.sports_team_roster.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mickey Mouse)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mickey Mouse ns:fictional_universe.fictional_character.character_created_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mickey Mouse)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mickey Mouse ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Mickey Mouse.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Concord)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Concord ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Concord)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Concord ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Vick)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Vick ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Vick)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Vick ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Columbia River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Columbia River ns:geography.river.origin?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Columbia River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Columbia River ns:geography.river.origin?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harry Potter)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harry Potter ns:book.book_character.appears_in_book?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harry Potter)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harry Potter ns:book.book_character.appears_in_book?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Walter Raleigh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Walter Raleigh ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sir Walter Raleigh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sir Walter Raleigh ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Euro)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Euro ns:finance.currency.countries_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Euro)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Euro ns:finance.currency.countries_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barbados)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barbados ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barbados)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barbados ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Angelina Jolie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Angelina Jolie ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Angelina Jolie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Angelina Jolie ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nineveh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nineveh ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nineveh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nineveh ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New Mexico ns:government.governmental_jurisdiction.official_symbols?y.\n?y ns:location.location_symbol_relationship.symbol?x.\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:State flower.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New Mexico ns:government.governmental_jurisdiction.official_symbols?y.\n?y ns:location.location_symbol_relationship.symbol?x.\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:State flower.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:National FFA Organization)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:National FFA Organization ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:National Federation of High School Football Leagues)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:National Federation of High School Football Leagues ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:German Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:German Language ns:language.human_language.countries_spoken_in?x.\n?x ns:location.country.official_language ns:German Language.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germanic languages)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germanic languages ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Lord of the Rings: The Return of the King)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Lord of the Rings: The Return of the King ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Éowyn.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Eowyn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Eowyn ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:The Lord of the Rings: The Two Towers.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:2012 Masters Tournament)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:2012 Masters Tournament ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Augusta Masters)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Augusta Masters ns:time.event.locations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Eva Perón)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Eva Perón ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Eva Perón)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Eva Perón ns:people.deceased_person.cause_of_death?x.\n?x ns:people.cause_of_death.parent_cause_of_death ns:Cancer.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Terrell Owens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Terrell Owens ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Terrell Owens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Terrell Owens ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denmark)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denmark ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denmark)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denmark ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denmark)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denmark ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denmark)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denmark ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ernest Hemingway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ernest Hemingway ns:book.author.book_editions_published?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ernest Hemingway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ernest Hemingway ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ernest Hemingway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ernest Hemingway ns:book.author.works_written?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ernest Hemingway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ernest Hemingway ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltimore Ravens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltimore Ravens ns:sports.sports_team.championships?x.\n?x ns:common.topic.notable_types ns:Super bowl.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltimore Ravens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltimore Ravens ns:sports.sports_team.championships?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Passchendaele)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Passchendaele ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Passchendaele)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Passchendaele ns:time.event.locations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ohio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ohio ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Region.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ohio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ohio ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cristiano Ronaldo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cristiano Ronaldo ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cristiano Ronaldo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cristiano Ronaldo ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michigan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michigan ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michigan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michigan ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Tyler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Tyler ns:common.topic.notable_types?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Tyler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Tyler ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sergio Romo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sergio Romo ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Romo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Romo ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jay Moriarty)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jay Moriarty ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jay Moriarty)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jay Moriarty ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Boston Tea Party)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Boston Tea Party ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Boston Tea Party)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Boston Tea Party ns:time.event.locations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lindsay Lohan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lindsay Lohan ns:base.popstra.celebrity.substance_abuse?y.\n?y ns:base.popstra.substance_abuse.substance?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lindsay Lohan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lindsay Lohan ns:base.popstra.celebrity.substance_abuse?y.\n?y ns:base.popstra.substance_abuse.substance?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n  ns:m.06x5s ns:time.recurring_event.instances?x. # Super Bowl instances\n\n  {\n   ?x ns:sports.sports_championship_event.champion ns:Carolina Panthers. # (Carolina Panthers) \n  }\n  UNION\n  {\n   ?x ns:sports.sports_championship_event.runner_up ns:Carolina Panthers. # (Carolina Panthers) \n  }\n}", "predict": "SELECT DISTINCT ?x\nWHERE {\n  ns:Super Bowl ns:sports.sports_championship.events?x. # Super Bowl\n  {\n    {?x ns:sports.sports_championship_event.runner_up ns:m.0ws7. } # Carolina Panthers\n    UNION\n    {?x ns:sports.sports_championship_event.champion ns:m.0ws7. } # Carolina Panthers\n  }\n ?x ns:time.event.start_date?d.\n}"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cyclone Nargis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cyclone Nargis ns:meteorology.tropical_cyclone.formed?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Burma cyclone)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Burma cyclone ns:time.event.start_date?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Texas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Texas ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Texas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Texas ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Helen Flanagan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Helen Flanagan ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Helen Flanagan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Helen Flanagan ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Olympic Games)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Olympic Games ns:time.recurring_event.current_frequency?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Summer Olympic Games)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Summer Olympic Games ns:time.recurring_event.instances?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tennessee River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tennessee River ns:location.location.partially_containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tennessee River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tennessee River ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Venezuela)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Venezuela ns:location.location.events?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Venezuela)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Venezuela ns:base.biblioness.bibs_location.events?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Corey Taylor)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Corey Taylor ns:music.group_member.instruments_played?x.\n?x ns:music.instrument.family ns:Guitar.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Corey Taylor)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Corey Taylor ns:music.group_member.instruments_played?x.\n?x ns:music.instrument.family ns:Guitar.\n}\n"}
{"label": "SELECT DISTINCT ?x\nWHERE {\n  ns:m.060d2 ns:government.government_office_or_title.office_holders?y1.  # President of the United States\n ?y1 ns:government.government_position_held.office_holder ns:Franklin D. Roosevelt ; # Franklin D. Roosevelt\n      ns:government.government_position_held.to?to.\n\n  ns:m.060d2 ns:government.government_office_or_title.office_holders?y2.  # President of the United States\n ?y2 ns:government.government_position_held.office_holder?x ;\n      ns:government.government_position_held.to?from.\n  \n  FILTER(xsd:dateTime(?from) - xsd:dateTime(?to) > 0)\n}\nORDER BY xsd:dateTime(?from)\nLIMIT 1", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Franklin D. Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Franklin D. Roosevelt ns:government.us_president.vice_president?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kate Gosselin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kate Gosselin ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kate Gosselin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kate Gosselin ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paris)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paris ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paris)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paris ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lassen Peak)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lassen Peak ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mount Lassen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mount Lassen ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:City/Town/Village.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ohio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ohio ns:government.governmental_jurisdiction.official_symbols?y.\n?y ns:location.location_symbol_relationship.symbol?x.\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:Motto.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ohio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ohio ns:government.governmental_jurisdiction.official_symbols?y.\n?y ns:location.location_symbol_relationship.symbol?x.\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:Motto.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wolfgang Amadeus Mozart)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wolfgang Amadeus Mozart ns:music.artist.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wolfgang Amadeus Mozart)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wolfgang Amadeus Mozart ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joseph P. Kennedy, Sr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joseph P. Kennedy, Sr. ns:people.person.children?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:people.person.people_pretty_name?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barcelona)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barcelona ns:location.location.nearby_airports?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barcelona)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barcelona ns:location.location.nearby_airports?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.language_family?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.language_family?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:World War II)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:World War II ns:time.event.includes_event?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.jurisdiction_of_office?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Matt Damon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Matt Damon ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Matt Damon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Matt Damon ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scottie Pippen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scottie Pippen ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scottie Pippen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scottie Pippen ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:base.locations.countries.continent?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:base.locations.countries.continent?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Continent.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Continent.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Wilson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Wilson ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George Wilson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George Wilson ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Fulham F.C.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Fulham F.C. ns:sports.sports_team.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns: Fulham FC)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Fulham FC ns:sports.sports_team.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sacramento)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sacramento ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sacramento)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sacramento ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Josh Hutchersonm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Josh Hutchersonm ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Josh Hutchersonm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Josh Hutchersonm ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:organization.organization_founder.organizations_founded?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.basic_title?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Marilyn Monroe)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Marilyn Monroe ns:award.award_winner.awards_won?y.\n?y ns:award.award_honor.award?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Marilyn Monroe)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Marilyn Monroe ns:award.award_winner.awards_won?y.\n?y ns:award.award_honor.award?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iran)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iran ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iran)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iran ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harper Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harper Lee ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:School.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harper Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harper Lee ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:School.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:J. R. R. Tolkien)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:J. R. R. Tolkien ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:J. R. R. Tolkien)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:J. R. R. Tolkien ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wassily Kandinsky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wassily Kandinsky ns:visual_art.visual_artist.art_forms?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wassily Kandinsky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wassily Kandinsky ns:visual_art.visual_artist.art_forms?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Football League Cup)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Football League Cup ns:sports.sports_award_type.winners?y.\n?y ns:sports.sports_award.award_winner?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Manchester United F.C.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Manchester United F.C. ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Antoni Gaudí)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Antoni Gaudí ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Antoni Gaudi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Antoni Gaudi ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Danish Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Danish Language ns:language.human_language.main_country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Danish Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Danish Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Demeter)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Demeter ns:fictional_universe.fictional_character.siblings?y.\n?y ns:fictional_universe.sibling_relationship_of_fictional_characters.siblings?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Demeter)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Demeter ns:fictional_universe.fictional_character.siblings?y.\n?y ns:fictional_universe.sibling_relationship_of_fictional_characters.siblings?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paris)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paris ns:travel.travel_destination.accommodation?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paris)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paris ns:travel.travel_destination.accommodation?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Common-law marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.location.contains?x.\n?x ns:base.biblioness.bibs_location.loc_type?sk0.\nFILTER (str(?sk0) = \"City\")\n?x ns:topic_server.population_number?sk1.\n}\nORDER BY DESC(xsd:float(?sk1))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.official_language?x.\n?x ns:common.topic.notable_types ns:City/Town/Village.\n?x ns:topic_server.population_number?sk0.\n!sk0 ns:measurement_result.to_date?sk.\n}\nORDER BY DESC(xsd:datetime(?sk))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iván Rodríguez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iván Rodríguez ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pudge Rodriguez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pudge Rodriguez ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Milwaukee Brewers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Milwaukee Brewers ns:sports.sports_team.arena_stadium?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Milwaukee Brewers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Milwaukee Brewers ns:sports.sports_team.arena_stadium?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gallipoli Campaign)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gallipoli Campaign ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gallipoli War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gallipoli War ns:time.event.locations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tom Hardy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tom Hardy ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tom Hardy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tom Hardy ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Atlanta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Atlanta ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Atlanta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Atlanta ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Forbes Nash, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Forbes Nash, Jr. ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Nash)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Nash ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Malta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Malta ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Maltese Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Maltese Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Malta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Malta ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Maltese Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Maltese Language ns:language.human_language.main_country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Edison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Edison ns:law.inventor.inventions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Edison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Edison ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shakira)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shakira ns:music.artist.origin?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shakira)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shakira ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shakira)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shakira ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shakira)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shakira ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rutherford B. Hayes)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rutherford B. Hayes ns:common.topic.notable_for?y.\n?y ns:common.notable_for.object?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Jefferson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Jefferson ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Lord of the Rings: The Fellowship of the Ring)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Lord of the Rings: The Fellowship of the Ring ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Old Bilbo.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Fellowship of the Ring)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Fellowship of the Ring ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Bilbo Baggins.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Old Bilbo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Old Bilbo ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:The Lord of the Rings: The Fellowship of the Ring.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Fellowship of the Ring)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Fellowship of the Ring ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns: Bilbo Baggins.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:base.aareas.schema.administrative_area.administrative_children?x.\n?x ns:topic_server.population_number?sk0.\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:US State.\n?x ns:topic_server.population_number?sk0.\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arizona)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arizona ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:United States Senator.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arizona)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arizona ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:United States Senator.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vietnam War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vietnam War ns:time.event.end_date?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vietnam War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vietnam War ns:time.event.start_date?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tennessee River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tennessee River ns:geography.river.mouth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tennessee River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tennessee River ns:geography.river.mouth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tom Hanks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tom Hanks ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Apollo 13.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tom Hanks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tom Hanks ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Apollo 13.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Apollo 13)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Apollo 13 ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Tom Hanks.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tom Hanks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tom Hanks ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Apollo 13.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ghana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ghana ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ghana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ghana ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ghana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ghana ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ghana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ghana ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utah State Capitol)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utah State Capitol ns:location.location.street_address?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utah ns:location.administrative_division.capital?y.\n?y ns:location.administrative_division_capital_relationship.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utah ns:base.aareas.schema.administrative_area.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utah ns:location.administrative_division.capital?y.\n?y ns:location.administrative_division_capital_relationship.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utah ns:location.administrative_division.capital?y.\n?y ns:location.administrative_division_capital_relationship.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utah ns:location.administrative_division.capital?y.\n?y ns:location.administrative_division_capital_relationship.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utah ns:location.us_state.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utah ns:location.administrative_division.capital?y.\n?y ns:location.administrative_division_capital_relationship.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:law.inventor.inventions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:law.inventor.inventions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jeremy Lin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jeremy Lin ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jeremy Lin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jeremy Lin ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Steve Nash)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Steve Nash ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Steve Nash)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Steve Nash ns:people.person.nationality?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pennsylvania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pennsylvania ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:United States Senator.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pennsylvania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pennsylvania ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:United States Senator.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.person.education?y.\n?y ns:education.education.degree?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.person.education?y.\n?y ns:education.education.degree?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Louis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Louis ns:location.location.containedby?x.\n?x ns:base.biblioness.bibs_location.loc_type?sk0.\nFILTER (str(?sk0) = \"State\")\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Louis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Louis ns:location.location.partially_containedby?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nns:Peyton Manning ns:people.person.parents?y.\n?y ns:people.person.gender ns:m.05zppz. #Male\n?y ns:sports.pro_athlete.teams?z.\n?z ns:sports.sports_team_roster.team?x.\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peyton Manning)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peyton Manning ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jesse Owens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jesse Owens ns:award.award_winner.awards_won?y.\n?y ns:award.award_honor.award?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jesse Owens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jesse Owens ns:base.schemastaging.athlete_extra.salary?y.\n?y ns:base.schemastaging.athlete_salary.athlete?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peru)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peru ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peru)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peru ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:base.aareas.schema.administrative_area.administrative_children?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.first_level_divisions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Judy Garland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Judy Garland ns:people.person.parents?x.\n?x ns:people.person.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Judy Garland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Judy Garland ns:people.person.parents?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert F. Kennedy ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert F. Kennedy ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Marilyn Monroe)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Marilyn Monroe ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Marilyn Monroe)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Marilyn Monroe ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Fukushima Daiichi Nuclear Power Plant)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Fukushima Daiichi Nuclear Power Plant ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Fukushima Daiichi Nuclear Power Plant)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Fukushima Daiichi Nuclear Power Plant ns:location.location.street_address?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Los Angeles)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Los Angeles ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Los Angeles)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Los Angeles ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nicolas Cage)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nicolas Cage ns:people.person.children?x.\n?x ns:people.person.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nicolas Cage)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nicolas Cage ns:people.person.children?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Florida)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Florida ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Florida)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Florida ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jessica Simpson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jessica Simpson ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jessica Simpson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jessica Simpson ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scotland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scotland ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scotland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scotland ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Dalton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Dalton ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Dalton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Dalton ns:law.inventor.inventions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Zac Brown Band)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Zac Brown Band ns:music.artist.track?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Zac Brown Band)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Zac Brown Band ns:music.artist.track?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Glastonbury)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Glastonbury ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Glastonbury)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Glastonbury ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:American Federation of Labor)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:American Federation of Labor ns:organization.organization.founders?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:American Federation of Labor)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:American Federation of Labor ns:organization.organization.founders?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denver)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denver ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Denver)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Denver ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Hobbes)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Hobbes ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Hobbes)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Hobbes ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Italy ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Montreal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Montreal ns:base.biblioness.bibs_location.state?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Montreal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Montreal ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Province.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Montreal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Montreal ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Canadian Province.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Montreal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Montreal ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Canadian Province.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kellan Lutz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kellan Lutz ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Prom Night.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Prom Night)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Prom Night ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Kellan Lutz.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Life of Franz Liszt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Life of Franz Liszt ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Franz Liszt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Franz Liszt ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nikola Tesla)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nikola Tesla ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nikola Tesla)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nikola Tesla ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Princeton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Princeton ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Princeton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Princeton ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iceland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iceland ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iceland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iceland ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iceland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iceland ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iceland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iceland ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Israel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Israel ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n?y ns:location.religion_percentage.percentage?sk0.\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Israel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Israel ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carolina Panthers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carolina Panthers ns:american_football.football_team.historical_coaching_staff?y.\n?y ns:american_football.football_historical_coach_position.coach?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carolina Panthers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carolina Panthers ns:american_football.football_team.historical_coaching_staff?y.\n?y ns:american_football.football_historical_coach_position.coach?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toussaint Louverture)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toussaint Louverture ns:military.military_person.service?y.\n?y ns:military.military_service.military_force?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toussaint Louverture)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toussaint Louverture ns:people.person.nationality?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Burns)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Burns ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Burns)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Burns ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utah ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:Utah Attorney General.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utah)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utah ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Attorney general.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Libya)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Libya ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Chairman.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Libya)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Libya ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Indonesia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Indonesia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Indonesia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Indonesia ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Indonesia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Indonesia ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Indonesia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Indonesia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carolina Panthers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carolina Panthers ns:american_football.football_team.current_head_coach?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carolina Panthers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carolina Panthers ns:american_football.football_team.historical_coaching_staff?y.\n?y ns:american_football.football_historical_coach_position.coach?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Africa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Africa ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Africa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Africa ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Return of the Jedi.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Wars Episode III: Revenge of the Sith.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joan Crawford)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joan Crawford ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joan Crawford)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joan Crawford ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.statistical_region.major_exports?y.\n?y ns:location.imports_exports_by_industry.industry?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.statistical_region.major_exports?y.\n?y ns:location.imports_exports_by_industry.industry?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kentucky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kentucky ns:government.governmental_jurisdiction.official_symbols?y.\n?y ns:location.location_symbol_relationship.symbol?x.\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:State bird.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kentucky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kentucky ns:government.governmental_jurisdiction.official_symbols?y.\n?y ns:location.location_symbol_relationship.symbol?x.\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:State bird.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Prime Minister of Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Prime Minister of Canada ns:government.government_office_or_title.office_holders?y.\n?y ns:government.government_position_held.office_holder?x.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Prime minister.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Salt Lake City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Salt Lake City ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Salt Lake City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Salt Lake City ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States Senate)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States Senate ns:government.governmental_body.members?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.district_represented ns:Ohio.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ohio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ohio ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:United States Senator.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint Nicholas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint Nicholas ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Nicholas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Nicholas ns:fictional_universe.fictional_character.occupation?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pope John Paul II)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pope John Paul II ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pope John Paul II)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pope John Paul II ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Franklin Pierce)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Franklin Pierce ns:common.topic.notable_types?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Franklin Pierce)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Franklin Pierce ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n  ns:m.0cc8tt9 ns:time.recurring_event.instances?x. # Stanly Cup finals instances\n\n  {\n   ?x ns:sports.sports_championship_event.champion ns:Boston Bruins. #(Boston Bruins)\n  }\n  UNION\n  {\n   ?x ns:sports.sports_championship_event.runner_up ns:Boston Bruins. #(Boston Bruins)\n  }\n\n ?x ns:time.event.start_date?st.\n}\nORDER BY DESC(xsd:datetime(?st))\nLIMIT 1", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Boston Bruins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Boston Bruins ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n                ns:Meredith Grey ns:tv.tv_character.appeared_in_tv_program?y.\n               ?y ns:tv.regular_tv_appearance.actor?z.\n               ?z ns:people.person.spouse_s?s.\n               ?s ns:people.marriage.spouse?x.\n               ?s ns:people.marriage.type_of_union ns:m.04ztj.\nFilter (?x!=?z)\nFILTER(NOT EXISTS {?s ns:people.marriage.from?sk0} || \n           EXISTS {?s ns:people.marriage.from?sk1. \n                   FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?s ns:people.marriage.to?sk2} || \n           EXISTS {?s ns:people.marriage.to?sk3. \n                   FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n?s ns:people.marriage.from?sk4.\n}\nORDER BY DESC(xsd:datetime(?sk4))\nLIMIT 1", "predict": "SELECT DISTINCT?x\nWHERE {\n                ns:Meredith Gray ns:people.person.spouse_s?y.\n               ?y ns:people.marriage.spouse?x.\n               ?y ns:people.marriage.type_of_union ns:m.01mp.\n               ?y ns:people.marriage.from?from.\n               ?y ns:people.marriage.to?to.\n                FILTER (?from!= ns:Meredith Gray)\n                FILTER (?to!= ns:Meredith Gray)\n            }\n            ORDER BY DESC(xsd:datetime(?from,?to))\n        }\n        ORDER BY DESC(xsd:datetime(?from,?to))\n        LIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michelangelo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michelangelo ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michelangelo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michelangelo ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Monsanto)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Monsanto ns:business.business_operation.industry?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Monsanto)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Monsanto ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Woody Harrelson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Woody Harrelson ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.series ns:Cheers.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cheers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cheers ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.actor ns:Woody Harrelson.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cheers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cheers ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.actor ns:Woody Harrelson.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cheers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cheers ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.actor ns:Woody Harrelson.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sweden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sweden ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sweden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sweden ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sweden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sweden ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sweden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sweden ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ghana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ghana ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ghana)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ghana ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Philippines)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Philippines ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Philippines)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Philippines ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ibrahim Afellay)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ibrahim Afellay ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ibrahim Olayinkan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ibrahim Olayinkan ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andrew Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andrew Jackson ns:government.political_appointer.appointees?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Secretary of State.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andrew Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andrew Jackson ns:government.political_appointer.appointees?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Secretary of State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ron Stoppable)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ron Stoppable ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ron Stoppable)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ron Stoppable ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New Zealand)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New Zealand ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New Zealand)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New Zealand ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:West Midlands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:West Midlands ns:base.aareas.schema.administrative_area.administrative_children?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:West Midlands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:West Midlands ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:City/Town/Village.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:West Midlands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:West Midlands ns:location.location.contains?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:West Midlands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:West Midlands ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:City/Town/Village.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:West Midlands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:West Midlands ns:location.location.contains?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:West Midlands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:West Midlands ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:City/Town/Village.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Asheville)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Asheville ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Asheville)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Asheville ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:American League)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:American League ns:baseball.baseball_league.teams?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:MLB)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:MLB ns:baseball.baseball_league.team_roster?y.\n?y ns:baseball.baseball_league_roster.player?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:American League)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:American League ns:sports.sports_league.teams?y.\n?y ns:sports.sports_league_participation.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:MLB)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:MLB ns:baseball.baseball_league.teams_in_league?y.\n?y ns:baseball.baseball_league_teams_in_league.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kurt Warner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kurt Warner ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kurt Warner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kurt Warner ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dirk Nowitzki)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dirk Nowitzki ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dirk Nowitzki)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dirk Nowitzki ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pablo Picasso)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pablo Picasso ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Python)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Python ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Croatia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Croatia ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Croatia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Croatia ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Raúl Ibañez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Raúl Ibañez ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Raul Ibanez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Raul Ibanez ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Harmon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Harmon ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.series?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Harmon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Harmon ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.series?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Rev)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Rev ns:people.deceased_person.date_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jimmy Sullivan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jimmy Sullivan ns:people.deceased_person.date_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Star Wars Episode I: The Phantom Menace)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Star Wars Episode I: The Phantom Menace ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Darth Vader.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Star Wars)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Star Wars ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Darth Vader.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Wars Episode I: The Phantom Menace.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Star Wars)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Star Wars ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Darth Vader.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michelle Pfeiffer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michelle Pfeiffer ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michelle Pfeiffer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michelle Pfeiffer ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Laura Ingalls Wilder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Laura Ingalls Wilder ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Laura Ingalls Wilder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Laura Ingalls Wilder ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dwight Howard)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dwight Howard ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dwight Howard)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dwight Howard ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nick Lachey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nick Lachey ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nick Lachey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nick Lachey ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Madonna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Madonna ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Madonna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Madonna ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Stockton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Stockton ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Stockton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Stockton ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chrysler Group LLC)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chrysler Group LLC ns:organization.organization.parent?y.\n?y ns:organization.organization_relationship.parent?x.\nFILTER(NOT EXISTS {?y ns:organization.organization_relationship.to?sk0} || \nEXISTS {?y ns:organization.organization_relationship.to?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:organization.organization_relationship.from?sk2} || \nEXISTS {?y ns:organization.organization_relationship.from?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chrysler Group LLC)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chrysler Group LLC ns:organization.organization.parent?y.\n?y ns:organization.organization_relationship.parent?x.\n?y ns:organization.organization_relationship.child ns:Chrysler Group LLC.\nFILTER(NOT EXISTS {?y ns:organization.organization_relationship.to?sk0} || \nEXISTS {?y ns:organization.organization_relationship.to?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:organization.organization_relationship.from?sk2} || \nEXISTS {?y ns:organization.organization_relationship.from?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Twain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Twain ns:book.author.book_editions_published?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Twain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Twain ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Twain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Twain ns:book.book_subject.works?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Twain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Twain ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gregor Mendel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gregor Mendel ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gregor Mendel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gregor Mendel ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ray Allen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ray Allen ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ray Allen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ray Allen ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:government.us_president.vice_president?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.office_position_or_title?x.\n?y ns:government.government_position_held.basic_title ns:Vice President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Korea)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Korea ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Korea)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Korea ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Common-law marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sri Lanka)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sri Lanka ns:location.country.capital?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sri Lanka)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sri Lanka ns:location.country.capital?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Poland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Poland ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Poland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Poland ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Delaware)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Delaware ns:location.location.people_born_here?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Delaware)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Delaware ns:location.location.people_born_here?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.from?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.from?x.\n?y ns:government.government_position_held.office_position_or_title ns:Governor of Massachusetts.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cyprus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cyprus ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cyprus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cyprus ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Johnny Depp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Johnny Depp ns:music.group_member.instruments_played?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Johnny Depp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Johnny Depp ns:music.guitarist.guitars_played?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carrie Underwood)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carrie Underwood ns:tv.tv_actor.guest_roles?y.\n?y ns:tv.tv_guest_role.episodes_appeared_in?x.\n?x ns:tv.tv_series_episode.series ns:How I Met Your Mother.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carrie Underwood)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carrie Underwood ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.seasons?x.\n?y ns:tv.regular_tv_appearance.series ns:How I Met Your Mother.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Supreme Court of the United States)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Supreme Court of the United States ns:law.court.judges?y.\n?y ns:law.judicial_tenure.judge?x.\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.from_date?sk0} || \nEXISTS {?y ns:law.judicial_tenure.from_date?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.to_date?sk2} || \nEXISTS {?y ns:law.judicial_tenure.to_date?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Supreme Court of the United States)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Supreme Court of the United States ns:law.court.judges?y.\n?y ns:law.judicial_tenure.judge?x.\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.from_date?sk0} || \nEXISTS {?y ns:law.judicial_tenure.from_date?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.to_date?sk2} || \nEXISTS {?y ns:law.judicial_tenure.to_date?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dustin Johnson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dustin Johnson ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dustin Johnson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dustin Johnson ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\tns:Cher ns:people.person.children?y.\n\t?y ns:people.person.gender ns:m.05zppz. #Male\n\t?y ns:people.person.parents?x.\n  FILTER (?x!= ns:Cher)\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cher)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cher ns:people.person.children?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:University of Oregon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:University of Oregon ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:University of Oregon State)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:University of Oregon State ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:City/Town/Village.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spy Kids)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spy Kids ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Baby Carmen.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spy Kids)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spy Kids ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Carmen Cortez.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Shakespeare)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Shakespeare ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Shakespeare)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Shakespeare ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Zuckerberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Zuckerberg ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Zuckerberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Zuckerberg ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Catherine, Duchess of Cambridge)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Catherine, Duchess of Cambridge ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Catherine, Duchess of Cambridge)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Catherine, Duchess of Cambridge ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Marc Chagall)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Marc Chagall ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Marc Chagall)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Marc Chagall ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Billy Dee Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Billy Dee Williams ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Robot Chicken: Star Wars Episode III.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Billy Dee Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Billy Dee Williams ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Star Wars Episode IV: A New Hope.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Billy Dee Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Billy Dee Williams ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Star Wars Episode V: The Empire Strikes Back.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Billy Dee Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Billy Dee Williams ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Star Wars Episode IV: A New Hope.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Billy Dee Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Billy Dee Williams ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Return of the Jedi.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Billy Dee Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Billy Dee Williams ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Star Wars Episode IV: A New Hope.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wilfred Owen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wilfred Owen ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wilfred Owen)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wilfred Owen ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kevin Jonas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kevin Jonas ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kevin Jonas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kevin Jonas ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:AirTran Airways)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:AirTran Airways ns:aviation.airline.airports_served?y.\n?y ns:aviation.airline_airport_presence.airport?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:AirTran Airways)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:AirTran Airways ns:aviation.airline.airports_served?y.\n?y ns:aviation.airline_airport_presence.airport?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paris)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paris ns:symbols.namesake.named_after?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paris)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paris ns:location.location.partially_contains?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sandra Bullock)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sandra Bullock ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sandra Bullock)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sandra Bullock ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Olympic National Park)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Olympic National Park ns:base.usnationalparks.us_national_park.state?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Olympic National Park)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Olympic National Park ns:base.usnationalparks.us_national_park.state?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Nations)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Nations ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Nations)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Nations ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:University Yale)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:University Yale ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Yale University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Yale University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Paine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Paine ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Paine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Paine ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama, Sr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama, Sr. ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama, Sr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama, Sr. ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New England Patriots)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New England Patriots ns:sports.sports_team.arena_stadium?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New England Patriots)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New England Patriots ns:sports.sports_team.arena_stadium?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kate Chopin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kate Chopin ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kate Chopin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kate Chopin ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bill Clinton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bill Clinton ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bill Clinton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bill Clinton ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Staffordshire Bull Terrier)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Staffordshire Bull Terrier ns:biology.animal_breed.breed_of?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Staffordshire Bull Terrier)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Staffordshire Bull Terrier ns:biology.animal_breed.breed_of?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Staffordshire Bull Terrier)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Staffordshire Bull Terrier ns:biology.organism_classification.higher_classification?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Staffordshire Bull Terrier)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Staffordshire Bull Terrier ns:biology.organism_classification.higher_classification?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sacramento)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sacramento ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sacramento)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sacramento ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael J. Fox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael J. Fox ns:people.person.parents?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael J. Fox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael J. Fox ns:people.person.parents?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sanjay Gupta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sanjay Gupta ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sanjay Gupta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sanjay Gupta ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North American Free Trade Agreement)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North American Free Trade Agreement ns:organization.membership_organization.members?y.\n?y ns:organization.organization_membership.member?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North American Free Trade Agreement)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North American Free Trade Agreement ns:organization.organization.members?y.\n?y ns:organization.organization_membership.members?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cayman Islands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cayman Islands ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Continent.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cayman Islands)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cayman Islands ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Continent.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kroy Biermann)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kroy Biermann ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kroy Biermann)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kroy Biermann ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pittsburgh Steelers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pittsburgh Steelers ns:sports.sports_team.championships?x.\n?x ns:sports.sports_championship_event.championship ns:Super Bowl.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pittsburgh Steelers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pittsburgh Steelers ns:sports.sports_team.championships?x.\n?x ns:common.topic.notable_types ns:Super bowl.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Islam ns:religion.religion.founding_figures?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Islam ns:religion.religion.deities?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gulf War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gulf War ns:military.military_conflict.combatants?y.\n?y ns:military.military_combatant_group.combatants?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gulf War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gulf War ns:military.military_conflict.combatants?y.\n?y ns:military.military_combatant_group.combatants?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Logan Lerman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Logan Lerman ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Logan Lerman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Logan Lerman ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Constantine the Great)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Constantine the Great ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Constantine the Great)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Constantine the Great ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mali)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mali ns:base.locations.countries.continent?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mali)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mali ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mali)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mali ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mali)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mali ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Luke Skywalker)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Luke Skywalker ns:fictional_universe.fictional_character.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Luke Skywalker)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Luke Skywalker ns:fictional_universe.fictional_character.places_lived?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Oakland Raiders)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Oakland Raiders ns:american_football.football_team.current_head_coach?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Oakland Raiders)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Oakland Raiders ns:american_football.football_team.current_head_coach?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Microsoft Corporation)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Microsoft Corporation ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Microsoft)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Microsoft ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n?y ns:location.mailing_address.state_province_region?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Steinbeck)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Steinbeck ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Steinbeck)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Steinbeck ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Niels Henrik David Bohr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Niels Henrik David Bohr ns:base.nobelprizes.nobel_prize_winner.nobel_honor?y.\n?y ns:base.nobelprizes.nobel_honor.subject_area?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Niels Bohr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Niels Bohr ns:law.inventor.inventions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Sachar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Sachar ns:book.author.book_editions_published?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Sachar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Sachar ns:book.author.book_editions_published?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Sachar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Sachar ns:book.author.works_written?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Sachar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Sachar ns:book.author.book_editions_published?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ryan Reynolds)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ryan Reynolds ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n?y ns:people.marriage.from?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ryan Reynolds)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ryan Reynolds ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n?y ns:people.marriage.from?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Newt Gingrich)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Newt Gingrich ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?x ns:people.person.gender ns:Female.\n?y ns:people.marriage.from?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Newt Gingrich)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Newt Gingrich ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Antonio Vivaldi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Antonio Vivaldi ns:music.artist.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Antonio Vivaldi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Antonio Vivaldi ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James Franco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James Franco ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James Franco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James Franco ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Twain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Twain ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Samuel Langhorne Clemens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Samuel Langhorne Clemens ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x \nWHERE {\nfilter (?x!= ns:m.0835q)\n  ns:m.0835q ns:government.us_president.presidency_number?p.\n  ns:President of the United States ns:government.government_office_or_title.office_holders?y.\n ?y ns:government.government_position_held.office_holder?x.\n ?x ns:government.us_president.presidency_number?pp.\nfilter (xsd:float(?p)+1 = xsd:float(?pp))\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Henry Harrison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Henry Harrison ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.office_position_or_title?x.\n?y ns:government.government_position_held.basic_title ns:President.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rick Santorum)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rick Santorum ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:School.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rick Santorum)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rick Santorum ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:education.educational_institution.school_type ns:High school.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George W. Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George W. Bush ns:book.author.works_written?x.\n?x ns:common.topic.notable_types ns:Book.\n?x ns:book.written_work.date_of_first_publication?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George W. Bush)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George W. Bush ns:book.author.works_written?x.\n?x ns:common.topic.notable_types ns:Book.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Antoine Lavoisier)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Antoine Lavoisier ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Antoine Lavoisier)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Antoine Lavoisier ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George VI)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George VI ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:George VI)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:George VI ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT ?x\nWHERE {\n  ns:Super Bowl ns:sports.sports_championship.events?x. # Super Bowl\n  {\n    {?x ns:sports.sports_championship_event.runner_up ns:Seattle Seahawks. } # Seattle Seahawks\n    UNION\n    {?x ns:sports.sports_championship_event.champion ns:Seattle Seahawks. } # Seattle Seahawks\n  }\n ?x ns:time.event.start_date?d.\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Seattle Seahawks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Seattle Seahawks ns:sports.sports_team.championships?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sami Yusuf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sami Yusuf ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sami Yusuf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sami Yusuf ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Parliament of Nepal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Parliament of Nepal ns:type.object.name?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nepal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nepal ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.governmental_body?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York Mets)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York Mets ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York Mets)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York Mets ns:sports.sports_team.championships?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Florida Panthers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Florida Panthers ns:sports.sports_team.arena_stadium?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Florida Panthers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Florida Panthers ns:sports.sports_team.arena_stadium?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Cena)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Cena ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Cena)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Cena ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Jose)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Jose ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Jose)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Jose ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York University ns:organization.organization.founders?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York University ns:organization.organization.founders?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arthur)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arthur ns:tv.tv_program.program_creator?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arthur)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arthur ns:fictional_universe.fictional_character.character_created_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:European Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:European Union ns:organization.membership_organization.members?y.\n?y ns:organization.organization_membership.member?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:European Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:European Union ns:organization.membership_organization.members?y.\n?y ns:organization.organization_membership.member?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North Africa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North Africa ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North Africa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North Africa ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bobby Darin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bobby Darin ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bobby Darin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bobby Darin ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Houston Dynamo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Houston Dynamo ns:sports.sports_team.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Houston Dynamo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Houston Dynamo ns:sports.sports_team.arena_stadium?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Mayer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Mayer ns:music.guitarist.guitars_played?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Mayer)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Mayer ns:music.guitarist.guitars_played?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Patrick Swayze)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Patrick Swayze ns:people.deceased_person.cause_of_death?x.\n?x ns:medicine.disease.parent_disease ns:Cancer.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Patrick Swayze)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Patrick Swayze ns:people.deceased_person.cause_of_death?x.\n?x ns:people.cause_of_death.parent_cause_of_death ns:Cancer.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?y ns:education.education.degree ns:Bachelor of Arts.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?y ns:education.education.degree ns:Juris Doctor.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arizona Cardinals)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arizona Cardinals ns:sports.sports_team.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arizona Cardinals)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arizona Cardinals ns:sports.sports_team.arena_stadium?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isaac Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isaac Newton ns:base.argumentmaps.innovator.original_ideas?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isaac Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isaac Newton ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Francisco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Francisco ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:San Francisco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:San Francisco ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pablo Picasso)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pablo Picasso ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pablo Picasso)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pablo Picasso ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pennsylvania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pennsylvania ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pennsylvania)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pennsylvania ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Google)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Google ns:business.consumer_company.products?y.\n?y ns:business.company_product_relationship.consumer_product?x.\nFILTER(NOT EXISTS {?y ns:business.company_product_relationship.from_date?sk0} || \nEXISTS {?y ns:business.company_product_relationship.from_date?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:business.company_product_relationship.to_date?sk2} || \nEXISTS {?y ns:business.company_product_relationship.to_date?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Google)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Google ns:organization.organization.services?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cliff Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cliff Lee ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cliff Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cliff Lee ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.governmental_body?x.\n?x ns:democracy.democracy.form ns:Democracy.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hong Kong)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hong Kong ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hong Kong)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hong Kong ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Taylor Lautner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Taylor Lautner ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Taylor Lautner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Taylor Lautner ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bernie Mac)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bernie Mac ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bernie Mac离去的日期)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bernie Mac ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spike Spiegel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spike Spiegel ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spike Spiegel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spike Spiegel ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isabella I of Castile)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isabella I of Castile ns:people.person.parents?x.\n?x ns:people.person.gender ns:Female.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Isabella I of Castile)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Isabella I of Castile ns:people.person.parents?x.\n?x ns:people.person.gender ns:Female.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\tns:Chris Hemsworth ns:people.person.children?y.\n\t?y ns:people.person.parents?x.\n  FILTER (?x!= ns:Chris Hemsworth).\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chris Hemsworth)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chris Hemsworth ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:MTS Iceplex)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:MTS Iceplex ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Winnipeg Iceplex)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Winnipeg Iceplex ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Israel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Israel ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n?y ns:location.religion_percentage.percentage?sk0.\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Israel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Israel ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\t{ \n\t  # Lyrics\n\t  ns:Justin Bieber ns:music.lyricist.lyrics_written?x.\n\t}\n\tUNION\n\t{\n\t  # Compositions\n\t  ns:Justin Bieber ns:music.composer.compositions?x.\n\t}\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Justin Bieber)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Justin Bieber ns:music.composer.compositions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:River Thames)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:River Thames ns:geography.river.origin?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:River Thames)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:River Thames ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Pattinson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Pattinson ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Pattinson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Pattinson ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pakistan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pakistan ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Pakistan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Pakistan ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nike, Inc.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nike, Inc. ns:business.business_operation.industry?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nike, Inc.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nike, Inc. ns:organization.organization.products_sold?y.\n?y ns:sales.sale.product_sold?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lyndon B. Johnson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lyndon B. Johnson ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lyndon B. Johnson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lyndon B. Johnson ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kim Jong-il)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kim Jong-il ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kim Jong-il)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kim Jong-il ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Agatha Christie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Agatha Christie ns:award.award_winner.awards_won?y.\n?y ns:award.award_honor.award?x.\nFILTER(NOT EXISTS {?y ns:award.award_honor.year?sk0} || \nEXISTS {?y ns:award.award_honor.year?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:award.award_honor.year?sk2} || \nEXISTS {?y ns:award.award_honor.year?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Agatha Christie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Agatha Christie ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.office_position_or_title?x.\n?y ns:government.government_position_held.governmental_body ns:White House.\n?x ns:messages.message_written.message_text?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Taoism)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Taoism ns:religion.religion.texts?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Daoism)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Daoism ns:religion.religion.texts?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.main_country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\n   ?x ns:location.country.official_language ns:English Language.\n   ?x ns:common.topic.notable_types ns:m.01mp.   # Country\n}"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:FedEx Cup)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:FedEx Cup ns:sports.sports_award_type.winners?y.\n?y ns:sports.sports_award.award_winner?x.\n?y ns:sports.sports_award.season ns:2012 PGA Tour.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:FedEx Cup)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:FedEx Cup ns:sports.sports_award_type.winners?y.\n?y ns:sports.sports_award.award_winner?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_award_type.year?sk0} || \nEXISTS {?y ns:sports.sports_award_type.year?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_award_type.year?sk2} || \nEXISTS {?y ns:sports.sports_award_type.year?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.languages_spoken?x.\n?x ns:language.human_language.main_country ns:Egypt.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:ALF)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:ALF ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:ALF.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:ALF)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:ALF ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:ALF.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gerald Ford)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gerald Ford ns:government.us_president.vice_president?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gerald Ford)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gerald Ford ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.office_position_or_title?x.\n?y ns:government.government_position_held.basic_title ns:President.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Armenia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Armenia ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Armenia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Armenia ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Raphael)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Raphael ns:visual_art.visual_artist.art_forms?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Raphael Sanzio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Raphael Sanzio ns:visual_art.visual_artist.art_forms?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Malta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Malta ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Malta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Malta ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Malta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Malta ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Malta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Malta ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis XIV of France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis XIV of France ns:people.person.religion?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis XIV of France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis XIV of France ns:people.person.religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mike Wright)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mike Wright ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mike Wright)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mike Wright ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shannon Hoon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shannon Hoon ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shannon Hoon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shannon Hoon ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nicolaus Copernicus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nicolaus Copernicus ns:base.argumentmaps.innovator.original_ideas?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nicolaus Copernicus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nicolaus Copernicus ns:base.argumentmaps.innovator.original_ideas?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Manny Ramirez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Manny Ramirez ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Manny Ramirez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Manny Ramirez ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Appalachian Mountains)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Appalachian Mountains ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Appalachian Mountains)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Appalachian Mountains ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Woodrow Wilson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Woodrow Wilson ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.from?x.\n?y ns:government.government_position_held.office_position_or_title ns:President of the United States.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Howard Taft)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Howard Taft ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.from?x.\n?y ns:government.government_position_held.office_position_or_title ns:President of the United States.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jerry Brown)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jerry Brown ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jerry Brown)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jerry Brown ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hawaii)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hawaii ns:geography.island.body_of_water?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hawaii)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hawaii ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Ocean.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hawaii)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hawaii ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Body Of Water.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Hawaii)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Hawaii ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Ocean.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tunisia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tunisia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tunisia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tunisia ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tunisia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tunisia ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tunisia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tunisia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonardo da Vinci)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonardo da Vinci ns:law.inventor.inventions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonardo da Vinci)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonardo da Vinci ns:law.inventor.inventions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St Trinian's School)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St Trinian's School ns:fictional_universe.fictional_universe.created_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Trinians)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Trinians ns:book.book_subject.author?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Malaysia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Malaysia ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Malaysia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Malaysia ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dominican Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dominican Republic ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dominican Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dominican Republic ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Texas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Texas ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:United States Senator.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Texas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Texas ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:Texas State Senator.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:London)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:London ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:London)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:London ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mona Lisa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mona Lisa ns:visual_art.artwork.art_genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mona Lisa)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mona Lisa ns:visual_art.visual_art.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peter Griffin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peter Griffin ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peter Griffin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peter Griffin ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tony Romo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tony Romo ns:sports.pro_athlete.career_start?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tony Romo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tony Romo ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.draft?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Catholicism)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Catholicism ns:religion.religion.holidays?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Catholic Church)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Catholic Church ns:religion.religion.primaries?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Belgium)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Belgium ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Belgium)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Belgium ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:L. Frank Baum)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:L. Frank Baum ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:L. Frank Baum)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:L. Frank Baum ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tunisia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tunisia ns:base.locations.countries.continent?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tunis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tunis ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tunis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tunis ns:location.administrative_division.country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tunis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tunis ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tunis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tunis ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tunis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tunis ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nicolas Cage)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nicolas Cage ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\nFILTER(NOT EXISTS {?y ns:people.marriage.from?sk0} || \nEXISTS {?y ns:people.marriage.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to?sk2} || \nEXISTS {?y ns:people.marriage.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nicolas Cage)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nicolas Cage ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Child's Play)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Child's Play ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Chucky.\n?y ns:film.performance.special_performance_type ns:Voice.\n?y ns:film.performance.film ns:Child's Play.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Child's Play)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Child's Play ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Chuck D生育Charles Dymond.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mary Wollstonecraft)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mary Wollstonecraft ns:base.activism.activist.area_of_activism?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mary Wollstonecraft)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mary Wollstonecraft ns:base.activism.activist.area_of_activism?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Philadelphia Phillies)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Philadelphia Phillies ns:sports.sports_team.founded?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Philadelphia Phillies)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Philadelphia Phillies ns:sports.sports_team.founded?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iceland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iceland ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iceland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iceland ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iceland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iceland ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iceland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iceland ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Lesieg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Lesieg ns:base.schemastaging.context_name.official_name?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Lesieg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Lesieg ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gloria Steinem)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gloria Steinem ns:organization.organization_founder.organizations_founded?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gloria Steinem)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gloria Steinem ns:organization.organization_founder.organizations_founded?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scotland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scotland ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scotland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scotland ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Zuckerberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Zuckerberg ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:education.educational_institution.school_type ns:Boarding school.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mark Zuckerberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mark Zuckerberg ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:education.educational_institution.school_type ns:Boarding school.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bigos)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bigos ns:food.dish.type_of_dish1?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bigos)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bigos ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tina Turner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tina Turner ns:people.person.children?x.\n?x ns:people.person.parents ns:Ike Turner.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ike and Tina Turner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ike and Tina Turner ns:people.person.children?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonardo da Vinci)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonardo da Vinci ns:law.inventor.inventions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonardo da Vinci)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonardo da Vinci ns:base.argumentmaps.innovator.original_ideas?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shaquille O'Neal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shaquille O'Neal ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.draft?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shaquille O'Neal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shaquille O'Neal ns:sports.sports_award_winner.awards?y.\n?y ns:sports.sports_award.season?x.\n?y ns:sports.sports_award.award ns:NBA Rookie of the Year Award.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkish Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkish Language ns:language.human_language.countries_spoken_in?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkish Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkish Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Walnut Creek)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Walnut Creek ns:location.citytown.postal_codes?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Walnut Creek)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Walnut Creek ns:location.citytown.postal_codes?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Wars.\n?y ns:film.performance.special_performance_type ns:Voice.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Star Wars.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.countries_spoken_in?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.main_country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Armstrong)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Armstrong ns:music.artist.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Armstrong)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Armstrong ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Latin Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Latin Language ns:language.human_language.language_family?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Latin Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Latin Language ns:language.human_language.language_family?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rome)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rome ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rome)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rome ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Solomon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Solomon ns:people.person.children?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Solomon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Solomon ns:people.person.children?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andy Irons)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andy Irons ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Andy Irons)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Andy Irons ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Auburn University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Auburn University ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Auburn University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Auburn University ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Auburn University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Auburn University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.state_province_region?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Auburn University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Auburn University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.state_province_region?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tatyana Ali)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tatyana Ali ns:people.person.parents?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tatyana Ali)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tatyana Ali ns:people.person.parents?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leif Eriksson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leif Eriksson ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leif Eriksson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leif Eriksson ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Maasai people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Maasai people ns:people.ethnicity.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Maasai)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Maasai ns:people.ethnicity.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North Korea)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North Korea ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Supreme leader.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North Korea)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North Korea ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Supreme leader.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Appalachian Mountains)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Appalachian Mountains ns:location.location.partially_containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Appalachian Mountains)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Appalachian Mountains ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Terry Waite)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Terry Waite ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Terry Waite)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Terry Waite ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of San Juan Hill)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of San Juan Hill ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of San Juan Hill)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of San Juan Hill ns:time.event.locations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltimore Orioles)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltimore Orioles ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Baltimore Orioles)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Baltimore Orioles ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ben Stiller)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ben Stiller ns:base.popstra.celebrity.dated?y.\n?y ns:base.popstra.dated.participant?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ben Stiller)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ben Stiller ns:celebrities.celebrity.sexual_relationships?y.\n?y ns:celebrities.romantic_relationship.celebrity?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Norway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Norway ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Norway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Norway ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Shakespeare)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Shakespeare ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Shakespeare)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Shakespeare ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arizona)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arizona ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arizona)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arizona ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Governor.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spike Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spike Lee ns:film.director.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spike Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spike Lee ns:film.director.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spike Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spike Lee ns:film.producer.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spike Lee)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spike Lee ns:film.director.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bernie Mac)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bernie Mac ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bernie Mac)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bernie Mac ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Electrolux)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Electrolux ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Electrolux)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Electrolux ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Houston)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Houston ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Houston)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Houston ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Shakespeare)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Shakespeare ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Shakespeare)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Shakespeare ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harry S. Truman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harry S. Truman ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.from?x.\n?y ns:government.government_position_held.basic_title ns:President.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Franklin D. Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Franklin D. Roosevelt ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.from?x.\n?y ns:government.government_position_held.basic_title ns:President.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ferdinand Magellan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ferdinand Magellan ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ferdinand Magellan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ferdinand Magellan ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Burmese cat)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Burmese cat ns:biology.animal_breed.place_of_origin?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Burmese Cat)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Burmese Cat ns:base.petcare.pet.breed.parent_breed_id?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James T. Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James T. Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kirk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kirk ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mount St. Helens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mount St. Helens ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mount St. Helens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mount St. Helens ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint Paul ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Paul)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Paul ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henry VIII of England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henry VIII of England ns:people.person.children?x.\n?x ns:people.person.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henry VIII of England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henry VIII of England ns:people.person.children?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David Beckham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:David Beckham ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David Beckham)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:David Beckham ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Franz Ferdinand)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Franz Ferdinand ns:music.artist.origin?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Franz Ferdinand)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Franz Ferdinand ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benedict Arnold)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benedict Arnold ns:base.honouriam.dishonoured_person.dishonor_bestowed?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benedict Arnold)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benedict Arnold ns:base.honouriam.dishonoured_person.dishonor_bestowed?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Smallville)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Smallville ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Alexander Luthor.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Smallville)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Smallville ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Lex Luthor.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dallas Cowboys)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dallas Cowboys ns:sports.sports_team.colors?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dallas Cowboys)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dallas Cowboys ns:sports.sports_team.colors?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Czech Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Czech Republic ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Czech Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Czech Republic ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Los Angeles Kings)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Los Angeles Kings ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Los Angeles Kings)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Los Angeles Kings ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spencer Pratt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spencer Pratt ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spencer Pratt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spencer Pratt ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Abraham Lincoln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Abraham Lincoln ns:medicine.notable_person_with_medical_condition.condition?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Abraham Lincoln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Abraham Lincoln ns:medicine.notable_person_with_medical_condition.condition?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vancouver Canucks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vancouver Canucks ns:sports.sports_team.coaches?y.\n?y ns:sports.sports_team_coach_tenure.coach?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vancouver Canucks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vancouver Canucks ns:ice.冰支球队.主教练?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:C. S. Lewis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:C. S. Lewis ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:C. S. Lewis)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:C. S. Lewis ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carlos Peña)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carlos Peña ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Carlos Pena, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Carlos Pena, Jr. ns:people.person.nationality?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jane Wyman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jane Wyman ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n?y ns:people.marriage.to?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jane Wyman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jane Wyman ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peru)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peru ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peru)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peru ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peru)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peru ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peru)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peru ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.countries_spoken_in?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.main_country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:English Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:English Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arsenal F.C.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arsenal F.C. ns:sports.sports_award_winner.awards?y.\n?y ns:sports.sports_award.season?x.\n?y ns:sports.sports_award.award ns:FA Cup.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arsenal FC)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arsenal FC ns:sports.sports_team.championships?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Phoenix)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Phoenix ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Phoenix)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Phoenix ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Portland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Portland ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Portland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Portland ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Portland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Portland ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Portland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Portland ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:French)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:French ns:language.human_language.countries_spoken_in?x.\n?x ns:location.country.official_language ns:French.\n}\n", "predict": "SELECT DISTINCT ?x\nWHERE {\n ?x ns:location.country.official_language ns:French Language\t. # French\n}"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ptolemy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ptolemy ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ptolemy I of Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ptolemy I of Egypt ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henry VIII of England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henry VIII of England ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henry VIII of England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henry VIII of England ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?x ns:people.person.gender ns:Female.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paraná River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paraná River ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Parana River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Parana River ns:geography.river.mouth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Nixon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Nixon ns:type.object.name?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Nixon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Nixon ns:people.person.name?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodor Schwann)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodor Schwann ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodor Schwann)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodor Schwann ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Frank Lloyd Wright)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Frank Lloyd Wright ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Frank Lloyd Wright)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Frank Lloyd Wright ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Houston Rockets)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Houston Rockets ns:sports.sports_team.championships?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Houston Rockets)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Houston Rockets ns:sports.sports_team.championships?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.location.contains?x.\n?x ns:topic_server.population_number?sk0.\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.location.contains?x.\n?x ns:topic_server.population_number?sk0.\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Holy Roman Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Holy Roman Empire ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Holy Roman Empire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Holy Roman Empire ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Liam Hemsworth)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Liam Hemsworth ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Liam Hemsworth)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Liam Hemsworth ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Young and the Restless)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Young and the Restless ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Nicholas Newman.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Young and the Restless)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Young and the Restless ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Nicholas Newman.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Park)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Park ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Eric Cartman.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:South Park)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:South Park ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Eric Cartman.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Angelina Jolie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Angelina Jolie ns:people.person.sibling_s?y.\n?y ns:people.sibling_relationship.sibling?x.\n?x ns:people.person.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Angelina Jolie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Angelina Jolie ns:people.person.sibling_s?y.\n?y ns:people.sibling_relationship.sibling?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bank of America Corporation)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bank of America Corporation ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bank of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bank of America ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Josh Hamilton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Josh Hamilton ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Josh Hamilton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Josh Hamilton ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Burundi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Burundi ns:base.locations.countries.continent?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Burundi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Burundi ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Burundi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Burundi ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Burundi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Burundi ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Niger River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Niger River ns:location.location.partially_containedby?x.\n?x ns:common.topic.notable_types ns:Country.\n?x ns:location.location.partially_contains ns:Sahel.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Niger River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Niger River ns:geography.river.basin_countries?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paul Ryan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paul Ryan ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paul Ryan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paul Ryan ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Acadia University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Acadia University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Acadia University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Acadia University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:F. Scott Fitzgerald)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:F. Scott Fitzgerald ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:F. Scott Fitzgerald)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:F. Scott Fitzgerald ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tomtom Nv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tomtom Nv ns:base.schemastaging.organization_extra.phone_number?y.\n?y ns:base.schemastaging.phone_sandbox.service_location?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tom Tom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tom Tom ns:music.musical_group.country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iran)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iran ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iran)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iran ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Second Battle of Ypres)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Second Battle of Ypres ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Ypres)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Ypres ns:time.event.locations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Crabtree)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Crabtree ns:american_football.football_player.position_s?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Crabtree)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Crabtree ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Crabtree)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Crabtree ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Crabtree)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Crabtree ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Crabtree)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Crabtree ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.position?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Crabtree)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Crabtree ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Afrikaans Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Afrikaans Language ns:language.human_language.countries_spoken_in?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Afrikaans)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Afrikaans ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Afrikaans Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Afrikaans Language ns:language.human_language.main_country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Afrikaans Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Afrikaans Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Florida)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Florida ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Florida)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Florida ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mossad Agent Ziva David)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mossad Agent Ziva David ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.series ns:NCIS.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:NCIS)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:NCIS ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Ziva David.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n  ns:m.04l4rht ns:royalty.noble_title.holders?y0.  # Monarch of England\n ?y0 ns:royalty.noble_title_tenure.noble_title?title ;\n      ns:royalty.noble_title_tenure.noble_person ns:Henry VIII of England ;\n      ns:royalty.noble_title_tenure.to_date?to.\n\n  ns:m.04l4rht ns:royalty.noble_title.holders?y1.  # Monarch of England\n ?y1 ns:royalty.noble_title_tenure.noble_person?x ;\n      ns:royalty.noble_title_tenure.from_date?from.\n\n  FILTER (xsd:datetime(?from) - xsd:datetime(?to) >= 0)\n}\nORDER BY xsd:datetime(?from)\nLIMIT 1", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henry VIII of England)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henry VIII of England ns:people.person.children?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Louis Cardinals)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Louis Cardinals ns:baseball.baseball_team.current_coaches?y.\n?y ns:baseball.current_coaching_tenure.baseball_coach?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Louis Cardinals)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Louis Cardinals ns:baseball.baseball_team.coaches?y.\n?y ns:baseball.basketball_coach_tenure.coach?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dawood Ibrahim)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dawood Ibrahim ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Daud ibrahim)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Daud ibrahim ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:base.locations.countries.continent?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Turkey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Turkey ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Region.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russian ns:people.ethnicity.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russia ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.deceased_person.place_of_burial?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Martin Luther King, Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Martin Luther King, Jr. ns:people.deceased_person.place_of_burial?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wales)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wales ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wales)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wales ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:City/Town/Village.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rafael Nadal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rafael Nadal ns:people.person.nationality?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rafael Nadal)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rafael Nadal ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:common.topic.notable_types ns:Political Entity.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Islam ns:religion.religion.beliefs?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Islam ns:religion.religion.beliefs?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Prime minister.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Prime minister.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonidas I)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonidas I ns:people.person.children?x.\n?x ns:people.person.gender ns:Male.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonidas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonidas ns:people.person.children?x.\n?x ns:people.person.gender ns:Male.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Judi Dench)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Judi Dench ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Judi Dench)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Judi Dench ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sahara)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sahara ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sahara Desert)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sahara Desert ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rihanna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rihanna ns:people.person.parents?x.\n?x ns:people.person.gender ns:Female.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rihanna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rihanna ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Roosevelt ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.from?x.\n?y ns:government.government_position_held.office_position_or_title ns:President of the United States.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Roosevelt ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.from?x.\n?y ns:government.government_position_held.office_position_or_title ns:President of the United States.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Oher)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Oher ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Oher)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Oher ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Albert Einstein)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Albert Einstein ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Albert Einstein)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Albert Einstein ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.statistical_region.places_exported_to?y.\n?y ns:location.imports_and_exports.exported_to?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.statistical_region.places_exported_to?y.\n?y ns:location.imports_and_exports.exported_to?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:African Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:African Union ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:African Union)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:African Union ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kim Richards)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kim Richards ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kim Richards)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kim Richards ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.series?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henri Rousseau)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henri Rousseau ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Henri Rousseau)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Henri Rousseau ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Edwards)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Edwards ns:base.crime.acquitted_person.acquittal?y.\n?y ns:base.crime.acquittal.crime_type?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Edwards)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Edwards ns:government.politician.tax_offenses_charged?y.\n?y ns:government.tax_offense.charge?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Huey P. Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Huey P. Newton ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Huey Newton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Huey Newton ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Printing press)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Printing press ns:law.invention.date_of_invention?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Johannes Gutenberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Johannes Gutenberg ns:law.inventor.inventions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Midlothian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Midlothian ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Midlothian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Midlothian ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Marta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Marta ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:MartaROONEY)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:MartaROONEY ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Terry)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Terry ns:people.person.children?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Terry)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Terry ns:people.person.children?x.\n?x ns:people.person.gender ns:Female.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Siege of Vicksburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Siege of Vicksburg ns:base.culturalevent.event.entity_involved?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Vicksburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Vicksburg ns:time.event.participants?y.\n?y ns:time.event.participant?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Siege of Vicksburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Siege of Vicksburg ns:military.military_conflict.combatants?y.\n?y ns:military.military_combatant_group.combatants?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Vicksburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Vicksburg ns:time.event.people_in_event?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Siege of Vicksburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Siege of Vicksburg ns:military.military_conflict.commanders?y.\n?y ns:military.military_command.military_combatant?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Vicksburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Vicksburg ns:time.event.participants?y.\n?y ns:time.event.contributor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Siege of Vicksburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Siege of Vicksburg ns:military.military_conflict.commanders?y.\n?y ns:military.military_command.military_commander?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Vicksburg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Vicksburg ns:time.event.people_in_event?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nikolai Gogol)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nikolai Gogol ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Nikolai Gogol)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Nikolai Gogol ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:World Series)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:World Series ns:time.recurring_event.instances?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:First World Series)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:First World Series ns:time.event.start_date?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Simon Birch)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Simon Birch ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Simon Birch.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Simon Birch)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Simon Birch ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:General Motors)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:General Motors ns:business.business_operation.industry?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:General Motors)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:General Motors ns:business.consumer_company.product_lines?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United Kingdom)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United Kingdom ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jamaica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jamaica ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:LeBron James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:LeBron James ns:basketball.basketball_player.position_s?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:LeBron James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:LeBron James ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.position?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:LeBron James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:LeBron James ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.position?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:LeBron James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:LeBron James ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.position?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wayne Gretzky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wayne Gretzky ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?y ns:sports.sports_team_roster.from?sk0.\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wayne Gretzky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wayne Gretzky ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:common.topic.notable_types ns:冰球.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peru)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peru ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peru)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peru ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jerry Garcia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jerry Garcia ns:music.guitarist.guitars_played?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jerry Garcia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jerry Garcia ns:music.guitarist.guitars_played?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonardo da Vinci)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonardo da Vinci ns:visual_art.visual_artist.art_forms?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Leonardo da Vinci)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Leonardo da Vinci ns:visual_art.visual_artist.art_forms?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New Jersey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New Jersey ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.governmental_body ns:United States Senate.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New Jersey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New Jersey ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:Senator.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rihanna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rihanna ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rihanna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rihanna ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lionel Messi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lionel Messi ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lionel Messi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lionel Messi ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lil Wayne)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lil Wayne ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lil Wayne)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lil Wayne ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:J. R. R. Tolkien)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:J. R. R. Tolkien ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:J. R. R. Tolkien)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:J. R. R. Tolkien ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint Louis University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint Louis University ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint Louis University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint Louis University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.state_province_region?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint Louis University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint Louis University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.state_province_region?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint Louis University)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint Louis University ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.state_province_region?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spanish Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spanish Language ns:language.human_language.countries_spoken_in?x.\n?x ns:location.country.official_language ns:Spanish Language.\n}\n", "predict": "SELECT DISTINCT ?x\nWHERE {\n ?x ns:location.country.official_language ns:Spanish Language. # Spanish language\n}"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\tFILTER (?x!= ns:Paul Ryan)\n\t{ \n\t  # Parents\n\t  ns:Paul Ryan ns:people.person.parents?x.\n\t}\n\tUNION\n\t{\n\t  # Children\n\t  ns:Paul Ryan ns:people.person.children?x.\n\t}\n\tUNION\n\t{\n\t  # Siblings\n\t  ns:Paul Ryan ns:people.person.sibling_s?y.\n\t ?y ns:people.sibling_relationship.sibling?x.\n\t}\n\tUNION\n\t{\n\t  # Spouse\n\t  ns:Paul Ryan ns:people.person.spouse_s?y.\n\t ?y ns:people.marriage.spouse?x.\n\t ?y ns:people.marriage.type_of_union ns:m.04ztj.\n\t  FILTER (NOT EXISTS {?y ns:people.marriage.to []})\n\t}\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paul Ryan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paul Ryan ns:people.person.parents?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iraq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iraq ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Iraq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Iraq ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Spain)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Spain ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lincoln Steffens)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lincoln Steffens ns:book.author.works_written?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stephen A. Lincoln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stephen A. Lincoln ns:book.author.works_written?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anders Celsius)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anders Celsius ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Anders Celsius)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Anders Celsius ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York City ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York City ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Massachusetts)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Massachusetts ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Massachusetts)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Massachusetts ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Colombia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Colombia ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gregor Mendel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gregor Mendel ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gregor Mendel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gregor Mendel ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Laura Ingalls Wilder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Laura Ingalls Wilder ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Laura Ingalls Wilder)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Laura Ingalls Wilder ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:sports.sports_team_location.teams?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Germany)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Germany ns:sports.sports_team_location.teams?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Oklahoma)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Oklahoma ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Oklahoma)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Oklahoma ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Norway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Norway ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Norway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Norway ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Norway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Norway ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Norway)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Norway ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Singapore)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Singapore ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Singapore)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Singapore ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Blackfoot Confederacy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Blackfoot Confederacy ns:people.ethnicity.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Blackfoot people)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Blackfoot people ns:people.ethnicity.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Hood: Prince of Thieves)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Hood: Prince of Thieves ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Robin Hood.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Hood)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Hood ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:Pirates of the Caribbean: The Prince of Palaces.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Texas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Texas ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Texas)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Texas ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kurds)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kurds ns:people.ethnicity.geographic_distribution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kurds)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kurds ns:people.ethnicity.geographic_distribution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Armstrong)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Armstrong ns:music.group_member.instruments_played?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Louis Armstrong)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Louis Armstrong ns:music.group_member.instruments_played?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Alyson Stoner)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Alyson Stoner ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Camp Rock.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Camp Rock)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Camp Rock ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Alyson Stoner.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Camp Rock)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Camp Rock ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Alyson Stoner.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Camp Rock)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Camp Rock ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:Alyson Stoner.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Madonna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Madonna ns:people.person.religion?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Madonna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Madonna ns:people.person.religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.location.adjoin_s?y.\n?y ns:location.adjoining_relationship.adjoins?x.\n?x ns:common.topic.notable_types ns:Country.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Hammond)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Hammond ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Richard Hammond)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Richard Hammond ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lois Griffin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lois Griffin ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.special_performance_type ns:Voice.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lois Griffin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lois Griffin ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.special_performance_type ns:Voice.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paris)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paris ns:travel.travel_destination.how_to_get_here?y.\n?y ns:travel.transportation.transport_terminus?x.\n?x ns:common.topic.notable_types ns:Airport.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paris)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paris ns:travel.travel_destination.how_to_get_here?y.\n?y ns:travel.transportation.transport_terminus?x.\n?y ns:travel.transportation.mode_of_transportation ns:Air travel.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rihanna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rihanna ns:music.artist.album?x.\nFILTER(NOT EXISTS {?x ns:music.album.release_date?sk0} || \nEXISTS {?x ns:music.album.release_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?x ns:music.album.release_date?sk2} || \nEXISTS {?x ns:music.album.release_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rihanna)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rihanna ns:music.artist.album?x.\n?x ns:music.album_release.name?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dave Ramsey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dave Ramsey ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dave Ramsey)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dave Ramsey ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date?sk0} || \nEXISTS {?y ns:people.place_lived.end_date?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date?sk2} || \nEXISTS {?y ns:people.place_lived.start_date?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Galileo Galilei)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Galileo Galilei ns:astronomy.astronomer.astronomical_objects_discovered?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Galileo Galilei)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Galileo Galilei ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saudi Arabia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saudi Arabia ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saudi Arabia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saudi Arabia ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Special Agent Anthony DiNozzo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Special Agent Anthony DiNozzo ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.series ns:NCIS.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tony Dinozzo)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tony Dinozzo ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.series ns:NCIS.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jesus Christ)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jesus Christ ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jesus Christ)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jesus Christ ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York City ns:base.biblioness.bibs_location.state?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:New York City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:New York City ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Knox Overstreet)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Knox Overstreet ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Knightlyknox)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Knightlyknox ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David Carradine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:David Carradine ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:David Carradine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:David Carradine ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stanley Cup)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stanley Cup ns:symbols.namesake.named_after?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stanley Cup)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stanley Cup ns:sports.sports_award.prizes?y.\n?y ns:sports.sports_award_prize.award?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chinese language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chinese language ns:language.human_language.main_country?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chinese Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chinese Language ns:language.human_language.countries_spoken_in?x.\n}\n"}
{"label": "SELECT DISTINCT?x \nWHERE {\n\tFILTER (?x!= ns:Portugal)\n\t{ \n\t  ns:Portugal ns:location.statistical_region.places_exported_to?y.\n\t ?y ns:location.imports_and_exports.exported_to?x. \n\t}\n\tUNION\n\t{\n\t  ns:Portugal ns:location.statistical_region.places_imported_from?y.\n\t ?y ns:location.imports_and_exports.imported_from?x. \n\t}\n}", "predict": "SELECT DISTINCT?x \nWHERE {\n\tFILTER (?x!= ns:Portugal)\n\t{ \n\t  ns:Portugal ns:location.statistical_region.places_exported_to?y.\n\t ?y ns:location.imports_and_exports.exported_to?x. \n\t}\n\tUNION\n\t{\n\t  ns:Portugal ns:location.statistical_region.places_imported_from?y.\n\t ?y ns:location.imports_and_exports.imported_from?x. \n\t}\n}"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Babylonia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Babylonia ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Babylonians)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Babylonians ns:people.ethnicity.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Babylon)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Babylon ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Babylonians)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Babylonians ns:people.ethnicity.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wassily Kandinsky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wassily Kandinsky ns:visual_art.visual_artist.associated_periods_or_movements?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Wassily Kandinsky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Wassily Kandinsky ns:visual_art.visual_artist.art_forms?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cuba)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cuba ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Cuba)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Cuba ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Illinois House of Representatives)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Illinois House of Representatives ns:government.governmental_body.members?y.\n?y ns:government.government_position_held.office_holder?x.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Illinois)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Illinois ns:government.political_district.representatives?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.office_position_or_title ns:Representative.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sweden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sweden ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sweden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sweden ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n  {\n    SELECT?pFrom \n    WHERE {\n      ns:Franklin D. Roosevelt ns:government.politician.government_positions_held?y. # Franklin D. Roosevelt\n     ?y ns:government.government_position_held.office_position_or_title?x ; \n         ns:government.government_position_held.basic_title ns:m.060c4 ; # President\n         ns:government.government_position_held.from?pFrom.\n    }\n  }\n  ns:Franklin D. Roosevelt ns:government.politician.government_positions_held?y. # Franklin D. Roosevelt\n ?y ns:government.government_position_held.office_position_or_title?x ; \n     ns:government.government_position_held.from?from.\n  \n  FILTER(xsd:dateTime(?pFrom) - xsd:dateTime(?from) > 0)\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Franklin D. Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Franklin D. Roosevelt ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.office_position_or_title?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Downey Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Downey Jr. ns:base.prison.prisoner.imprisoned?y.\n?y ns:base.prison.imprisonment.prison?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Downey Jr.)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Downey Jr. ns:base.prison.prisoner.imprisoned?y.\n?y ns:base.prison.imprisonment.prison?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.education?y.\n?y ns:education.education.degree?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Barack Obama)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Barack Obama ns:people.person.education?y.\n?y ns:education.education.degree?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Shiva)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Shiva ns:religion.deity.deity_of?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:God Shiva)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:God Shiva ns:symbols.symbol.characteristic?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:law.inventor.inventions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Benjamin Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Benjamin Franklin ns:law.inventor.inventions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n ?x ns:sports.sports_championship_event.championship ns:World Series. # World Series\n  {\n   ?x ns:sports.sports_championship_event.runner_up ns:m.051vz. # Milwaukee Brewers\n  }\n  UNION\n  {\n   ?x ns:sports.sports_championship_event.runner_up ns:m.051vz. # Milwaukee Brewers\n  }\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Milwaukee Brewers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Milwaukee Brewers ns:sports.sports_team.championships?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bill Clinton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bill Clinton ns:government.us_president.vice_president?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bill Clinton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bill Clinton ns:government.us_president.vice_president?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Life of Franz Liszt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Life of Franz Liszt ns:music.composer.compositions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Franz Liszt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Franz Liszt ns:music.composer.compositions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russo-Japanese War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russo-Japanese War ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Russian-Japanese War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Russian-Japanese War ns:time.event.locations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Los Angeles Kings)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Los Angeles Kings ns:sports.sports_team.championships?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Los Angeles Kings)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Los Angeles Kings ns:sports.sports_team.championships?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jackie Robinson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jackie Robinson ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:sports.sports_team.sport ns:Baseball.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jackie Robinson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jackie Robinson ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?x ns:common.topic.notable_types ns:Baseball Team.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Saint Lawrence River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Saint Lawrence River ns:geography.river.mouth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:St. Lawrence River)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:St. Lawrence River ns:geography.river.mouth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:United States of America)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:United States of America ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ariel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ariel ns:fictional_universe.fictional_character.siblings?y.\n?y ns:fictional_universe.sibling_relationship_of_fictional_characters.siblings?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ariel)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ariel ns:fictional_universe.fictional_character.sisters?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Family Guy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Family Guy ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.actor ns:Seth MacFarlane.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Family Guy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Family Guy ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.character?x.\n?y ns:tv.regular_tv_appearance.actor ns:Seth MacFarlane.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William McKinley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William McKinley ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William McKinley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William McKinley ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n{\n  SELECT DISTINCT?f1\n  WHERE {\n    ns:Darth Vader ns:film.film_character.portrayed_in_films?y.  # Darth Vader\n   ?y ns:film.performance.film?f1.\n   ?f1 ns:film.film.initial_release_date?d.\n  }\n  ORDER BY?d\n  LIMIT 1\n}\n  ns:Darth Vader ns:film.film_character.portrayed_in_films?y.  # Darth Vader\n ?y ns:film.performance.actor?x ; \n     ns:film.performance.film?f.\n  FILTER (?f1 =?f)\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Darth Vader)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Darth Vader ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:A New Hope.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kevin James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kevin James ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kevin James)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kevin James ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:people.person.date_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adolf Hitler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adolf Hitler ns:people.person.date_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Atlanta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Atlanta ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Atlanta)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Atlanta ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Auschwitz concentration camp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Auschwitz concentration camp ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Auschwitz concentration camp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Auschwitz concentration camp ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dominican Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dominican Republic ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dominican Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dominican Republic ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Czech Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Czech Republic ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Czech Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Czech Republic ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Czech Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Czech Republic ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Czech Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Czech Republic ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Shakespeare)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Shakespeare ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:William Shakespeare)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:William Shakespeare ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:F. Scott Fitzgerald)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:F. Scott Fitzgerald ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:F. Scott Fitzgerald)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:F. Scott Fitzgerald ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joan Crawford)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joan Crawford ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joan Crawford)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joan Crawford ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rob Kardashian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rob Kardashian ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rob Kardashian)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rob Kardashian ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Allen Iverson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Allen Iverson ns:sports.sports_award_winner.awards?y.\n?y ns:sports.sports_award.season?x.\n?y ns:sports.sports_award.award ns:NBA Most Valuable Player Award.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Allen Iverson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Allen Iverson ns:base.schemastaging.athlete_extra.salary?y.\n?y ns:base.schemastaging.athlete_salary.year?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harry S. Truman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harry S. Truman ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Harry S. Truman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Harry S. Truman ns:people.person.education?y.\n?y ns:education.education.institution?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utica ns:location.hud_county_place.county?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utica ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utica ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:US County.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Utica)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Utica ns:location.hud_county_place.county?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Babbage)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Babbage ns:law.inventor.inventions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Babbage)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Babbage ns:law.inventor.inventions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Madagascar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Madagascar ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Julien.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Julian Madagascar)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Julian Madagascar ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rick Scott)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rick Scott ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Rick Scott)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Rick Scott ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Crimean War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Crimean War ns:time.event.locations?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Crimean War)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Crimean War ns:time.event.locations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Roosevelt ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.basic_title?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Theodore Roosevelt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Theodore Roosevelt ns:government.politician.government_positions_held?y.\n?y ns:government.government_position_held.office_position_or_title?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miley Cyrus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miley Cyrus ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miley Cyrus)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miley Cyrus ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Milk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Milk ns:film.film.starring?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.actor ns:James Franco.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James Franco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James Franco ns:film.actor.film?y.\n?y ns:film.performance.character?x.\n?y ns:film.performance.film ns:Milk.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:2011 military intervention in Libya)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:2011 military intervention in Libya ns:time.event.start_date?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Libyan conflict)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Libyan conflict ns:time.event.start_date?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Diana Taurasi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Diana Taurasi ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Diana Taurasi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Diana Taurasi ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paris)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paris ns:travel.travel_destination.tourist_attractions?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Paris)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Paris ns:travel.travel_destination.tourist_attractions?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.governmental_body?x.\n?x ns:government.governmental_body.jurisdiction ns:Canada.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adam Morrison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adam Morrison ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.draft?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Adam Morrison)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Adam Morrison ns:sports.drafted_athlete.drafted?y.\n?y ns:sports.sports_league_draft_pick.draft?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:music.artist.origin?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Maya Moore)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Maya Moore ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Maya Moore)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Maya Moore ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Los Angeles Dodgers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Los Angeles Dodgers ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Los Angeles Dodgers)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Los Angeles Dodgers ns:sports.sports_team.championships?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James Cook)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James Cook ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:James Cook)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:James Cook ns:fictional_universe.fictional_character.character_status_of?x ns:fictional_universe.fictional_character.gender ns:Male }\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Williams ns:people.person.spouse_s?y.\n?y ns:people.marriage.location_of_ceremony?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robin Williams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robin Williams ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Canada)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Canada ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Islam ns:religion.religion.deities?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Islam ns:religion.religion.types_of_beliefs?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peru)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peru ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Peru)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Peru ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Israeli–Palestinian conflict)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Israeli–Palestinian conflict ns:time.event.people_involved?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Israeli-Palestinian conflict)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Israeli-Palestinian conflict ns:time.event.people_in_？ \n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:American Football League)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:American Football League ns:organization.organization.founders?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:American Football League)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:American Football League ns:organization.organization.founders?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Diego Velázquez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Diego Velázquez ns:people.deceased_person.place_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Diego Velázquez)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Diego Velázquez ns:people.deceased_person.place_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:base.aareas.schema.administrative_area.short_name?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.administrative_division.country_code?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.country.internet_tld?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mexico)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mexico ns:location.administrative_division.country_code?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.currency_used?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Switzerland)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Switzerland ns:location.country.currency_used?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:people.deceased_person.place_of_burial?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John F. Kennedy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John F. Kennedy ns:people.deceased_person.place_of_burial?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Muhammad in Islam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Muhammad in Islam ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Muhammad ibn Masud)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Muhammad ibn Masud ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ukraine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ukraine ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ukraine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ukraine ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ukraine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ukraine ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ukraine)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ukraine ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Supreme Court of the United States)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Supreme Court of the United States ns:law.court.judges?y.\n?y ns:law.judicial_tenure.judge?x.\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.from_date?sk0} || \nEXISTS {?y ns:law.judicial_tenure.from_date?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.to_date?sk2} || \nEXISTS {?y ns:law.judicial_tenure.to_date?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Supreme Court of the United States)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Supreme Court of the United States ns:law.court.judges?y.\n?y ns:law.judicial_tenure.judge?x.\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.from_date?sk0} || \nEXISTS {?y ns:law.judicial_tenure.from_date?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.to_date?sk2} || \nEXISTS {?y ns:law.judicial_tenure.to_date?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n                ns:Europe ns:base.locations.continents.countries_within?x.\n               ?x ns:location.location.area?y.\n}\nORDER BY DESC(xsd:float(?y))\nLIMIT 1", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Europe)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Europe ns:location.location.contains?x.\n?x ns:base.biblioness.bibs_location.loc_type?sk0.\n?sk0 ns:base.biblioness.bibs_location_type.location?sk.\n?sk ns:base.biblioness.bibs_location.base?dx.\n?dx ns:base.bibs_location_type.country?sk.\n?sk ns:base.bibs_location.bibs_type?x.\n}\nORDER BY DESC(xsd:datetime(?x))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kaley Cuoco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kaley Cuoco ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.from?x.\n?y ns:tv.regular_tv_appearance.series ns:Charmed.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kaley Cuoco)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kaley Cuoco ns:tv.tv_actor.starring_roles?y.\n?y ns:tv.regular_tv_appearance.from?x.\n?y ns:tv.regular_tv_appearance.series ns:Charmed.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chris Rock)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chris Rock ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chris Rock)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chris Rock ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto Maple Leafs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto Maple Leafs ns:sports.sports_team.championships?x.\n?x ns:time.event.start_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Toronto Maple Leafs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Toronto Maple Leafs ns:sports.sports_team.championships?x.\n?x ns:time.event.end_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Egypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Egypt ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Brazil)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Brazil ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vince Lombardi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vince Lombardi ns:american_football.football_player.position_s?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vince Lombardi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vince Lombardi ns:american_football.football_team_coach.team_coached?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:A Streetcar Named Desire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:A Streetcar Named Desire ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Stanley Kowalski.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Desire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Desire ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Stanley钾.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Stanley Kowalski)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Stanley Kowalski ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.film ns:A Streetcar Named Desire.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Desire)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Desire ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Stanley Kawalski.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\t{ \n\t  # Film\n\t  ns:Lola Bunny ns:film.film_character.portrayed_in_films?y.\n\t ?y ns:film.performance.actor?x.\n\t ?y ns:film.performance.special_performance_type ns:m.02nsjvf. #voice\n\t}\n\tUNION\n\t{\n\t  # TV\n\t  ns:Lola Bunny ns:tv.tv_character.appeared_in_tv_program?y.\n\t ?y ns:tv.regular_tv_appearance.actor?x.\n\t}\n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Lola Bunny)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Lola Bunny ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.special_performance_type ns:Voice.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Darwin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Darwin ns:book.author.works_written?x.\n?x ns:common.topic.notable_types ns:Book.\nFILTER(NOT EXISTS {?x ns:book.written_work.date_written?sk0} || \nEXISTS {?x ns:book.written_work.date_written?sk1. \nFILTER(xsd:datetime(?sk1) >= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?x ns:book.written_work.date_written?sk2} || \nEXISTS {?x ns:book.written_work.date_written?sk3. \nFILTER(xsd:datetime(?sk3) <= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Charles Darwin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Charles Darwin ns:book.author.works_written?x.\n?x ns:common.topic.notable_types ns:Book.\n?x ns:book.written_work.date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Serbia)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Serbia ns:location.country.official_language?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Serbs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Serbs ns:people.ethnicity.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Serbs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Serbs ns:people.ethnicity.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Serbs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Serbs ns:people.ethnicity.languages_spoken?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Laci Peterson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Laci Peterson ns:people.deceased_person.cause_of_death?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Laci Peterson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Laci Peterson ns:people.deceased_person.cause_of_death?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kris Humphries)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kris Humphries ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kris Humphries)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kris Humphries ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gerard Butler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gerard Butler ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Gerard Butler)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Gerard Butler ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Franklin ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Franklin)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Franklin ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sean Connery)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sean Connery ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n?x ns:film.film.initial_release_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sean Connery)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sean Connery ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n?x ns:film.film.initial_release_date?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Didier Drogba)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Didier Drogba ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Didier Drogba)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Didier Drogba ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Crabtree)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Crabtree ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Crabtree)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Crabtree ns:people.person.education?y.\n?y ns:education.education.institution?x.\n?x ns:common.topic.notable_types ns:College/University.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Fredrik Ljungberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Fredrik Ljungberg ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Freddie Jungberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Freddie Jungberg ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miami Dolphins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miami Dolphins ns:sports.sports_team.roster?y.\n?y ns:sports.sports_team_roster.player?x.\n?y ns:sports.sports_team_roster.number?sk0.\nFILTER (str(?sk0) = \"22\")\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk1} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk2. \nFILTER(xsd:datetime(?sk2) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk3} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk4. \nFILTER(xsd:datetime(?sk4) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Miami Dolphins)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Miami Dolphins ns:sports.sports_team.roster?y.\n?y ns:sports.sports_team_roster.player?x.\n?y ns:sports.sports_team_roster.number?sk0.\nFILTER (str(?sk0) = \"22\")\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk1} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk2. \nFILTER(xsd:datetime(?sk2) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk3} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk4. \nFILTER(xsd:datetime(?sk4) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Adams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Adams ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Adams)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Adams ns:people.person.places_lived?y.\n?y ns:people.place_lived.location?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Antonio Vivaldi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Antonio Vivaldi ns:music.artist.genre?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Antonio Vivaldi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Antonio Vivaldi ns:music.artist.genre?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mike Fisher)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mike Fisher ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mike Fisher)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mike Fisher ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Daniel Craig)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Daniel Craig ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Daniel Craig)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Daniel Craig ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\n\tns:Eduardo Paolozzi ns:visual_art.visual_artist.artworks?y.\n\t?y ns:visual_art.artwork.media?x. \n}", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Edouard Paolozzi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Edouard Paolozzi ns:base.artists.statistics?y.\n?y ns:base.artists.statistics.track_type?x.\n?y ns:base.artists.statistics.artwork_form?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joe Biden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joe Biden ns:people.person.education?y.\n?y ns:education.education.major_field_of_study?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Joe Biden)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Joe Biden ns:people.person.education?y.\n?y ns:education.education.major_field_of_study?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Lion King)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Lion King ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Timon.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:The Lion King)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:The Lion King ns:film.film.starring?y.\n?y ns:film.performance.actor?x.\n?y ns:film.performance.character ns:Timon.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ohio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ohio ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Region.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Ohio)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Ohio ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kailua)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kailua ns:location.location.containedby?x.\n?x ns:geography.island.island_group ns:Hawaiian Islands.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Kailua)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Kailua ns:location.location.containedby?x.\n?x ns:common.topic.notable_types ns:Island.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Whoopi Goldberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Whoopi Goldberg ns:award.award_winner.awards_won?y.\n?y ns:award.award_honor.award?x.\n?y ns:award.award_honor.ceremony ns:28th Annual Grammy Awards.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Whoopi Goldberg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Whoopi Goldberg ns:award.award_winner.awards_won?y.\n?y ns:award.award_honor.award?x.\n?y ns:award.award_honor.award_type ns:Grammy.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Maggie Simpson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Maggie Simpson ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Maggie)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Maggie ns:film.film_character.portrayed_in_films?y.\n?y ns:film.performance.actor?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Owen Schmitt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Owen Schmitt ns:american_football.football_player.games?y.\n?y ns:american_football.player_game_statistics.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Owen Schmitt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Owen Schmitt ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Owen Schmitt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Owen Schmitt ns:american_football.football_player.receiving?y.\n?y ns:american_football.player_receiving_statistics.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Owen Schmitt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Owen Schmitt ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Owen Schmitt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Owen Schmitt ns:american_football.football_player.rushing?y.\n?y ns:american_football.player_rushing_statistics.team?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Owen Schmitt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Owen Schmitt ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Jefferson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Jefferson ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Thomas Jefferson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Thomas Jefferson ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:location.statistical_region.religions?y.\n?y ns:location.religion_percentage.religion?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sex and the City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sex and the City ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Jack Berger.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sex and the City)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sex and the City ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Berger.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:FA Cup)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:FA Cup ns:sports.sports_award_type.winners?y.\n?y ns:sports.sports_award.award_winner?x.\n?y ns:sports.sports_award.season ns:1999–2000 FA Cup.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:FA Cup Final)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:FA Cup Final ns:sports.sports_award_type.winners?y.\n?y ns:sports.sports_award.award_winner?x.\n?y ns:sports.sports_award.season ns:2000 FA Cup Final.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:people.person.children?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Michael Jackson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Michael Jackson ns:people.person.children?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Pattinson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Pattinson ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Robert Pattinson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Robert Pattinson ns:film.actor.film?y.\n?y ns:film.performance.film?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Japan)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Japan ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bob Kelso)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bob Kelso ns:tv.tv_character.appeared_in_tv_program?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.series ns:Scrubs.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Scrubs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Scrubs ns:tv.tv_program.regular_cast?y.\n?y ns:tv.regular_tv_appearance.actor?x.\n?y ns:tv.regular_tv_appearance.character ns:Bob Kelso.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vanessa Carlton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vanessa Carlton ns:people.person.ethnicity?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Vanessa Carlton)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Vanessa Carlton ns:people.person.race?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Czech Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Czech Republic ns:location.country.languages_spoken?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Czech Republic)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Czech Republic ns:location.country.official_language?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arabic Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arabic Language ns:language.human_language.countries_spoken_in?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Arabic Language)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Arabic Language ns:language.human_language.main_country?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tim Cook)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tim Cook ns:people.person.employment_history?y.\n?y ns:business.employment_tenure.company?x.\n?y ns:business.employment_tenure.from?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Tim Cook)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Tim Cook ns:people.person.employment_history?y.\n?y ns:business.employment_tenure.company?x.\n?x ns:common.topic.notable_types ns:Company.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.education?y.\n?y ns:education.education.degree?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Mitt Romney)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Mitt Romney ns:people.person.education?y.\n?y ns:education.education.degree?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bob Marley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bob Marley ns:people.deceased_person.place_of_burial?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Bob Marley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Bob Marley ns:people.deceased_person.place_of_burial?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:London)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:London ns:location.location.time_zones?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:London)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:London ns:location.location.time_zones?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chicago)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chicago ns:travel.travel_destination.accommodation?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chicago)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chicago ns:travel.travel_destination.accommodation?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sheryl Crow)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sheryl Crow ns:medicine.notable_person_with_medical_condition.condition?x.\n?x ns:medicine.disease.parent_disease ns:Cancer.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Sheryl Crow)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Sheryl Crow ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.country.form_of_government?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Argentina)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Argentina ns:location.country.form_of_government?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Fabio Capello)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Fabio Capello ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Fabio Capello)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Fabio Capello ns:people.person.place_of_birth?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Abraham Lincoln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Abraham Lincoln ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Abraham Lincoln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Abraham Lincoln ns:government.politician.party?y.\n?y ns:government.political_party_tenure.party?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jack London)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jack London ns:people.person.profession?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Jack London)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Jack London ns:people.person.profession?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Morgan Freeman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Morgan Freeman ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n?y ns:people.marriage.to?sk0.\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Morgan Freeman)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Morgan Freeman ns:people.person.spouse_s?y.\n?y ns:people.marriage.spouse?x.\n?y ns:people.marriage.type_of_union ns:Marriage.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Apennine Mountains)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Apennine Mountains ns:type.object.name?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Northern Italy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Northern Italy ns:location.location.contains?x.\n?x ns:common.topic.notable_types ns:Mountain range.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Steinbeck)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Steinbeck ns:influence.influence_node.influenced_by?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:John Steinbeck)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:John Steinbeck ns:influence.influence_node.influenced_by?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dwayne Johnson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dwayne Johnson ns:people.person.ethnicity?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Dwayne Johnson)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Dwayne Johnson ns:people.person.ethnicity?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North Atlantic Treaty Organization (NATO))\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North Atlantic Treaty Organization (NATO) ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:North Atlantic Treaty Organization)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:North Atlantic Treaty Organization ns:organization.organization.headquarters?y.\n?y ns:location.mailing_address.citytown?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Antietam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Antietam ns:time.event.locations?x.\n?x ns:common.topic.notable_types ns:US State.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Battle of Antietam)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Battle of Antietam ns:time.event.locations?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Zambezi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Zambezi ns:geography.river.mouth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Zambezi)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Zambezi ns:geography.river.mouth?x.\n?x ns:geography.geographical_feature.category ns:Ocean.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nfilter(?x!= ns:m.01634x)\nns:David Beckham ns:sports.pro_athlete.teams?z. #beckham\n?z ns:sports.sports_team_roster.team ns:m.01k2yr. #galaxy\n?z ns:sports.sports_team_roster.from?from.\nns:David Beckham ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?y  ns:sports.sports_team_roster.to?to.\n}\nORDER BY ASC(xsd:datetime(?from))\nLIMIT 1", "predict": "SELECT DISTINCT?x\nWHERE {\nfilter(?x!= ns:David Beckham)\n\nns:David Beckham ns:sports.pro_athlete.teams?z.\n?z ns:sports.sports_team_roster.team ns:m.01634x. #La Galaxy\n?z ns:sports.sports_team_roster.from?from.\nns:David Beckham ns:sports.pro_athlete.teams?y.\n?y ns:sports.sports_team_roster.team?x.\n?y  ns:sports.sports_team_roster.to?to.\nFILTER (xsd:dateTime(?from) - xsd:dateTime(?to) >= 0)\n}\nORDER BY Desc(xsd:datetime(?from))\nLIMIT 1"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:France)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:France ns:government.governmental_jurisdiction.governing_officials?y.\n?y ns:government.government_position_held.office_holder?x.\n?y ns:government.government_position_held.basic_title ns:President.\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from?sk0} || \nEXISTS {?y ns:government.government_position_held.from?sk1. \nFILTER(xsd:datetime(?sk1) <= \"\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to?sk2} || \nEXISTS {?y ns:government.government_position_held.to?sk3. \nFILTER(xsd:datetime(?sk3) >= \"\"^^xsd:dateTime) })\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Knossos)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Knossos ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Knossos)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Knossos ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Area 51)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Area 51 ns:location.location.containedby?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Roswell Area 51)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Roswell Area 51 ns:location.location.containedby?x.\n}\n"}
{"label": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chris Riley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chris Riley ns:people.person.place_of_birth?x.\n}\n", "predict": "SELECT DISTINCT?x\nWHERE {\nFILTER (?x!= ns:Chris Riley)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:Chris Riley ns:people.person.date_of_birth?x.\n}\n"}